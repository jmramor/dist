{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/component/article/article-create/article-create.component.ts","webpack:///src/app/component/article/article-create/article-create.component.html","webpack:///src/app/component/article/article-list/article-list.component.ts","webpack:///src/app/component/article/article-list/article-list.component.html","webpack:///src/app/component/article/article.component.ts","webpack:///src/app/component/article/article.component.html","webpack:///src/app/component/dashboard/dashboard.component.ts","webpack:///src/app/component/dashboard/dashboard.component.html","webpack:///src/app/component/finish/finish-create/finish-create.component.ts","webpack:///src/app/component/finish/finish-create/finish-create.component.html","webpack:///src/app/component/finish/finish-list/finish-list.component.ts","webpack:///src/app/component/finish/finish-list/finish-list.component.html","webpack:///src/app/component/finish/finish.component.ts","webpack:///src/app/component/finish/finish.component.html","webpack:///src/app/component/home/home.component.ts","webpack:///src/app/component/home/home.component.html","webpack:///src/app/component/location/location-create/location-create.component.ts","webpack:///src/app/component/location/location-create/location-create.component.html","webpack:///src/app/component/location/location-list/location-list.component.ts","webpack:///src/app/component/location/location-list/location-list.component.html","webpack:///src/app/component/location/location.component.ts","webpack:///src/app/component/location/location.component.html","webpack:///src/app/component/login/login.component.ts","webpack:///src/app/component/login/login.component.html","webpack:///src/app/component/material/material-create/material-create.component.ts","webpack:///src/app/component/material/material-create/material-create.component.html","webpack:///src/app/component/material/material-list/material-list.component.ts","webpack:///src/app/component/material/material-list/material-list.component.html","webpack:///src/app/component/material/material.component.ts","webpack:///src/app/component/material/material.component.html","webpack:///src/app/component/navbar/navbar.component.ts","webpack:///src/app/component/navbar/navbar.component.html","webpack:///src/app/component/plate/plate-all/plate-all.component.ts","webpack:///src/app/component/plate/plate-all/plate-all.component.html","webpack:///src/app/component/plate/plate-archive/plate-archive.component.ts","webpack:///src/app/component/plate/plate-archive/plate-archive.component.html","webpack:///src/app/component/plate/plate-create/plate-create.component.ts","webpack:///src/app/component/plate/plate-create/plate-create.component.html","webpack:///src/app/component/plate/plate-list/plate-list.component.ts","webpack:///src/app/component/plate/plate-list/plate-list.component.html","webpack:///src/app/component/plate/plate-print/plate-print.component.ts","webpack:///src/app/component/plate/plate-print/plate-print.component.html","webpack:///src/app/component/plate/plate-split/plate-split.component.ts","webpack:///src/app/component/plate/plate-split/plate-split.component.html","webpack:///src/app/component/plate/plate-update/plate-update.component.ts","webpack:///src/app/component/plate/plate-update/plate-update.component.html","webpack:///src/app/component/plate/plate.component.ts","webpack:///src/app/component/plate/plate.component.html","webpack:///src/app/component/plate/plateprint-detail/plateprint-detail.component.ts","webpack:///src/app/component/plate/plateprint-detail/plateprint-detail.component.html","webpack:///src/app/component/register/register.component.ts","webpack:///src/app/component/register/register.component.html","webpack:///src/app/models/archive.ts","webpack:///src/app/models/article.ts","webpack:///src/app/models/finish.ts","webpack:///src/app/models/location.ts","webpack:///src/app/models/material.ts","webpack:///src/app/models/plate.ts","webpack:///src/app/models/plateprint.ts","webpack:///src/app/service/article.service.ts","webpack:///src/app/service/auth.guard.ts","webpack:///src/app/service/auth.service.ts","webpack:///src/app/service/authconfig.interceptor.ts","webpack:///src/app/service/finish.service.ts","webpack:///src/app/service/location.service.ts","webpack:///src/app/service/material.service.ts","webpack:///src/app/service/plate.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","config","tokenGetter","localStorage","getItem","whitelistedDomains","blacklistedRoutes","declarations","providers","bootstrap","ArticleCreateComponent","formBuilder","router","materialService","finishService","articleService","finishes","materials","articleForm","group","name","required","description","material_id","finish_id","user_id","getFinishes","subscribe","finishe","finish","push","date_created","uname","usurname","getMaterials","mats","mat","density","controls","setValue","sessionStorage","createArticle","value","pipe","data","navigate","error","console","log","ArticleListComponent","articles","getArticles","arts","art","article_id","mname","fname","ArticleComponent","DashboardComponent","FinishCreateComponent","finishForm","createFinish","FinishListComponent","FinishComponent","HomeComponent","LocationCreateComponent","locationService","locationForm","createLocation","LocationListComponent","getLocations","locations","LocationComponent","LoginComponent","authService","loginForm","email","password","isLoggedIn","userLogin","loginUser","MaterialCreateComponent","materialForm","createMaterial","MaterialListComponent","MaterialComponent","NavbarComponent","doLogout","PlateAllComponent","plateService","plates","res","weight","searchForm","area","pvc","scotch","thickness","getPlates","plate","searchform","material","filter","p","material_name","find","m","finish_name","compare","a","b","sort","volume","searchPlates","PlateArchiveComponent","route","archives","getPlate","getArchives","snapshot","paramMap","get","archive","arch","platearchive_id","plate_id","user_name","user_surname","dimx","dimy","locs","loc","location_id","PlateCreateComponent","errorMessage","plateForm","charge","dims","array","createDim","x","y","i","removeAt","ctx","canvas","nativeElement","getContext","font","x1","y1","distance","xm","ym","fillStyle","fillRect","beginPath","moveTo","el","lineTo","Math","sqrt","pow","fillText","toString","stroke","closePath","formValid","length","createPlate","alert","addDim","PlateListComponent","PlatePrintComponent","plateprints","getPlateprints","plateprint_id","PlateSplitComponent","dimsFirst","dimsSecond","location_idFirst","location_idSecond","curr_name","ctxNew","canvasNew","ctxSecond","canvasSecond","canvasDraw","split","parseInt","currArea","area1","area2","polygon1","polygon2","unshift","n1","n2","j1","j2","abs","plateSplit","updatePlate","addDimFirst","addDimSecond","PlateUpdateComponent","active","act","chrg","polygon","n","j","location","reload","PlateComponent","PlateprintDetailComponent","plateprint","getPlateprint","printcontent","document","getElementById","innerHTML","originalpage","body","window","print","printfn","RegisterComponent","fb","checkd","angForm","minLength","surname","admin","re","test","signUp","result","reset","postdata","Archive","Article","Finish","Location","Material","Plate","Plateprint","ArticleService","httpClient","apiUrl","post","handleError","msg","ErrorEvent","message","status","providedIn","AuthGuard","next","state","AuthService","setItem","token","user","removeToken","removeItem","authToken","AuthInterceptor","getToken","clone","setHeaders","Authorization","handle","FinishService","LocationService","MaterialService","PlateService","JSON","stringify","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.0049bc6d09cfe77f18ac.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './component/login/login.component';\nimport { RegisterComponent } from './component/register/register.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { DashboardComponent } from './component/dashboard/dashboard.component';\nimport { MaterialListComponent } from './component/material/material-list/material-list.component';\nimport { FinishListComponent } from './component/finish/finish-list/finish-list.component';\nimport { LocationListComponent } from './component/location/location-list/location-list.component';\nimport { LocationCreateComponent } from './component/location/location-create/location-create.component';\nimport { ArticleListComponent } from './component/article/article-list/article-list.component';\nimport { ArticleCreateComponent } from './component/article/article-create/article-create.component';\nimport { PlateListComponent } from './component/plate/plate-list/plate-list.component';\nimport { PlateAllComponent } from './component/plate/plate-all/plate-all.component';\nimport { PlateCreateComponent } from './component/plate/plate-create/plate-create.component';\nimport { PlateUpdateComponent } from './component/plate/plate-update/plate-update.component';\nimport { PlatePrintComponent } from './component/plate/plate-print/plate-print.component';\nimport { PlateSplitComponent } from './component/plate/plate-split/plate-split.component';\nimport { PlateArchiveComponent } from './component/plate/plate-archive/plate-archive.component';\nimport { PlateprintDetailComponent } from './component/plate/plateprint-detail/plateprint-detail.component';\nimport { MaterialCreateComponent } from './component/material/material-create/material-create.component';\nimport { FinishCreateComponent } from './component/finish/finish-create/finish-create.component';\n\nimport { AuthGuard } from './service/auth.guard';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent, canActivate: [AuthGuard] },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'materiallist', component: MaterialListComponent, canActivate: [AuthGuard] },\n  { path: 'materialcreate', component: MaterialCreateComponent, canActivate: [AuthGuard] },\n  { path: 'finishlist', component: FinishListComponent, canActivate: [AuthGuard] },\n  { path: 'finishcreate', component: FinishCreateComponent, canActivate: [AuthGuard] },\n  { path: 'locationlist', component: LocationListComponent, canActivate: [AuthGuard] },\n  { path: 'locationcreate', component: LocationCreateComponent, canActivate: [AuthGuard] },\n  { path: 'articlelist', component: ArticleListComponent, canActivate: [AuthGuard] },\n  { path: 'articlecreate', component: ArticleCreateComponent, canActivate: [AuthGuard] },\n  { path: 'platelist', component: PlateListComponent, canActivate: [AuthGuard] },\n  { path: 'platecreate', component: PlateCreateComponent, canActivate: [AuthGuard] },\n  { path: 'plate/:plate_id', component: PlateUpdateComponent, canActivate: [AuthGuard] },\n  { path: 'plateprint/:plate_id', component: PlatePrintComponent, canActivate: [AuthGuard] },\n  { path: 'platearchive/:plate_id', component: PlateArchiveComponent, canActivate: [AuthGuard] },\n  { path: 'plateprintdetail/:plateprint_id', component: PlateprintDetailComponent, canActivate: [AuthGuard] },\n  { path: 'platesplit/:plate_id', component: PlateSplitComponent, canActivate: [AuthGuard] },\n  { path: 'plates', component: PlateAllComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'plateapp';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HashLocationStrategy, LocationStrategy  } from '@angular/common';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { NavbarComponent } from './component/navbar/navbar.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { RegisterComponent } from './component/register/register.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { DashboardComponent } from './component/dashboard/dashboard.component';\nimport { AuthInterceptor } from './service/authconfig.interceptor';\nimport { MaterialComponent } from './component/material/material.component';\nimport { MaterialListComponent } from './component/material/material-list/material-list.component';\nimport { FinishComponent } from './component/finish/finish.component';\nimport { FinishListComponent } from './component/finish/finish-list/finish-list.component';\nimport { LocationComponent } from './component/location/location.component';\nimport { LocationListComponent } from './component/location/location-list/location-list.component';\nimport { ArticleComponent } from './component/article/article.component';\nimport { ArticleListComponent } from './component/article/article-list/article-list.component';\nimport { PlateComponent } from './component/plate/plate.component';\nimport { PlateListComponent } from './component/plate/plate-list/plate-list.component';\nimport { LocationCreateComponent } from './component/location/location-create/location-create.component';\nimport { ArticleCreateComponent } from './component/article/article-create/article-create.component';\nimport { PlateCreateComponent } from './component/plate/plate-create/plate-create.component';\nimport { PlateUpdateComponent } from './component/plate/plate-update/plate-update.component';\nimport { PlatePrintComponent } from './component/plate/plate-print/plate-print.component';\nimport { PlateArchiveComponent } from './component/plate/plate-archive/plate-archive.component';\nimport { PlateprintDetailComponent } from './component/plate/plateprint-detail/plateprint-detail.component';\nimport { PlateSplitComponent } from './component/plate/plate-split/plate-split.component';\nimport { MaterialCreateComponent } from './component/material/material-create/material-create.component';\nimport { FinishCreateComponent } from './component/finish/finish-create/finish-create.component';\nimport { PlateAllComponent } from './component/plate/plate-all/plate-all.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    MaterialComponent,\n    MaterialListComponent,\n    FinishComponent,\n    FinishListComponent,\n    LocationComponent,\n    LocationListComponent,\n    ArticleComponent,\n    ArticleListComponent,\n    PlateComponent,\n    PlateListComponent,\n    LocationCreateComponent,\n    ArticleCreateComponent,\n    PlateCreateComponent,\n    PlateUpdateComponent,\n    PlatePrintComponent,\n    PlateArchiveComponent,\n    PlateprintDetailComponent,\n    PlateSplitComponent,\n    MaterialCreateComponent,\n    FinishCreateComponent,\n    PlateAllComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: function  tokenGetter() {\n             return     localStorage.getItem('access_token');},\n        whitelistedDomains: ['localhost:4200','192.168.1.105/php','192.168.1.105'],\n        blacklistedRoutes: ['']\n      }\n    }),\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    {provide : LocationStrategy , useClass: HashLocationStrategy}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { Material } from '../../../models/material';\nimport { MaterialService } from '../../../service/material.service';\n\nimport { Finish } from '../../../models/finish';\nimport { FinishService } from '../../../service/finish.service';\n\nimport { Article } from '../../../models/article';\nimport { ArticleService } from '../../../service/article.service';\n\n@Component({\n  selector: 'app-article-create',\n  templateUrl: './article-create.component.html',\n  styleUrls: ['./article-create.component.css']\n})\nexport class ArticleCreateComponent implements OnInit {\n\n  articleForm;\n\n  article: Article;\n\n  finishes: Finish[] = [];\n  materials: Material[] = [];\n\n  constructor(private formBuilder: FormBuilder, private router: Router, public materialService: MaterialService, public finishService: FinishService, public articleService: ArticleService) { \n    this.articleForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: [''],\n      material_id: [''],\n      finish_id: [''],\n      user_id: ['']\n    })\n  }\n\n  ngOnInit(): void {\n    this.finishService.getFinishes().subscribe((finishes: Finish[]) => {\n      let finishe = finishes['body'];\n\n      for( let finish of finishe ){\n        this.finishes.push(new Finish(finish.finish_id, finish.name, finish.description, finish.date_created, finish.uname, finish.usurname, finish.user_id));\n      }\n      //console.log( this.finishes );\n    });\n    this.materialService.getMaterials().subscribe((materials: Material[])=> {\n      let mats = materials['body'];\n\n      for( let mat of mats ){\n        this.materials.push(new Material(mat.material_id, mat.name, mat.description, mat.date_created, mat.uname, mat.usurname, mat.density, mat.user_id));\n      }\n      //console.log(this.materials)\n    });\n  }\n\n\n  createArticle(articleForm){\n    this.articleForm.controls['user_id'].setValue(sessionStorage.getItem(\"user\"));\n\n    this.articleService.createArticle(this.articleForm.value).pipe(first()).subscribe(       \n      data => {\n        this.router.navigate(['/articlelist']);\n    },\n    error => {\n      console.log(error)\n    });\n    console.log(this.articleForm.value);\n  }\n}\n","<div class=\"row\" style=\"margin-top: 1rem;\">\n    <div class=\"col-md-4\"></div>\n    <div class=\"col-md-4\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">Ustvari nov artikel</h5>\n                <form [formGroup]=\"articleForm\" (ngSubmit)=\"createArticle(articleForm)\" >\n                    <div class=\"form-group\">\n                        <label for=\"name\">Naziv artikla</label>\n                        <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" placeholder=\"Naziv\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"description\">Opis</label>\n                        <textarea class=\"form-control\" id=\"description\" formControlName=\"description\"></textarea>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"material\">Material</label>\n                        <select class=\"form-control\" id=\"material\" formControlName=\"material_id\" required>\n                            <option *ngFor=\"let mat of materials\" [value]=\"mat.material_id\">{{ mat.name }}</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"finish\">Obdelava</label>\n                        <select class=\"form-control\" id=\"finish\" formControlName=\"finish_id\" required>\n                            <option *ngFor=\"let fin of finishes\" [value]=\"fin.finish_id\">{{ fin.name }}</option>\n                        </select>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Dodaj artikel</button>\n                </form>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-4\"></div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { Article } from '../../../models/article';\nimport { ArticleService } from '../../../service/article.service';\n\n@Component({\n  selector: 'app-article-list',\n  templateUrl: './article-list.component.html',\n  styleUrls: ['./article-list.component.css']\n})\nexport class ArticleListComponent implements OnInit {\n\n  articles: Article[] = [];\n\n  constructor( private articleService: ArticleService ) { }\n\n  ngOnInit(): void {\n    this.articleService.getArticles().subscribe((articles: Article[]) =>{\n      let arts = articles['body'];\n      \n      for(let art of arts ){\n        this.articles.push(new Article(\n          art.article_id,\n          art.name,\n          art.description,\n          art.date_created,\n          art.uname,\n          art.usurname,\n          art.user_id,\n          art.mname,\n          art.fname\n        ));\n      }\n    });\n  }\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n    <div class=\"row\">\n        <a class=\"btn btn-success\" [routerLink]=\"['/articlecreate']\">Kreiranje artikla</a>\n    </div>\n    <table class=\"table\" style=\"margin-top: 1rem;\">\n        <tr>\n            <th>Oznaka</th>\n            <th>Material</th>\n            <th>Obdelava</th>\n            <th></th>\n        </tr>\n        <tr *ngFor=\"let art of articles\">\n            <td>{{ art.name }}</td>\n            <td>{{ art.material_name }}</td>\n            <td>{{ art.finish_name }}</td>\n            <td></td>\n        </tr>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-article',\n  templateUrl: './article.component.html',\n  styleUrls: ['./article.component.css']\n})\nexport class ArticleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>article works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n    \n\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { Finish } from 'src/app/models/finish';\nimport { FinishService } from 'src/app/service/finish.service';\n\n@Component({\n  selector: 'app-finish-create',\n  templateUrl: './finish-create.component.html',\n  styleUrls: ['./finish-create.component.css']\n})\nexport class FinishCreateComponent implements OnInit {\n\n  finishForm;\n\n  constructor(public finishService: FinishService, private formBuilder: FormBuilder, private router: Router) { \n    this.finishForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      user_id: ['']\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  createFinish( finishForm ): void {\n    this.finishForm.controls['user_id'].setValue(sessionStorage.getItem(\"user\"));\n    \n    this.finishService.createFinish(this.finishForm.value).pipe(first()).subscribe(       \n      data => {\n      this.router.navigate(['/finishlist']);\n    },\n    error => {\n      console.log(error)\n    });\n  }\n\n}\n","<div class=\"row\" style=\"margin-top: 1rem;\">\n    <div class=\"col-md-4\"></div>\n    <div class=\"col-md-4\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">Dodaj novo obdelavo</h5>\n                <form [formGroup]=\"finishForm\" (ngSubmit)=\"createFinish(finishForm)\" >\n                    <div class=\"form-group\">\n                        <label for=\"name\">Naziv obdelave</label>\n                        <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" placeholder=\"Naziv\" required>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Dodaj obdelavo</button>\n                </form>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-4\"></div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { Finish } from 'src/app/models/finish';\nimport { FinishService } from 'src/app/service/finish.service';\n\n@Component({\n  selector: 'app-finish-list',\n  templateUrl: './finish-list.component.html',\n  styleUrls: ['./finish-list.component.css']\n})\nexport class FinishListComponent implements OnInit {\n  \n  finishes: Finish[];\n\n  constructor( private finishService: FinishService ) { }\n\n  ngOnInit(): void {\n    this.finishService.getFinishes().subscribe((finishes: Finish[]) =>{\n      this.finishes = finishes['body'];\n      console.log(this.finishes[0]);\n    })\n  }\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n    <div class=\"row\">\n        <a class=\"btn btn-success\" [routerLink]=\"['/finishcreate']\">Dodaj novo obdelavo</a>\n    </div>\n    <table class=\"table\" style=\"margin-top: 1rem;\">\n        <tr>\n            <th>Oznaka</th>\n            <th>Opis</th>\n            <th></th>\n        </tr>\n        <tr *ngFor=\"let fin of finishes\">\n            <td>{{ fin.name }}</td>\n            <td>{{ fin.description }}</td>\n            <td></td>\n        </tr>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-finish',\n  templateUrl: './finish.component.html',\n  styleUrls: ['./finish.component.css']\n})\nexport class FinishComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>finish works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-3\"></div>\n        <div class=\"col-sm-6\">\n            <app-login></app-login>\n        </div>\n        <div class=\"col-sm-3\"></div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { Location } from '../../../models/location';\nimport { LocationService } from '../../../service/location.service';\n\n@Component({\n  selector: 'app-location-create',\n  templateUrl: './location-create.component.html',\n  styleUrls: ['./location-create.component.css']\n})\nexport class LocationCreateComponent implements OnInit {\n\n  locationForm;\n\n  constructor( public locationService: LocationService, private formBuilder: FormBuilder, private router: Router ) {\n    this.locationForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      user_id: ['']\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  createLocation(locationForm){\n    this.locationForm.controls['user_id'].setValue(sessionStorage.getItem(\"user\"));\n    this.locationService.createLocation(this.locationForm.value.name, this.locationForm.value.user_id).pipe(first()).subscribe(       \n      data => {\n      this.router.navigate(['/locationlist']);\n    },\n    error => {\n      console.log(error)\n    });\n    console.log(this.locationForm.value);\n  }\n}\n","<div class=\"row\" style=\"margin-top: 1rem;\">\n    <div class=\"col-md-4\"></div>\n    <div class=\"col-md-4\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">Ustvari novo lokacijo</h5>\n                <form [formGroup]=\"locationForm\" (ngSubmit)=\"createLocation(locationForm)\" >\n                    <div class=\"form-group\">\n                        <label for=\"name\">Naziv lokacije</label>\n                        <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" placeholder=\"Naziv\" required>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Dodaj lokacijo</button>\n                </form>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-4\"></div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { Location } from '../../../models/location';\nimport { LocationService } from '../../../service/location.service';\n\n@Component({\n  selector: 'app-location-list',\n  templateUrl: './location-list.component.html',\n  styleUrls: ['./location-list.component.css']\n})\nexport class LocationListComponent implements OnInit {\n\n  locations: Location[];\n\n  constructor( private locationService: LocationService ) { }\n\n  ngOnInit(): void {\n    this.locationService.getLocations().subscribe((locations: Location[]) =>{\n      this.locations = locations['body'];\n      //console.log(this.locations[0]);\n    })\n  }\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n    <div class=\"row\">\n        <a class=\"btn btn-success\" [routerLink]=\"['/locationcreate']\">Kreiranje lokacije</a>\n    </div>\n    <div class=\"row\" style=\"margin-top: 1rem;\">\n        <table class=\"table\">\n            <tr>\n                <th>Oznaka lokacije</th>\n            </tr>\n            <tr *ngFor=\"let loc of locations\">\n                <td>{{ loc.name }}</td>\n            </tr>\n        </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-location',\n  templateUrl: './location.component.html',\n  styleUrls: ['./location.component.css']\n})\nexport class LocationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>location works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../service/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm;\n  \n\n  constructor( private formBuilder: FormBuilder, private authService: AuthService, private router: Router ) { \n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    if( this.authService.isLoggedIn == true ){\n      this.router.navigate(['/platelist']);\n    }\n  }\n\n  loginUser(loginForm){\n    this.authService.userLogin(loginForm.value.email, loginForm.value.password)\n    .pipe(first())\n    .subscribe(\n      data => {\n        this.router.navigate(['/platelist']);\n      },\n      error => {\n        console.log(error)\n      }\n    );\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <h5 class=\"card-title\">Prijava:</h5>\n      \n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser(loginForm)\">\n            <div class=\"form-group\">\n                <label for=\"email\">Email:</label>\n                <input type=\"email\" class=\"form-control\" formControlName=\"email\" required>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Geslo</label>\n                <input type=\"password\" class=\"form-control\" formControlName=\"password\" required>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\">Prijava</button>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { Material } from '../../../models/material';\nimport { MaterialService } from '../../../service/material.service';\n\n@Component({\n  selector: 'app-material-create',\n  templateUrl: './material-create.component.html',\n  styleUrls: ['./material-create.component.css']\n})\nexport class MaterialCreateComponent implements OnInit {\n\n  materialForm;\n\n  constructor(public materialService: MaterialService, private formBuilder: FormBuilder, private router: Router) { \n    this.materialForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      density: [''],\n      user_id: ['']\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  createMaterial( materialForm ): void {\n    this.materialForm.controls['user_id'].setValue(sessionStorage.getItem(\"user\"));\n    \n    this.materialService.createMaterial(this.materialForm.value).pipe(first()).subscribe(       \n      data => {\n      this.router.navigate(['/materiallist']);\n    },\n    error => {\n      console.log(error)\n    });\n  }\n\n}\n","<div class=\"row\" style=\"margin-top: 1rem;\">\n    <div class=\"col-md-4\"></div>\n    <div class=\"col-md-4\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">Dodaj nov material</h5>\n                <form [formGroup]=\"materialForm\" (ngSubmit)=\"createMaterial(materialForm)\" >\n                    <div class=\"form-group\">\n                        <label for=\"name\">Naziv materiala</label>\n                        <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" placeholder=\"Naziv\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"density\">Povprečna gostota g/cm&#xb3;</label>\n                        <input type=\"number\" class=\"form-control\" id=\"density\" formControlName=\"density\" placeholder=\"Gostota\" required>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Dodaj material</button>\n                </form>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-4\"></div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { Material } from '../../../models/material';\nimport { MaterialService } from '../../../service/material.service';\n\n@Component({\n  selector: 'app-material-list',\n  templateUrl: './material-list.component.html',\n  styleUrls: ['./material-list.component.css']\n})\nexport class MaterialListComponent implements OnInit {\n\n  materials: Material[];\n\n  constructor( private materialService: MaterialService ) { }\n\n  ngOnInit(): void {\n    this.materialService.getMaterials().subscribe((materials: Material[]) =>{\n      this.materials = materials['body'];\n      console.log(this.materials[0]);\n    })\n  }\n\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n    <div class=\"row\">\n        <a class=\"btn btn-success\" [routerLink]=\"['/materialcreate']\">Dodaj nov material</a>\n    </div>\n    <div class=\"row\" style=\"margin-top: 1rem;\">\n        <table class=\"table\">\n            <tr>\n                <th>Oznaka</th>\n                <th>Gostota g/cm&#xb3;</th>\n                <th></th>\n            </tr>\n            <tr *ngFor=\"let mat of materials\">\n                <td>{{ mat.name }}</td>\n                <td>{{ mat.density }}</td>\n                <td></td>\n            </tr>\n        </table>\n    </div>\n    \n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-material',\n  templateUrl: './material.component.html',\n  styleUrls: ['./material.component.css']\n})\nexport class MaterialComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>material works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../service/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor( public authService: AuthService ) { }\n\n  ngOnInit(): void {\n  }\n\n  logout(){\n    this.authService.doLogout();\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/platelist']\">Plateapp</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n        <ul class=\"navbar-nav\">\n            <li class=\"nav-item dropdown\">\n                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuPlate\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Plošče</a>\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuPlate\">\n                    <a class=\"dropdown-item\" [routerLink]=\"['/platelist']\">Seznam aktivnih</a>\n                    <a class=\"dropdown-item\" [routerLink]=\"['/platecreate']\">Dodaj novo</a>\n                    <a class=\"dropdown-item\" [routerLink]=\"['/plates']\">Seznam vseh</a>\n                </div>\n            </li>\n            <li class=\"nav-item dropdown\">\n                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuTools\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Orodja</a>\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuTools\">\n                    <a class=\"dropdown-item\" [routerLink]=\"['/articlelist']\">Artikli</a>\n                    <a class=\"dropdown-item\" [routerLink]=\"['/locationlist']\">Lokacije</a>\n                    <a class=\"dropdown-item\" [routerLink]=\"['/materiallist']\">Materjali</a>\n                    <a class=\"dropdown-item\" [routerLink]=\"['/finishlist']\">Obdelave</a>\n                    <a class=\"dropdown-item\" [routerLink]=\"['/register']\">Registracija uporabnika</a>\n                </div>\n            </li>\n            <button (click)=\"logout()\" *ngIf=\"this.authService.isLoggedIn\" type=\"button\" class=\"btn btn-danger\">Izpis</button>\n        </ul>\n    </div>\n  </nav>","import { Component, OnInit, ElementRef, AfterViewInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray, FormArrayName, FormControl } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Observable } from \"rxjs\";\nimport { HttpClient } from '@angular/common/http';\n\nimport { Plate } from '../../../models/plate';\nimport { PlateService } from '../../../service/plate.service';\n\nimport { Material } from '../../../models/material';\nimport { MaterialService } from '../../../service/material.service';\n\nimport { Finish } from '../../../models/finish';\nimport { FinishService } from '../../../service/finish.service';\n\n@Component({\n  selector: 'app-plate-all',\n  templateUrl: './plate-all.component.html',\n  styleUrls: ['./plate-all.component.css']\n})\nexport class PlateAllComponent implements OnInit {\n  plates: Plate[] = [];\n  res: Plate[] = [];\n  finishes: Finish[] = [];\n  weight: number = 0;\n  materials: Material[] = [];\n\n  searchForm;\n\n  constructor( public plateService: PlateService, public finishService: FinishService, public materialService: MaterialService, private formBuilder: FormBuilder ) { \n    this.searchForm = this.formBuilder.group({\n      area: [''],\n      material_id: [''],\n      finish_id: [''],\n      pvc: [''],\n      scotch: [''],\n      thickness: ['']\n    });\n  }\n\n  ngOnInit(): void {\n    \n    this.plateService.getPlates()\n      .pipe(first())\n      .subscribe( (plates: Plate[]) => {\n        for( let plate of plates ){\n          this.plates.push(plate);\n        }\n      }\n    );\n\n    this.res = this.plates;\n    this.finishService.getFinishes().subscribe((finishes: Finish[]) => {\n      let finishe = finishes['body'];\n\n      for( let finish of finishe ){\n        this.finishes.push(new Finish(finish.finish_id, finish.name, finish.description, finish.date_created, finish.uname, finish.usurname, finish.user_id));\n      }\n      //console.log( this.finishes );\n    });\n\n    this.materialService.getMaterials().subscribe((materials: Material[])=> {\n      let mats = materials['body'];\n\n      for( let mat of mats ){\n        this.materials.push(new Material(mat.material_id, mat.name, mat.description, mat.date_created, mat.uname, mat.usurname, mat.density, mat.user_id));\n      }\n      //console.log(this.materials)\n    });\n\n    console.log(this.plates)\n  }\n\n  searchPlates(searchform: any): void {\n  \n    let scotch = 0;\n    let pvc = 0;\n    let area = 0;\n    let thickness = 0;\n    let material = \"\";\n    let finish = \"\";\n    let density = 0;\n\n    if(this.searchForm.controls['area'].value != \"\" && this.searchForm.controls['area'].value != null){\n      area = this.searchForm.controls['area'].value;\n    }\n    if(this.searchForm.controls['thickness'].value != \"\" && this.searchForm.controls['thickness'].value != null ){\n      thickness = this.searchForm.controls['thickness'].value;\n    }\n    if(this.searchForm.controls['finish_id'].value != \"\" ){\n      finish = this.searchForm.controls['finish_id'].value;\n    }\n    if(this.searchForm.controls['material_id'].value != \"\" ){\n      material = this.searchForm.controls['material_id'].value;\n    }\n    if(this.searchForm.controls['pvc'].value == true ){\n      pvc = 1;\n    }\n    if(this.searchForm.controls['scotch'].value == true ){\n      scotch = 1;\n    }\n\n    this.plates = this.res;\n\n    this.plates = this.plates.filter(p => p.area >= area);\n\n    if( thickness != 0 ){\n      this.plates = this.plates.filter(p => p.thickness == thickness );\n    }\n    if( material != \"\" ){\n      this.plates = this.plates.filter(p => p.material_name == material );\n      let mat = this.materials.find(m => m.name == material );\n      density = mat.density;\n    }\n    if( finish != \"\" ){\n      this.plates = this.plates.filter(p => p.finish_name == finish );\n    }\n    if( scotch == 1 ){\n      this.plates = this.plates.filter(p => p.scotch == scotch );\n    }\n    if( pvc == 1 ){\n      this.plates = this.plates.filter(p => p.pvc == pvc );\n    }\n\n    function compare(a: Plate, b: Plate ): number{\n      if( a.area > b.area ) return 1;\n      if( a.area < b.area ) return -1;\n      return 0; \n    }\n\n    this.plates.sort(compare);\n\n    // area is in square cm, thickness is in mm\n    let volume = area*(thickness/10);\n    // density is g/cubic cm\n    this.weight = (volume*density)/1000;\n\n    console.log(this.plates);\n  }\n\n\n}\n","\n<div class=\"container\" style=\"margin-top: 1rem;\">\n    <a class=\"btn btn-success\" [routerLink]=\"['/platecreate']\">Kreiranje plošče</a>\n    <div class=\"row\" style=\"margin-top: 1rem;\">\n        <div class=\"card w-100\">\n            <div class=\"card-body\">\n                <h6>Iskalnik</h6>\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"searchPlates(searchForm)\" >\n                    <div class=\"row\">\n                        <div class=\"col-sm-3\">\n                            <input type=\"number\" class=\"form-control\" id=\"area\" placeholder=\"Površina (cm&#178;)\" formControlName=\"area\">\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <input type=\"number\" class=\"form-control\" id=\"thickness\" placeholder=\"Debelina (mm)\" formControlName=\"thickness\">\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <select class=\"form-control\" id=\"material\" formControlName=\"material_id\">\n                                <option [value]=\"\" selected>Material</option>\n                                <option *ngFor=\"let mat of materials\" [value]=\"mat.name\">{{ mat.name }}</option>\n                            </select>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <select class=\"form-control\" id=\"finish\" formControlName=\"finish_id\">\n                                <option [value]=\"\" selected>Obdelava</option>\n                                <option *ngFor=\"let fin of finishes\" [value]=\"fin.name\">{{ fin.name }}</option>\n                            </select>\n                        </div>\n                        <div class=\"col-sm-1\">\n                            <div class=\"form-check form-check-inline\">\n                                <input type=\"checkbox\" class=\"form-check-input\" id=\"pvc\" formControlName=\"pvc\">\n                                <label class=\"form-check-label\" for=\"pvc\">PVC</label>\n                            </div>\n                            <div class=\"form-check form-check-inline\">\n                                <input type=\"checkbox\" class=\"form-check-input\" id=\"scotch\" formControlName=\"scotch\">\n                                <label class=\"form-check-label\" for=\"scotch\">SB</label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-1\">\n                            <button class=\"btn btn-outline-dark\">Išči</button>\n                        </div>\n                    </div>\n                </form>\n                <div *ngIf=\"weight!=0\">\n                    <h6>Predvidena teža: </h6>\n                    <h5>{{ weight }} kg</h5>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\" style=\"margin-top: 1rem;\">\n        <table class=\"table\">\n            <tr>\n                <th>Artikel</th>\n                <th>Št. formata</th>\n                <th>Površina (cm&#178;)</th>\n                <th>Debelina (mm)</th>\n                <th>Teža</th>\n                <th>Lokacija</th>\n                <th></th>\n            </tr>\n            <tr *ngFor=\"let plate of plates\">\n                <td>{{ plate.article_name }} - {{ plate.material_name }} {{ plate.finish_name }} <div *ngIf=\"plate.pvc==1 || plate.pvc=='1'\">+ PVC</div><div *ngIf=\"plate.scotch==1 || plate.scotch=='1'\">+ SB</div></td>\n                <td>{{ plate.name }}</td>\n                <td>{{ plate.area }}</td>\n                <td>{{ plate.thickness }}</td>\n                <td>{{ (((plate.thickness/10) * plate.area) * plate.density)/1000 }} kg</td>\n                <td>{{ plate.location_name }}</td>\n                <td><a routerLink=\"/plate/{{ plate.plate_id }}\">Posodobi</a></td>\n            </tr>\n        </table>\n    </div>\n</div>","import { Component, OnInit, ElementRef, AfterViewInit, ViewChild, AfterContentInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray, FormArrayName, FormControl } from '@angular/forms';\nimport { first, timeout } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Plate } from '../../../models/plate';\nimport { Archive } from '../../../models/archive';\nimport { PlateService } from '../../../service/plate.service';\n\nimport { Location } from '../../../models/location';\nimport { LocationService } from '../../../service/location.service';\n\nimport { Article } from '../../../models/article'; \nimport { ArticleService } from '../../../service/article.service';\n\n@Component({\n  selector: 'app-plate-archive',\n  templateUrl: './plate-archive.component.html',\n  styleUrls: ['./plate-archive.component.css']\n})\nexport class PlateArchiveComponent implements OnInit {\n  \n  id: number;\n  dims: FormArray;\n  articles: Article[] = [];\n  locations: Location[] = [];\n  plates: Plate[] = [];\n  plate: Plate = new Plate();\n  archives: Archive[] = [];\n  plateForm;\n  area: number;\n  \n  constructor(private formBuilder: FormBuilder, \n    private router: Router,\n    private route: ActivatedRoute, \n    public locationService: LocationService, \n    public articleService: ArticleService, \n    public plateService: PlateService) {\n  }\n\n  ngOnInit(): void {\n    \n    this.getPlate();\n\n    this.plateService.getArchives(+this.route.snapshot.paramMap.get('plate_id')).subscribe((archive: Archive[]) => {\n      for( let arch of archive ){\n        this.archives.push(new Archive(\n          arch.platearchive_id,\n          arch.plate_id,\n          arch.date_created,\n          arch.user_name,\n          arch.user_surname,\n          arch.user_id,\n          arch.thickness,\n          arch.area,\n          arch.dimx,\n          arch.dimy,\n          arch.density,\n          arch.weight\n        ))\n      }\n    });\n\n    console.log(this.archives);\n\n    this.articleService.getArticles().subscribe((articles: Article[]) =>{\n      let arts = articles['body'];\n      \n      for(let art of arts ){\n        this.articles.push(new Article(\n          art.article_id,\n          art.name,\n          art.description,\n          art.date_created,\n          art.uname,\n          art.usurname,\n          art.user_id,\n          art.mname,\n          art.fname\n        ));\n      }\n    });\n    \n    this.locationService.getLocations().subscribe((locations: Location[]) => {\n      let locs = locations['body'];\n      \n      for(let loc of locs ){\n        this.locations.push(new Location(\n          loc.location_id, \n          loc.name, \n          loc.date_created, \n          loc.uname, \n          loc.usurname, \n          loc.user_id\n        ));\n      }\n    });\n  }\n\n  getPlate(): void {\n    this.plateService.getPlate(+this.route.snapshot.paramMap.get('plate_id')).subscribe(data => {\n      this.plate = data;\n    } );\n    \n  }\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n    <div class=\"row\">\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" [routerLink]=\"['/platecreate']\">Kreiranje plošče</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" [routerLink]=\"['/platelist']\">Seznam plošč</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" routerLink=\"/plate/{{ plate.plate_id }}\">Posodobi ploščo</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" routerLink=\"/plateprint/{{ plate.plate_id }}\">Natisni odrez</a>\n        </div>\n        <div class=\"col-sm-4\"></div>\n    </div>\n    <div class=\"card\" style=\"margin-top: 1rem;\">\n        <div class=\"card-body\">\n            <table class=\"table\">\n                <tr>\n                    <td>Artikel - Material/Obdelava/Debelina - Naziv Plošče:</td>\n                    <td>{{ plate.article_name }} - {{ plate.material_name }} {{ plate.finish_name }} {{ plate.thickness }} mm - {{ plate.name }}</td>\n                </tr>\n                <tr>\n                    <td>Šarža:</td>\n                    <td><h5>{{ plate.charge }}</h5></td>\n                </tr>\n                <tr>\n                    <td>Površina trenutno na voljo:</td>\n                    <td>{{ plate.area }} cm&#178;</td>\n                </tr>\n                <tr>\n                    <td>PVC/Scotch:</td>\n                    <td>\n                        <div *ngIf=\"plate.pvc == 1; else elseBlockPvc\">DA / </div>\n                        <ng-template #elseBlockPvc>NE / </ng-template>\n                        <div *ngIf=\"plate.scotch == 1; else elseBlockScotch\">DA</div>\n                        <ng-template #elseBlockScotch>NE</ng-template>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Plošča dodana:</td>\n                    <td>{{ plate.date_created }}</td>\n                </tr>\n                <tr>\n                    <td>Zadnja sprememba:</td>\n                    <td>\n                        <div *ngIf=\"plate.date_changed != '01.01.1970 01:00'; else elseBlockDate\">{{ plate.date_changed }}</div>\n                        <ng-template #elseBlockDate>Plošča še ni bila spremenjena</ng-template>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Trenutna lokacija:</td>\n                    <td>{{ plate.location_name }}</td>\n                </tr>\n            </table>\n        </div>\n        \n    </div>\n    <div class=\"card\" style=\"margin-top: 1rem;\">\n        <div class=\"card-body\">\n            <table class=\"table\">\n                <tr>\n                    <th>Datum spremembe</th>\n                    <th>Površina plošče</th>\n                    <th>Teža plošče</th>\n                    <th>Uporabnik</th>\n                    <th></th>\n                </tr>\n                <tr *ngFor=\"let arch of archives\">\n                    <td>{{ arch.date_created }}</td>\n                    <td>{{ arch.area }} cm&#178;</td>\n                    <td>{{ arch.weight }} kg</td>\n                    <td>{{ arch.user_name }} {{ arch.user_surname }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ElementRef, AfterViewInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray, FormArrayName, FormControl } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { Plate } from '../../../models/plate';\nimport { PlateService } from '../../../service/plate.service';\n\nimport { Location } from '../../../models/location';\nimport { LocationService } from '../../../service/location.service';\n\nimport { Article } from '../../../models/article'; \nimport { ArticleService } from '../../../service/article.service';\nimport { ThrowStmt } from '@angular/compiler';\n\n@Component({\n  selector: 'app-plate-create',\n  templateUrl: './plate-create.component.html',\n  styleUrls: ['./plate-create.component.css']\n})\nexport class PlateCreateComponent implements OnInit {\n  \n  @ViewChild('platedraw', { static: true })\n  canvas: ElementRef<HTMLCanvasElement>;  \n  \n  private ctx: CanvasRenderingContext2D;\n  errorMessage = '';\n  plateForm;\n  dims: FormArray;\n\n  articles: Article[] = [];\n  locations: Location[] = [];\n\n  constructor(\n    private formBuilder: FormBuilder, \n    private router: Router, \n    public locationService: LocationService, \n    public articleService: ArticleService, \n    public plateService: PlateService ) {\n      this.plateForm = this.formBuilder.group({\n        article_id: [''],\n        name: ['', Validators.required],\n        charge: ['', Validators.required],\n        thickness: ['', Validators.required],\n        pvc: [''],\n        scotch: [''],\n        location_id: ['', Validators.required],\n        user_id: [''],\n        dims: this.formBuilder.array([ this.createDim() ])\n      });\n   }\n\n   createDim(): FormGroup{\n     return this.formBuilder.group({\n       x: [''],\n       y: ['']\n     })\n   }\n\n  addDim(): void {\n    this.dims = this.plateForm.get('dims') as FormArray;\n    this.dims.push(this.createDim());\n   }\n\n   removeDim(i): void {\n    this.dims = this.plateForm.get('dims') as FormArray;\n    this.dims.removeAt(i);\n   }\n\n   ngOnInit(): void {\n    this.articleService.getArticles().subscribe((articles: Article[]) =>{\n      let arts = articles['body'];\n      \n      for(let art of arts ){\n        this.articles.push(new Article(\n          art.article_id,\n          art.name,\n          art.description,\n          art.date_created,\n          art.uname,\n          art.usurname,\n          art.user_id,\n          art.mname,\n          art.fname\n        ));\n      }\n    });\n\n    this.locationService.getLocations().subscribe((locations: Location[]) => {\n      let locs = locations['body'];\n      \n      for(let loc of locs ){\n        this.locations.push(new Location(\n          loc.location_id, \n          loc.name, \n          loc.date_created, \n          loc.uname, \n          loc.usurname, \n          loc.user_id\n        ));\n      }\n    })\n\n    this.ctx = this.canvas.nativeElement.getContext('2d');\n    this.ctx.font = \"16px Arial\";\n  }\n\n  animate(): void {\n    let dims =  this.plateForm.get('dims').controls;\n    let x, y, x1, y1, distance, xm, ym;\n\n    this.ctx.fillStyle = \"#FFFFFF\";\n    this.ctx.fillRect(0,0,700,350);\n    this.ctx.fillStyle = \"black\";\n\n    this.ctx.beginPath();\n    this.ctx.moveTo(5,5);\n\n    xm = ym = 0;\n    x1 = 5;\n    y1 = 5;\n    \n    for( let el of dims ){\n      x = (el.controls['x'].value/10)+5;\n      y = (el.controls['y'].value/10)+5;\n      this.ctx.lineTo(x,y);\n\n      //distance between 2 points... formula src: https://www.mathplanet.com/education/algebra-2/conic-sections/distance-between-two-points-and-the-midpoint\n      distance = Math.sqrt( (Math.pow((x1-x),2) + Math.pow((y1-y),2)) );\n\n      //midpoint between 2 points... formula from same url as formula for distance\n      xm = (x+x1)/2;\n      ym = (y+y1)/2;\n\n      //locate output text coordinates\n      if( x1 == x ){\n        this.ctx.fillText((distance*10).toString() + \" mm\", xm+20, ym );\n      } else if( y1 == y ){\n        this.ctx.fillText((distance*10).toString() + \" mm\", xm, ym+20 );\n      } else{\n        this.ctx.fillText((distance*10).toString() + \" mm\", xm+20, ym+20 );\n      }\n\n      x1 = x;\n      y1 = y;\n    }\n\n    this.ctx.lineTo(5,5);\n\n    distance = Math.sqrt( (Math.pow((x1-5),2) + Math.pow((y1-5),2)) );\n\n    xm = (5+x1)/2;\n    ym = (5+y1)/2;\n    \n    //locate output text coordinates\n    if( x1 == x ){\n      this.ctx.fillText((distance*10).toString() + \" mm\", xm+20, ym );\n    } else if( y1 == y ){\n      this.ctx.fillText((distance*10).toString() + \" mm\", xm, ym+20 );\n    } \n\n    this.ctx.stroke();\n    this.ctx.closePath();\n  }\n\n  createPlate(plateForm){\n    this.plateForm.controls['user_id'].setValue(sessionStorage.getItem(\"user\"));\n\n    let formValid = true;\n\n    if(this.plateForm.controls['article_id'].value == ''){\n      //alert(\"Prosim vnesite šifro artikla!\");\n      this.errorMessage+=\"Vnesite šifro artikla!\\n\";\n      formValid = false;\n    }\n    if(this.plateForm.controls['name'].value == ''){\n      //alert(\"Prosim vnesite naziv plošče!\");\n      this.errorMessage+=\"Vnesite naziv plošče!\\n\";\n      formValid = false;\n    }\n    if(this.plateForm.controls['charge'].value == '' ){\n      //alert(\"Prosim vnesite šaržo!\");\n      this.errorMessage+=\"Vnesite šaržo!\\n\";\n      formValid = false;\n    }\n    if(this.plateForm.controls['thickness'].value == '' || this.plateForm.controls['thickness'].value == null ){\n      //alert(\"Prosim vnesite debelino plošče!\");\n      this.errorMessage+=\"Vnesite debelino plošče!\\n\";\n      formValid = false;\n    }\n    if(this.plateForm.controls['location_id'].value == '' ){\n      //alert(\"Prosim vnesite lokacijo plošče!\");\n      this.errorMessage+=\"Vnesite lokacijo plošče!\\n\";\n      formValid = false;\n    }\n    if(((this.plateForm.controls['dims'].value[0].x == '' && this.plateForm.controls['dims'].value[0].y) == '') && this.plateForm.controls['dims'].value.length == 1){\n      //alert(\"Prosim vnesite veljavne mere plošče!\");\n      this.errorMessage+=\"Vnesite veljavne mere plošče!\";\n      formValid = false;\n    }\n\n    if( formValid == true ){\n      this.plateService.createPlate(this.plateForm.value).pipe(first()).subscribe(       \n        data => {\n          this.router.navigate(['/platelist']);\n      },\n      error => {\n        console.log(error)\n      });\n    } else{\n      alert(this.errorMessage)\n    }\n    this.errorMessage=\"\";\n    console.log(this.plateForm.controls['dims'].value.length);\n  }\n\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">Ustvari novo ploščo</h5>\n                <form [formGroup]=\"plateForm\" (ngSubmit)=\"createPlate(plateForm)\" >\n                    <div class=\"form-group\">\n                        <label for=\"article\">Artikel</label>\n                        <select class=\"form-control\" id=\"article\" formControlName=\"article_id\" required>\n                            <option *ngFor=\"let art of articles\" [value]=\"art.article_id\">{{ art.name }} - {{ art.material_name }} {{ art.finish_name }}</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"name\">Št. formata</label>\n                        <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" placeholder=\"Št. formata\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"charge\">Šarža</label>\n                        <input type=\"text\" class=\"form-control\" id=\"charge\" formControlName=\"charge\" placeholder=\"Šarža\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"thickness\">Debelina plošče (mm)</label>\n                        <input type=\"number\" class=\"form-control\" id=\"thickness\" formControlName=\"thickness\" placeholder=\"Debelina v (mm)\" required>\n                    </div>\n                    <div class=\"form-group form-check\">\n                        <input type=\"checkbox\" class=\"form-check-input\" id=\"pvc\" formControlName=\"pvc\">\n                        <label class=\"form-check-label\" for=\"pvc\">PVC</label>\n                    </div>\n                    <div class=\"form-group form-check\">\n                        <input type=\"checkbox\" class=\"form-check-input\" id=\"scotch\" formControlName=\"scotch\">\n                        <label class=\"form-check-label\" for=\"scotch\">SB</label>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"location_id\">Lokacija</label>\n                        <select class=\"form-control\" id=\"location_id\" formControlName=\"location_id\" required>\n                            <option *ngFor=\"let loc of locations\" [value]=\"loc.location_id\">{{ loc.name }}</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"dims\">Dimenzije</label>\n                        <table class=\"table\" style=\"margin-top: 1rem;\">\n                            <tr>\n                                <th>X</th>\n                                <th>Y</th>\n                            </tr>\n                            <tr formArrayName=\"dims\" *ngFor=\"let dim of plateForm.get('dims').controls; let i = index\">\n                                <ng-container [formGroupName]=\"i\">\n                                    <td><input class=\"form-control\" type=\"number\" formControlName=\"x\" placeholder=\"x (mm)\" (blur)=\"animate()\"></td>\n                                    <td><input class=\"form-control\" type=\"number\" formControlName=\"y\" placeholder=\"y (mm)\" (blur)=\"animate()\"></td>\n                                    <td><button type=\"button\" (click)=\"removeDim(i)\">X</button></td>\n                                </ng-container>\n                            </tr>\n                        </table>\n                        <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"addDim()\">Dodaj x,y</button>\n                        \n                    </div>\n                    <div class=\"form-group\">\n                        <canvas #platedraw width=700 height=350 style=\"border: dotted; border-width: 1px;\"></canvas>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Dodaj artikel</button>\n                </form>\n            </div>\n        </div>\n</div>","import { Component, OnInit, ElementRef, AfterViewInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray, FormArrayName, FormControl } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Observable } from \"rxjs\";\nimport { HttpClient } from '@angular/common/http';\n\nimport { Plate } from '../../../models/plate';\nimport { PlateService } from '../../../service/plate.service';\n\nimport { Material } from '../../../models/material';\nimport { MaterialService } from '../../../service/material.service';\n\nimport { Finish } from '../../../models/finish';\nimport { FinishService } from '../../../service/finish.service';\n\n@Component({\n  selector: 'app-plate-list',\n  templateUrl: './plate-list.component.html',\n  styleUrls: ['./plate-list.component.css']\n})\nexport class PlateListComponent implements OnInit {\n  plates: Plate[] = [];\n  res: Plate[] = [];\n  finishes: Finish[] = [];\n  weight: number = 0;\n  materials: Material[] = [];\n\n  searchForm;\n\n  constructor( public plateService: PlateService, public finishService: FinishService, public materialService: MaterialService, private formBuilder: FormBuilder ) { \n    this.searchForm = this.formBuilder.group({\n      area: [''],\n      material_id: [''],\n      finish_id: [''],\n      pvc: [''],\n      scotch: [''],\n      thickness: ['']\n    });\n  }\n\n  ngOnInit(): void {\n    \n    this.plateService.getPlates()\n      .pipe(first())\n      .subscribe( (plates: Plate[]) => {\n        for( let plate of plates ){\n          this.plates.push(plate);\n        }\n      }\n    );\n\n    this.res = this.plates;\n    this.finishService.getFinishes().subscribe((finishes: Finish[]) => {\n      let finishe = finishes['body'];\n\n      for( let finish of finishe ){\n        this.finishes.push(new Finish(finish.finish_id, finish.name, finish.description, finish.date_created, finish.uname, finish.usurname, finish.user_id));\n      }\n      //console.log( this.finishes );\n    });\n\n    this.materialService.getMaterials().subscribe((materials: Material[])=> {\n      let mats = materials['body'];\n\n      for( let mat of mats ){\n        this.materials.push(new Material(mat.material_id, mat.name, mat.description, mat.date_created, mat.uname, mat.usurname, mat.density, mat.user_id));\n      }\n      //console.log(this.materials)\n    });\n\n    console.log(this.plates)\n  }\n\n  searchPlates(searchform: any): void {\n  \n    let scotch = 0;\n    let pvc = 0;\n    let area = 0;\n    let thickness = 0;\n    let material = \"\";\n    let finish = \"\";\n    let density = 0;\n\n    if(this.searchForm.controls['area'].value != \"\" && this.searchForm.controls['area'].value != null){\n      area = this.searchForm.controls['area'].value;\n    }\n    if(this.searchForm.controls['thickness'].value != \"\" && this.searchForm.controls['thickness'].value != null ){\n      thickness = this.searchForm.controls['thickness'].value;\n    }\n    if(this.searchForm.controls['finish_id'].value != \"\" ){\n      finish = this.searchForm.controls['finish_id'].value;\n    }\n    if(this.searchForm.controls['material_id'].value != \"\" ){\n      material = this.searchForm.controls['material_id'].value;\n    }\n    if(this.searchForm.controls['pvc'].value == true ){\n      pvc = 1;\n    }\n    if(this.searchForm.controls['scotch'].value == true ){\n      scotch = 1;\n    }\n\n    this.plates = this.res;\n\n    this.plates = this.plates.filter(p => p.area >= area);\n\n    if( thickness != 0 ){\n      this.plates = this.plates.filter(p => p.thickness == thickness );\n    }\n    if( material != \"\" ){\n      this.plates = this.plates.filter(p => p.material_name == material );\n      let mat = this.materials.find(m => m.name == material );\n      density = mat.density;\n    }\n    if( finish != \"\" ){\n      this.plates = this.plates.filter(p => p.finish_name == finish );\n    }\n    if( scotch == 1 ){\n      this.plates = this.plates.filter(p => p.scotch == scotch );\n    }\n    if( pvc == 1 ){\n      this.plates = this.plates.filter(p => p.pvc == pvc );\n    }\n\n    function compare(a: Plate, b: Plate ): number{\n      if( a.area > b.area ) return 1;\n      if( a.area < b.area ) return -1;\n      return 0; \n    }\n\n    this.plates.sort(compare);\n\n    // area is in square cm, thickness is in mm\n    let volume = area*(thickness/10);\n    // density is g/cubic cm\n    this.weight = (volume*density)/1000;\n\n    console.log(this.plates);\n  }\n\n\n}","\n<div class=\"container\" style=\"margin-top: 1rem;\">\n        <a class=\"btn btn-success\" [routerLink]=\"['/platecreate']\">Kreiranje plošče</a>\n        <div class=\"row\" style=\"margin-top: 1rem;\">\n            <div class=\"card w-100\">\n                <div class=\"card-body\">\n                    <h6>Iskalnik</h6>\n                    <form [formGroup]=\"searchForm\" (ngSubmit)=\"searchPlates(searchForm)\" >\n                        <div class=\"row\">\n                            <div class=\"col-sm-3\">\n                                <input type=\"number\" class=\"form-control\" id=\"area\" placeholder=\"Površina (cm&#178;)\" formControlName=\"area\">\n                            </div>\n                            <div class=\"col-sm-2\">\n                                <input type=\"number\" class=\"form-control\" id=\"thickness\" placeholder=\"Debelina (mm)\" formControlName=\"thickness\">\n                            </div>\n                            <div class=\"col-sm-2\">\n                                <select class=\"form-control\" id=\"material\" formControlName=\"material_id\">\n                                    <option [value]=\"\" selected>Material</option>\n                                    <option *ngFor=\"let mat of materials\" [value]=\"mat.name\">{{ mat.name }}</option>\n                                </select>\n                            </div>\n                            <div class=\"col-sm-2\">\n                                <select class=\"form-control\" id=\"finish\" formControlName=\"finish_id\">\n                                    <option [value]=\"\" selected>Obdelava</option>\n                                    <option *ngFor=\"let fin of finishes\" [value]=\"fin.name\">{{ fin.name }}</option>\n                                </select>\n                            </div>\n                            <div class=\"col-sm-1\">\n                                <div class=\"form-check form-check-inline\">\n                                    <input type=\"checkbox\" class=\"form-check-input\" id=\"pvc\" formControlName=\"pvc\">\n                                    <label class=\"form-check-label\" for=\"pvc\">PVC</label>\n                                </div>\n                                <div class=\"form-check form-check-inline\">\n                                    <input type=\"checkbox\" class=\"form-check-input\" id=\"scotch\" formControlName=\"scotch\">\n                                    <label class=\"form-check-label\" for=\"scotch\">SB</label>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-1\">\n                                <button class=\"btn btn-outline-dark\">Išči</button>\n                            </div>\n                        </div>\n                    </form>\n                    <div *ngIf=\"weight!=0\">\n                        <h6>Predvidena teža: </h6>\n                        <h5>{{ weight }} kg</h5>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\" style=\"margin-top: 1rem;\">\n            <table class=\"table\">\n                <tr>\n                    <th>Artikel</th>\n                    <th>Št. formata</th>\n                    <th>Površina (cm&#178;)</th>\n                    <th>Debelina (mm)</th>\n                    <th>Teža</th>\n                    <th>Lokacija</th>\n                    <th></th>\n                </tr>\n                <tr *ngFor=\"let plate of plates\">\n                    <td *ngIf=\"plate.active==1\">{{ plate.article_name }} - {{ plate.material_name }} {{ plate.finish_name }} <div *ngIf=\"plate.pvc==1 || plate.pvc=='1'\">+ PVC</div><div *ngIf=\"plate.scotch==1 || plate.scotch=='1'\">+ SB</div></td>\n                    <td *ngIf=\"plate.active==1\">{{ plate.name }}</td>\n                    <td *ngIf=\"plate.active==1\">{{ plate.area }}</td>\n                    <td *ngIf=\"plate.active==1\">{{ plate.thickness }}</td>\n                    <td *ngIf=\"plate.active==1\">{{ (((plate.thickness/10) * plate.area) * plate.density)/1000 }} kg</td>\n                    <td *ngIf=\"plate.active==1\">{{ plate.location_name }}</td>\n                    <td *ngIf=\"plate.active==1\"><a routerLink=\"/plate/{{ plate.plate_id }}\">Posodobi</a></td>\n                </tr>\n            </table>\n        </div>\n</div>","import { Component, OnInit, ElementRef, AfterViewInit, ViewChild, AfterContentInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray, FormArrayName, FormControl } from '@angular/forms';\nimport { first, timeout } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Plate } from '../../../models/plate';\nimport { Plateprint } from '../../../models/plateprint';\nimport { PlateService } from '../../../service/plate.service';\n\nimport { Location } from '../../../models/location';\nimport { LocationService } from '../../../service/location.service';\n\nimport { Article } from '../../../models/article'; \nimport { ArticleService } from '../../../service/article.service';\n\n@Component({\n  selector: 'app-plate-print',\n  templateUrl: './plate-print.component.html',\n  styleUrls: ['./plate-print.component.css']\n})\nexport class PlatePrintComponent implements OnInit {\n\n  id: number;\n  dims: FormArray;\n  articles: Article[] = [];\n  locations: Location[] = [];\n  plates: Plate[] = [];\n  plate: Plate = new Plate();\n  plateprints: Plateprint[] = [];\n  plateForm;\n  area: number;\n  \n  constructor(private formBuilder: FormBuilder, \n    private router: Router,\n    private route: ActivatedRoute, \n    public locationService: LocationService, \n    public articleService: ArticleService, \n    public plateService: PlateService) {\n  }\n\n  ngOnInit(): void {\n    \n    this.getPlate();\n\n    this.plateService.getPlateprints(+this.route.snapshot.paramMap.get('plate_id')).subscribe((plateprints: Plateprint[]) => {\n      for( let arch of plateprints ){\n        this.plateprints.push(new Plateprint(\n          arch.plateprint_id,\n          arch.plate_id,\n          arch.date_created,\n          arch.user_name,\n          arch.user_surname,\n          arch.user_id,\n          arch.weight\n        ))\n      }\n    });\n\n    this.articleService.getArticles().subscribe((articles: Article[]) =>{\n      let arts = articles['body'];\n      \n      for(let art of arts ){\n        this.articles.push(new Article(\n          art.article_id,\n          art.name,\n          art.description,\n          art.date_created,\n          art.uname,\n          art.usurname,\n          art.user_id,\n          art.mname,\n          art.fname\n        ));\n      }\n    });\n    \n    this.locationService.getLocations().subscribe((locations: Location[]) => {\n      let locs = locations['body'];\n      \n      for(let loc of locs ){\n        this.locations.push(new Location(\n          loc.location_id, \n          loc.name, \n          loc.date_created, \n          loc.uname, \n          loc.usurname, \n          loc.user_id\n        ));\n      }\n    });\n  }\n\n  getPlate(): void {\n    this.plateService.getPlate(+this.route.snapshot.paramMap.get('plate_id')).subscribe(data => {\n      this.plate = data;\n    } );\n    \n  }\n\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n    <div class=\"row\">\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" [routerLink]=\"['/platecreate']\">Kreiranje plošče</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" [routerLink]=\"['/platelist']\">Seznam plošč</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a  class=\"btn btn-success\" routerLink=\"/plate/{{ plate.plate_id }}\">Posodobi ploščo</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" routerLink=\"/platearchive/{{ plate.plate_id }}\">Zgodovina plošče</a>\n        </div>\n        <div class=\"col-sm-4\"></div>\n    </div>\n    <div class=\"card\" style=\"margin-top: 1rem;\">\n        <div class=\"card-body\">\n            <table class=\"table\">\n                <tr>\n                    <td>Artikel - Material/Obdelava/Debelina/PVC/SB - Št. formata:</td>\n                    <td>\n                        {{ plate.article_name }} - {{ plate.material_name }} {{ plate.finish_name }} {{ plate.thickness }} mm \n                        <div *ngIf=\"plate.pvc == 1; else elseBlockPvc\">DA / </div>\n                        <ng-template #elseBlockPvc>NE / </ng-template>\n                        <div *ngIf=\"plate.scotch == 1; else elseBlockScotch\">DA</div>\n                        <ng-template #elseBlockScotch>NE</ng-template> - {{ plate.name }}\n                    </td>\n                </tr>\n                <tr>\n                    <td>Šarža:</td>\n                    <td><h5>{{ plate.charge }}</h5></td>\n                </tr>\n                <tr>\n                    <td>Trenutna lokacija:</td>\n                    <td>{{ plate.location_name }}</td>\n                </tr>\n            </table>\n        </div>\n        \n    </div>\n    <div class=\"card\" style=\"margin-top: 1rem;\">\n        <div class=\"card-body\">\n            <table class=\"table\">\n                <tr>\n                    <th>Datum spremembe</th>\n                    <th>Teža odreza</th>\n                    <th></th>\n                </tr>\n                <tr *ngFor=\"let arch of plateprints\">\n                    <td>{{ arch.date_created }}</td>\n                    <td>{{ arch.weight }} kg</td>\n                    <td><a routerLink=\"/plateprintdetail/{{ arch.plateprint_id }}\">Natisni</a></td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ElementRef, AfterViewInit, ViewChild, AfterContentInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray, FormArrayName, FormControl } from '@angular/forms';\nimport { first, timeout } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Plate } from '../../../models/plate';\nimport { Plateprint } from '../../../models/plateprint';\nimport { PlateService } from '../../../service/plate.service';\n\nimport { Location } from '../../../models/location';\nimport { LocationService } from '../../../service/location.service';\n\nimport { Article } from '../../../models/article'; \nimport { ArticleService } from '../../../service/article.service';\n\nimport { Material } from '../../../models/material'; \nimport { MaterialService } from '../../../service/material.service';\n\n@Component({\n  selector: 'app-plate-split',\n  templateUrl: './plate-split.component.html',\n  styleUrls: ['./plate-split.component.css']\n})\nexport class PlateSplitComponent implements OnInit {\n \n  @ViewChild('platedrawcurrent', { static: true }) canvas: ElementRef<HTMLCanvasElement>;  \n  \n  @ViewChild('platenew', { static: true }) canvasNew: ElementRef<HTMLCanvasElement>;\n  @ViewChild('platesecond', { static: true }) canvasSecond: ElementRef<HTMLCanvasElement>;\n\n  private ctx: CanvasRenderingContext2D;\n  private ctxNew: CanvasRenderingContext2D;\n  private ctxSecond: CanvasRenderingContext2D;\n\n  id: number;\n  dimsFirst: FormArray;\n  dimsSecond: FormArray;\n  articles: Article[] = [];\n  locations: Location[] = [];\n  plates: Plate[] = [];\n  plate: Plate = new Plate();\n  materials: Material[] = [];\n  plateprints: Plateprint[] = [];\n  plateForm;\n  area: number;\n  errorMessage = '';\n\n  createDim(): FormGroup{\n    return this.formBuilder.group({\n      x: [''],\n      y: ['']\n    })\n  }\n\n  addDimFirst(): void {\n   this.dimsFirst = this.plateForm.get('dimsFirst') as FormArray;\n   this.dimsFirst.push(this.createDim());\n  }\n\n  addDimSecond(): void {\n   this.dimsSecond = this.plateForm.get('dimsSecond') as FormArray;\n   this.dimsSecond.push(this.createDim());\n  }\n\n  constructor(private formBuilder: FormBuilder, \n    private router: Router,\n    private route: ActivatedRoute, \n    public locationService: LocationService, \n    public articleService: ArticleService, \n    public plateService: PlateService,\n    public materialService: MaterialService ) {\n  }\n\n  ngOnInit(): void {\n    \n    this.getPlate();\n\n    this.plateForm = this.formBuilder.group({\n      plate_id: [''],\n      location_idFirst: [''],\n      location_idSecond: [''],\n      dimsFirst: this.formBuilder.array([ this.createDim() ]),\n      dimsSecond: this.formBuilder.array([ this.createDim() ]),\n      name: [''],\n      curr_name: [''],\n      dimx: [''],\n      dimy: [''],\n      charge: [''],\n      user_id: [],\n      thickness: [],\n      article_id: [],\n      pvc: [],\n      scotch: [],\n      density: []\n    });\n\n    this.articleService.getArticles().subscribe((articles: Article[]) =>{\n      let arts = articles['body'];\n      \n      for(let art of arts ){\n        this.articles.push(new Article(\n          art.article_id,\n          art.name,\n          art.description,\n          art.date_created,\n          art.uname,\n          art.usurname,\n          art.user_id,\n          art.mname,\n          art.fname\n        ));\n      }\n    });\n    \n    this.locationService.getLocations().subscribe((locations: Location[]) => {\n      let locs = locations['body'];\n      \n      for(let loc of locs ){\n        this.locations.push(new Location(\n          loc.location_id, \n          loc.name, \n          loc.date_created, \n          loc.uname, \n          loc.usurname, \n          loc.user_id\n        ));\n      }\n    });\n\n    this.materialService.getMaterials().subscribe((materials: Material[])=> {\n      let mats = materials['body'];\n\n      for( let mat of mats ){\n        this.materials.push(new Material(mat.material_id, mat.name, mat.description, mat.date_created, mat.uname, mat.usurname, mat.density, mat.user_id));\n      }\n    });\n\n    this.ctx = this.canvas.nativeElement.getContext('2d');\n    this.ctxNew = this.canvasNew.nativeElement.getContext('2d');\n    this.ctxSecond = this.canvasSecond.nativeElement.getContext('2d');\n  }\n\n  getPlate(): void {\n    this.plateService.getPlate(+this.route.snapshot.paramMap.get('plate_id')).subscribe(data => {\n      this.plate = data;\n      this.canvasDraw();\n    } );\n    \n  }\n\n  canvasDraw(){\n    let dimx = this.plate.dimx.split(\",\");\n    let dimy = this.plate.dimy.split(\",\");\n    \n    let x, y, x1, y1, distance, xm, ym;\n\n    this.ctx.fillStyle = \"#FFFFFF\";\n    this.ctx.fillRect(0,0,700,350);\n    this.ctx.fillStyle = \"black\";\n\n    this.ctx.beginPath();\n    this.ctx.moveTo(5,5);\n\n    xm = ym = 0;\n    x1 = 5;\n    y1 = 5;\n\n    for( let i = 0; i < dimx.length; i++ ){\n      x = (parseInt(dimx[i])/10)+5;\n      y = (parseInt(dimy[i])/10)+5;\n      \n      this.ctx.lineTo(x,y);\n\n      //distance between 2 points... formula src: https://www.mathplanet.com/education/algebra-2/conic-sections/distance-between-two-points-and-the-midpoint\n      distance = Math.sqrt( (Math.pow((x1-x),2) + Math.pow((y1-y),2)) );\n\n      //midpoint between 2 points... formula from same url as formula for distance\n      xm = (x+x1)/2;\n      ym = (y+y1)/2;\n\n      //locate output text coordinates\n      if( x1 == 5 && x == 5 && y == 5 && y1 == 5 ){\n\n      } else if( x1 == x ){\n        this.ctx.fillText((distance*10).toString() + \" mm\", xm+20, ym );\n      } else if( y1 == y ){\n        this.ctx.fillText((distance*10).toString() + \" mm\", xm, ym+20 );\n      } else{\n        this.ctx.fillText((distance*10).toString() + \" mm\", xm+20, ym+20 );\n      }\n\n      x1 = x;\n      y1 = y;\n    }\n\n    this.ctx.lineTo(5,5);\n    this.ctx.stroke();\n    this.ctx.closePath();\n  }\n\n  animateFirst(): void {\n    let dims =  this.plateForm.get('dimsFirst').controls;\n    let x, y, x1, y1, distance, xm, ym;\n\n    this.ctxNew.fillStyle = \"#FFFFFF\";\n    this.ctxNew.fillRect(0,0,700,350);\n    this.ctxNew.fillStyle = \"black\";\n\n    this.ctxNew.beginPath();\n    this.ctxNew.moveTo(5,5);\n\n    xm = ym = 0;\n    x1 = 5;\n    y1 = 5;\n\n    for( let el of dims ){\n      x = (el.controls['x'].value/10)+5;\n      y = (el.controls['y'].value/10)+5;\n      this.ctxNew.lineTo(x,y);\n\n      //distance between 2 points... formula src: https://www.mathplanet.com/education/algebra-2/conic-sections/distance-between-two-points-and-the-midpoint\n      distance = Math.sqrt( (Math.pow((x1-x),2) + Math.pow((y1-y),2)) );\n\n      //midpoint between 2 points... formula from same url as formula for distance\n      xm = (x+x1)/2;\n      ym = (y+y1)/2;\n\n      //locate output text coordinates\n      if( x1 == x ){\n        this.ctxNew.fillText((distance*10).toString() + \" mm\", xm+20, ym );\n      } else if( y1 == y ){\n        this.ctxNew.fillText((distance*10).toString() + \" mm\", xm, ym+20 );\n      } else{\n        this.ctxNew.fillText((distance*10).toString() + \" mm\", xm+20, ym+20 );\n      }\n\n      x1 = x;\n      y1 = y;\n    }\n    this.ctxNew.lineTo(5,5);\n\n    distance = Math.sqrt( (Math.pow((x1-5),2) + Math.pow((y1-5),2)) );\n\n    xm = (5+x1)/2;\n    ym = (5+y1)/2;\n    \n    //locate output text coordinates\n    if( x1 == x ){\n      this.ctxNew.fillText((distance*10).toString() + \" mm\", xm+20, ym );\n    } else if( y1 == y ){\n      this.ctxNew.fillText((distance*10).toString() + \" mm\", xm, ym+20 );\n    } \n\n    this.ctxNew.stroke();\n    this.ctxNew.closePath();\n  }\n\n  animateSecond(): void {\n    let dims =  this.plateForm.get('dimsSecond').controls;\n    let x, y, x1, y1, distance, xm, ym;\n\n    this.ctxSecond.fillStyle = \"#FFFFFF\";\n    this.ctxSecond.fillRect(0,0,700,350);\n    this.ctxSecond.fillStyle = \"black\";\n\n    this.ctxSecond.beginPath();\n    this.ctxSecond.moveTo(5,5);\n\n    xm = ym = 0;\n    x1 = 5;\n    y1 = 5;\n\n    for( let el of dims ){\n      x = (el.controls['x'].value/10)+5;\n      y = (el.controls['y'].value/10)+5;\n      this.ctxSecond.lineTo(x,y);\n\n      //distance between 2 points... formula src: https://www.mathplanet.com/education/algebra-2/conic-sections/distance-between-two-points-and-the-midpoint\n      distance = Math.sqrt( (Math.pow((x1-x),2) + Math.pow((y1-y),2)) );\n\n      //midpoint between 2 points... formula from same url as formula for distance\n      xm = (x+x1)/2;\n      ym = (y+y1)/2;\n\n      //locate output text coordinates\n      if( x1 == x ){\n        this.ctxSecond.fillText((distance*10).toString() + \" mm\", xm+20, ym );\n      } else if( y1 == y ){\n        this.ctxSecond.fillText((distance*10).toString() + \" mm\", xm, ym+20 );\n      } else{\n        this.ctxSecond.fillText((distance*10).toString() + \" mm\", xm+20, ym+20 );\n      }\n\n      x1 = x;\n      y1 = y;\n    }\n    this.ctxSecond.lineTo(5,5);\n\n    distance = Math.sqrt( (Math.pow((x1-5),2) + Math.pow((y1-5),2)) );\n\n    xm = (5+x1)/2;\n    ym = (5+y1)/2;\n    \n    //locate output text coordinates\n    if( x1 == x ){\n      this.ctxSecond.fillText((distance*10).toString() + \" mm\", xm+20, ym );\n    } else if( y1 == y ){\n      this.ctxSecond.fillText((distance*10).toString() + \" mm\", xm, ym+20 );\n    } \n\n    this.ctxSecond.stroke();\n    this.ctxSecond.closePath();\n  }\n\n  updatePlate(plateForm): void{\n    this.plateForm.controls['plate_id'].setValue(+this.route.snapshot.paramMap.get('plate_id'));\n    this.plateForm.controls['dimx'].setValue(this.plate.dimx);\n    this.plateForm.controls['dimy'].setValue(this.plate.dimy);\n    this.plateForm.controls['charge'].setValue(this.plate.charge);\n    this.plateForm.controls['thickness'].setValue(this.plate.thickness);\n    this.plateForm.controls['article_id'].setValue(this.plate.article_id);\n    this.plateForm.controls['pvc'].setValue(this.plate.pvc);\n    this.plateForm.controls['scotch'].setValue(this.plate.scotch);\n    this.plateForm.controls['user_id'].setValue(parseInt(sessionStorage.getItem('user')));\n    this.plateForm.controls['curr_name'].setValue(this.plate.name);\n    \n    let density = 0;\n    let mat = this.materials.find(m => m.name == this.plate.material_name );\n    density = mat.density;\n    this.plateForm.controls['density'].setValue(density);\n    console.log(this.plateForm.value);\n\n    let currArea = this.plate.area;\n\n    let area1 = 0;\n    let area2 = 0;\n\n    let polygon1 = this.plateForm.controls['dimsFirst'].value;\n    let polygon2 = this.plateForm.controls['dimsSecond'].value;\n\n    let formValid = true;\n\n    //prepare array ( add { 'x': 0, 'y': 0} at start and end of polygon array)\n    polygon1.unshift({ 'x': 0, 'y': 0});\n    polygon1.push({ 'x': 0, 'y': 0});\n    polygon2.unshift({ 'x': 0, 'y': 0});\n    polygon2.push({ 'x': 0, 'y': 0});\n    let n1 = polygon1.length;\n    let n2 = polygon2.length;\n\n    let j1 = n1 - 1;\n    let j2 = n2 - 1;\n    // javascript implementation of shoelace formula\n    for( let i = 0; i < n1; i++ ){\n      area1 += ( polygon1[j1].x + polygon1[i].x )*( polygon1[j1].y - polygon1[i].y );\n\n      j1 = i;\n    }\n    for( let i = 0; i < n2; i++ ){\n      area2 += ( polygon2[j2].x + polygon2[i].x )*( polygon2[j2].y - polygon2[i].y );\n\n      j2 = i;\n    }\n\n    area1 = area1 / 2;\n    area2 = area2 / 2;\n\n    // convert area to square centimeters\n    area1/=100;\n    area2/=100;\n\n    area1 = Math.abs(area1);\n    area2 = Math.abs(area2);\n\n    if(this.plateForm.controls['location_idFirst'].value == '' ){\n      //alert(\"Prosim vnesite lokacijo plošče!\");\n      this.errorMessage+=\"Vnesite lokacijo prve plošče!\\n\";\n      formValid = false;\n    }\n    if(this.plateForm.controls['location_idSecond'].value == '' ){\n      //alert(\"Prosim vnesite lokacijo plošče!\");\n      this.errorMessage+=\"Vnesite lokacijo druge plošče!\\n\";\n      formValid = false;\n    }\n    if(area1+area2 > currArea && area1 == 0 || area2 == 0 ){\n      \n      this.errorMessage+=\"Napaka pri vnosu plošč!\\n\";\n      formValid = false;\n    } \n    if( formValid == false ){\n      alert(this.errorMessage);\n    }\n    else{\n      this.plateService.plateSplit(this.plateForm.value).pipe(first()).subscribe(       \n        data => {\n          console.log(data);\n      },\n      error => {\n        console.log(error)\n      });\n    }\n\n    this.errorMessage = \"\";\n\n  }\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n    <div class=\"row\">\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" [routerLink]=\"['/platecreate']\">Kreiranje plošče</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" [routerLink]=\"['/platelist']\">Seznam plošč</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a  class=\"btn btn-success\" routerLink=\"/plate/{{ plate.plate_id }}\">Posodobi ploščo</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" routerLink=\"/platearchive/{{ plate.plate_id }}\">Zgodovina plošče</a>\n        </div>\n        <div class=\"col-sm-4\"></div>\n    </div>\n    <div class=\"card\" style=\"margin-top: 1rem;\">\n        <div class=\"card-body\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <h5>Trenutna oblika plošče: </h5>\n                    <canvas #platedrawcurrent width=\"700\" height=\"350\"></canvas>\n                </div>\n                <div class=\"col-md-6\">\n                    <table class=\"table\">\n                        <tr>\n                            <td>Artikel:</td>\n                            <td>{{ plate.article_name }} - {{ plate.material_name }} {{ plate.finish_name }}</td>\n                            <td>Št. formata</td>\n                            <td>{{ plate.name }}</td>\n                        </tr>\n                        <tr>\n                            <td>Šarža:</td>\n                            <td><h5>{{ plate.charge }}</h5></td>\n                            <td>Debelina:</td>\n                            <td>{{ plate.thickness }} mm</td>\n                        </tr>\n                        <tr>\n                            <td>Površina:</td>\n                            <td>{{ plate.area }} cm&#178;</td>\n                            <td>Teža:</td>\n                            <td>{{ (((plate.thickness/10) * plate.area) * plate.density)/1000 }} kg</td>\n                        </tr>\n                        <tr>\n                            <td>PVC:</td>\n                            <td>\n                                <div *ngIf=\"plate.pvc == 1; else elseBlockPvc\">DA</div>\n                                <ng-template #elseBlockPvc>NE</ng-template>\n                            </td>\n                            <td>SB:</td>\n                            <td>\n                                <div *ngIf=\"plate.scotch == 1; else elseBlockScotch\">DA</div>\n                                <ng-template #elseBlockScotch>NE</ng-template>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Plošča dodana:</td>\n                            <td>{{ plate.date_created }} - {{ plate.user_name }} {{ plate.user_surname }}</td>\n                            <td>Plošča spremenjena:</td>\n                            <td>\n                                <div *ngIf=\"plate.date_changed != '01.01.1970 01:00'; else elseBlockDate\">{{ plate.date_changed }}</div>\n                                <ng-template #elseBlockDate>Plošča še ni bila spremenjena</ng-template>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Trenutna lokacija:</td>\n                            <td>{{ plate.location_name }}</td>\n                            <td>Plošča v uporabi</td>\n                            <td>\n                                <div *ngIf=\"plate.active == 1; else elseBlockActive\">DA</div>\n                                <ng-template #elseBlockActive>NE</ng-template>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n            <form [formGroup]=\"plateForm\" (ngSubmit)=\"updatePlate(plateForm)\">\n                \n                <h5>Vnesi dimenzije prve plošče: </h5>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <canvas #platenew width=\"700\" height=\"350\"></canvas>\n                    </div>\n                    <div class=\"col\">\n                        <div class=\"form-group\" style=\"margin-top: -2rem;\">\n                            <table class=\"table\">\n                                <tr>\n                                    <th>X</th>\n                                    <th>Y</th>\n                                </tr>\n                                <tr formArrayName=\"dimsFirst\" *ngFor=\"let dim of plateForm.get('dimsFirst').controls; let i = index\">\n                                    <ng-container [formGroupName]=\"i\">\n                                        <td><input class=\"form-control\" type=\"number\" formControlName=\"x\" placeholder=\"x (mm)\" (blur)=\"animateFirst()\"></td>\n                                        <td><input class=\"form-control\" type=\"number\" formControlName=\"y\" placeholder=\"y (mm)\" (blur)=\"animateFirst()\"></td>\n                                    </ng-container>\n                                </tr>\n                            </table>\n                            <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"addDimFirst()\">Dodaj x,y 1. plošče</button>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"form-group\">\n                    <label for=\"location_idFirst\">Lokacija prve plošče:</label>\n                    <select class=\"form-control\" id=\"location_idFirst\" formControlName=\"location_idFirst\">\n                        <option *ngFor=\"let loc of locations\" [value]=\"loc.location_id\">{{ loc.name }}</option>\n                    </select>\n                </div>\n                \n                <h5>Vnesi dimenzije druge plošče:</h5>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <canvas #platesecond width=\"700\" height=\"350\"></canvas>\n                    </div>\n                    <div class=\"col\">\n                        <div class=\"form-group\" style=\"margin-top: -2rem;\">\n                            <table class=\"table\">\n                                <tr>\n                                    <th>X</th>\n                                    <th>Y</th>\n                                </tr>\n                                <tr formArrayName=\"dimsSecond\" *ngFor=\"let dim of plateForm.get('dimsSecond').controls; let j = index\">\n                                    <ng-container [formGroupName]=\"j\">\n                                        <td><input class=\"form-control\" type=\"number\" formControlName=\"x\" placeholder=\"x (mm)\" (blur)=\"animateSecond()\"></td>\n                                        <td><input class=\"form-control\" type=\"number\" formControlName=\"y\" placeholder=\"y (mm)\" (blur)=\"animateSecond()\"></td>\n                                    </ng-container>\n                                </tr>\n                            </table>\n                            <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"addDimSecond()\">Dodaj x,y 2. plošče</button>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"form-group\">\n                    <label for=\"name\">Št. formata</label>\n                    <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" placeholder=\"Št. formata\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"location_idSecond\">Lokacija druge plošče:</label>\n                    <select class=\"form-control\" id=\"location_idSecond\" formControlName=\"location_idSecond\">\n                        <option *ngFor=\"let loc of locations\" [value]=\"loc.location_id\">{{ loc.name }}</option>\n                    </select>\n                </div>\n                \n                <button type=\"submit\" class=\"btn btn-danger\">Posodobi</button>\n            </form>\n\n        </div>\n        \n    </div>\n</div>","import { Component, OnInit, ElementRef, AfterViewInit, ViewChild, AfterContentInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray, FormArrayName, FormControl } from '@angular/forms';\nimport { first, timeout } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Plate } from '../../../models/plate';\nimport { PlateService } from '../../../service/plate.service';\n\nimport { Location } from '../../../models/location';\nimport { LocationService } from '../../../service/location.service';\n\nimport { Article } from '../../../models/article'; \nimport { ArticleService } from '../../../service/article.service';\nimport { ThrowStmt } from '@angular/compiler';\nimport { getInterpolationArgsLength } from '@angular/compiler/src/render3/view/util';\n\nimport { Material } from '../../../models/material';\nimport { MaterialService } from '../../../service/material.service';\n\n@Component({\n  selector: 'app-plate-update',\n  templateUrl: './plate-update.component.html',\n  styleUrls: ['./plate-update.component.css']\n})\nexport class PlateUpdateComponent implements OnInit {\n\n  @ViewChild('platedraw', { static: true }) canvas: ElementRef<HTMLCanvasElement>;  \n  \n  @ViewChild('platenew', { static: true }) canvasNew: ElementRef<HTMLCanvasElement>;  \n\n  private ctx: CanvasRenderingContext2D;\n  private ctxNew: CanvasRenderingContext2D;\n\n  id: number;\n  dims: FormArray;\n  articles: Article[] = [];\n  locations: Location[] = [];\n  plates: Plate[] = [];\n  plate: Plate = new Plate();\n  plateForm;\n  area: number;\n  materials: Material[] = [];\n\n  constructor(private formBuilder: FormBuilder, \n    private router: Router,\n    private route: ActivatedRoute, \n    public locationService: LocationService, \n    public articleService: ArticleService, \n    public plateService: PlateService,\n    public materialService: MaterialService) {\n  }\n\n\n  createDim(): FormGroup{\n    return this.formBuilder.group({\n      x: [''],\n      y: ['']\n    })\n  }\n\n  addDim(): void {\n   this.dims = this.plateForm.get('dims') as FormArray;\n   this.dims.push(this.createDim());\n  }\n\n  getPlate(): void {\n    this.plateService.getPlate(+this.route.snapshot.paramMap.get('plate_id')).subscribe(data => {\n      this.plate = data;\n      this.canvasDraw();\n    } );\n    \n  }\n\n  ngOnInit(): void {\n\n    this.getPlate();\n\n    this.plateForm = this.formBuilder.group({\n      plate_id: [''],\n      active: [''],\n      location_id: [''],\n      dims: this.formBuilder.array([ this.createDim() ]),\n      dimx: [''],\n      dimy: [''],\n      loc: [''],\n      act: [''],\n      charge: [''],\n      chrg: [''],\n      user_id: [],\n      thickness: [],\n      density: []\n    });\n\n    this.articleService.getArticles().subscribe((articles: Article[]) =>{\n      let arts = articles['body'];\n      \n      for(let art of arts ){\n        this.articles.push(new Article(\n          art.article_id,\n          art.name,\n          art.description,\n          art.date_created,\n          art.uname,\n          art.usurname,\n          art.user_id,\n          art.mname,\n          art.fname\n        ));\n      }\n    });\n    \n    this.locationService.getLocations().subscribe((locations: Location[]) => {\n      let locs = locations['body'];\n      \n      for(let loc of locs ){\n        this.locations.push(new Location(\n          loc.location_id, \n          loc.name, \n          loc.date_created, \n          loc.uname, \n          loc.usurname, \n          loc.user_id\n        ));\n      }\n    });\n\n    this.materialService.getMaterials().subscribe((materials: Material[])=> {\n      let mats = materials['body'];\n\n      for( let mat of mats ){\n        this.materials.push(new Material(mat.material_id, mat.name, mat.description, mat.date_created, mat.uname, mat.usurname, mat.density, mat.user_id));\n      }\n      //console.log(this.materials)\n    });\n\n    this.ctx = this.canvas.nativeElement.getContext('2d');\n    this.ctxNew = this.canvasNew.nativeElement.getContext('2d');\n    \n    this.ctx.font = \"16px Arial\";\n    this.ctxNew.font = \"16px Arial\";\n  }\n\n  canvasDraw(){\n    let dimx = this.plate.dimx.split(\",\");\n    let dimy = this.plate.dimy.split(\",\");\n    \n    let x, y, x1, y1, distance, xm, ym;\n\n    this.ctx.fillStyle = \"#FFFFFF\";\n    this.ctx.fillRect(0,0,700,350);\n    this.ctx.fillStyle = \"black\";\n\n    this.ctx.beginPath();\n    this.ctx.moveTo(5,5);\n\n    xm = ym = 0;\n    x1 = 5;\n    y1 = 5;\n\n    for( let i = 0; i < dimx.length; i++ ){\n      x = (parseInt(dimx[i])/10)+5;\n      y = (parseInt(dimy[i])/10)+5;\n      \n      this.ctx.lineTo(x,y);\n\n      //distance between 2 points... formula src: https://www.mathplanet.com/education/algebra-2/conic-sections/distance-between-two-points-and-the-midpoint\n      distance = Math.sqrt( (Math.pow((x1-x),2) + Math.pow((y1-y),2)) );\n\n      //midpoint between 2 points... formula from same url as formula for distance\n      xm = (x+x1)/2;\n      ym = (y+y1)/2;\n\n      //locate output text coordinates\n      if( x1 == 5 && x == 5 && y == 5 && y1 == 5 ){\n\n      } else if( x1 == x ){\n        this.ctx.fillText((distance*10).toString() + \" mm\", xm+20, ym );\n      } else if( y1 == y ){\n        this.ctx.fillText((distance*10).toString() + \" mm\", xm, ym+20 );\n      } else{\n        this.ctx.fillText((distance*10).toString() + \" mm\", xm+20, ym+20 );\n      }\n\n      x1 = x;\n      y1 = y;\n    }\n\n    this.ctx.lineTo(5,5);\n    this.ctx.stroke();\n    this.ctx.closePath();\n  }\n\n  animate(): void {\n    let dims =  this.plateForm.get('dims').controls\n    let x, y, x1, y1, distance, xm, ym;\n\n    this.ctxNew.fillStyle = \"#FFFFFF\";\n    this.ctxNew.fillRect(0,0,700,350);\n    this.ctxNew.fillStyle = \"black\";\n\n    this.ctxNew.beginPath();\n    this.ctxNew.moveTo(5,5);\n\n    xm = ym = 0;\n    x1 = 5;\n    y1 = 5;\n\n    for( let el of dims ){\n      x = (el.controls['x'].value/10)+5;\n      y = (el.controls['y'].value/10)+5;\n      this.ctxNew.lineTo(x,y);\n\n      //distance between 2 points... formula src: https://www.mathplanet.com/education/algebra-2/conic-sections/distance-between-two-points-and-the-midpoint\n      distance = Math.sqrt( (Math.pow((x1-x),2) + Math.pow((y1-y),2)) );\n\n      //midpoint between 2 points... formula from same url as formula for distance\n      xm = (x+x1)/2;\n      ym = (y+y1)/2;\n\n      //locate output text coordinates\n      if( x1 == x ){\n        this.ctxNew.fillText((distance*10).toString() + \" mm\", xm+20, ym );\n      } else if( y1 == y ){\n        this.ctxNew.fillText((distance*10).toString() + \" mm\", xm, ym+20 );\n      } else{\n        this.ctxNew.fillText((distance*10).toString() + \" mm\", xm+20, ym+20 );\n      }\n\n      x1 = x;\n      y1 = y;\n    }\n    this.ctxNew.lineTo(5,5);\n\n    distance = Math.sqrt( (Math.pow((x1-5),2) + Math.pow((y1-5),2)) );\n\n    xm = (5+x1)/2;\n    ym = (5+y1)/2;\n    \n    //locate output text coordinates\n    if( x1 == x ){\n      this.ctxNew.fillText((distance*10).toString() + \" mm\", xm+20, ym );\n    } else if( y1 == y ){\n      this.ctxNew.fillText((distance*10).toString() + \" mm\", xm, ym+20 );\n    } \n\n    this.ctxNew.stroke();\n    this.ctxNew.closePath();\n  }\n\n  updatePlate(plateForm){\n    this.plateForm.controls['plate_id'].setValue(+this.route.snapshot.paramMap.get('plate_id'));\n    this.plateForm.controls['dimx'].setValue(this.plate.dimx);\n    this.plateForm.controls['dimy'].setValue(this.plate.dimy);\n    this.plateForm.controls['loc'].setValue(this.plate.location_id);\n    this.plateForm.controls['act'].setValue(this.plate.active);\n    this.plateForm.controls['chrg'].setValue(this.plate.charge);\n    this.plateForm.controls['thickness'].setValue(this.plate.thickness);\n    this.plateForm.controls['user_id'].setValue(parseInt(sessionStorage.getItem('user')));\n\n\n    let density = 0;\n    let mat = this.materials.find(m => m.name == this.plate.material_name );\n    density = mat.density;\n    this.plateForm.controls['density'].setValue(density);\n    console.log(this.plateForm.value);\n\n    let area = 0;\n\n    let polygon = this.plateForm.controls['dims'].value;\n\n    //console.log(this.plateForm.controls['dims'].value);\n    //prepare array ( add { 'x': 0, 'y': 0} at start and end of polygon array)\n    polygon.unshift({ 'x': 0, 'y': 0});\n    polygon.push({ 'x': 0, 'y': 0});\n    let n = polygon.length;\n    let j = n - 1;\n    //console.log(this.plateForm.controls['dims'].value);\n    // javascript implementation of shoelace formula\n    for( let i = 0; i < n; i++ ){\n      area += ( polygon[j].x + polygon[i].x )*( polygon[j].y - polygon[i].y );\n\n      j = i;\n    }\n\n    area = area / 2;\n\n    // convert area to square centimeters\n    area/=100;\n\n    let currArea = this.plate.area;\n\n    area = Math.abs(area);\n\n    if(area > currArea ){\n      alert(\"Plošča ki ste jo vnesli je večja od trenutno vnesene plošče! Prosim popravite vnos!\");\n    }\n    else{\n      console.log(\"Posodobi ploščo!\");\n      this.plateService.updatePlate(this.plateForm.value).pipe(first()).subscribe(       \n        data => {\n          location.reload();\n          //this.router.navigate(['/plate', +this.route.snapshot.paramMap.get('plate_id')]);\n          //console.log(data);\n      },\n      error => {\n        console.log(error);\n      });\n    }\n  }\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n    <div class=\"row\">\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" [routerLink]=\"['/platecreate']\">Kreiranje plošče</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" [routerLink]=\"['/platelist']\">Seznam plošč</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a  class=\"btn btn-success\" routerLink=\"/platearchive/{{ plate.plate_id }}\">Zgodovina plošče</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" routerLink=\"/plateprint/{{ plate.plate_id }}\">Natisni odrez</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" routerLink=\"/platesplit/{{ plate.plate_id }}\">Razdeli ploščo</a>\n        </div>\n        <div class=\"col-sm-2\">\n\n        </div>\n    </div>\n</div>\n    <div class=\"card\" style=\"margin-top: 1rem;\">\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">Posodobi ploščo: {{ plate.article_name }} - {{ plate.name }}</h5>\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <canvas #platedraw width=\"700\" height=\"350\"></canvas>\n                </div>\n                <div class=\"col-md-6\">\n                    <table class=\"table\">\n                        <tr>\n                            <td>Artikel:</td>\n                            <td>{{ plate.article_name }} - {{ plate.material_name }} {{ plate.finish_name }}</td>\n                            <td>Št. formata</td>\n                            <td>{{ plate.name }}</td>\n                        </tr>\n                        <tr>\n                            <td>Šarža:</td>\n                            <td><h5>{{ plate.charge }}</h5></td>\n                            <td>Debelina:</td>\n                            <td>{{ plate.thickness }} mm</td>\n                        </tr>\n                        <tr>\n                            <td>Površina:</td>\n                            <td>{{ plate.area }} cm&#178;</td>\n                            <td>Teža:</td>\n                            <td>{{ (((plate.thickness/10) * plate.area) * plate.density)/1000 }} kg</td>\n                        </tr>\n                        <tr>\n                            <td>PVC:</td>\n                            <td>\n                                <div *ngIf=\"plate.pvc == 1; else elseBlockPvc\">DA</div>\n                                <ng-template #elseBlockPvc>NE</ng-template>\n                            </td>\n                            <td>SB:</td>\n                            <td>\n                                <div *ngIf=\"plate.scotch == 1; else elseBlockScotch\">DA</div>\n                                <ng-template #elseBlockScotch>NE</ng-template>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Plošča dodana:</td>\n                            <td>{{ plate.date_created }} - {{ plate.user_name }} {{ plate.user_surname }}</td>\n                            <td>Plošča spremenjena:</td>\n                            <td>\n                                <div *ngIf=\"plate.date_changed != '01.01.1970 01:00'; else elseBlockDate\">{{ plate.date_changed }}</div>\n                                <ng-template #elseBlockDate>Plošča še ni bila spremenjena</ng-template>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Trenutna lokacija:</td>\n                            <td>{{ plate.location_name }}</td>\n                            <td>Plošča v uporabi</td>\n                            <td>\n                                <div *ngIf=\"plate.active == 1; else elseBlockActive\">DA</div>\n                                <ng-template #elseBlockActive>NE</ng-template>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n            <form [formGroup]=\"plateForm\" (ngSubmit)=\"updatePlate(plateForm)\">\n                <div class=\"form-group\">\n                    <label for=\"charge\">Posodobi šaržo</label>\n                    <input type=\"text\" name=\"charge\" formControlName=\"charge\" class=\"form-control\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"location_id\">Zamenjaj lokacijo</label>\n                    <select class=\"form-control\" id=\"location_id\" formControlName=\"location_id\">\n                        <option *ngFor=\"let loc of locations\" [value]=\"loc.location_id\">{{ loc.name }}</option>\n                    </select>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"active\">Plošča v uporabi: </label>\n                    <select class=\"form-control\" id=\"active\" formControlName=\"active\">\n                        <option [value]=\"1\">DA</option>\n                        <option [value]=\"0\">NE</option>\n                    </select>\n                </div>\n                <h5>Nove dimenzije plošče:</h5>\n                <div class=\"row\">\n                    \n                    <div class=\"col-md-6\">\n                        <canvas #platenew width=\"700\" height=\"350\"></canvas>\n                    </div>\n                    <div class=\"col-md-6\" style=\"margin-top: -3rem;\">\n                        <div class=\"form-group\">\n                            <table class=\"table\" style=\"margin-top: 1rem;\">\n                                <tr>\n                                    <th>X</th>\n                                    <th>Y</th>\n                                </tr>\n                                <tr formArrayName=\"dims\" *ngFor=\"let dim of plateForm.get('dims').controls; let i = index\">\n                                    <ng-container [formGroupName]=\"i\">\n                                        <td><input class=\"form-control\" type=\"number\" formControlName=\"x\" placeholder=\"x (mm)\" (blur)=\"animate()\"></td>\n                                        <td><input class=\"form-control\" type=\"number\" formControlName=\"y\" placeholder=\"y (mm)\" (blur)=\"animate()\"></td>\n                                    </ng-container>\n                                </tr>\n                            </table>\n                            <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"addDim()\">Dodaj x,y</button>\n                        </div>\n                    </div>\n                </div>\n                \n                \n                <button type=\"submit\" class=\"btn btn-primary\">Posodobi ploščo</button>\n            </form>\n        </div>\n    </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-plate',\n  templateUrl: './plate.component.html',\n  styleUrls: ['./plate.component.css']\n})\nexport class PlateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>plate works!</p>\n","import { Component, OnInit, ElementRef, AfterViewInit, ViewChild, AfterContentInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray, FormArrayName, FormControl } from '@angular/forms';\nimport { first, timeout } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Plate } from '../../../models/plate';\nimport { Plateprint } from '../../../models/plateprint';\nimport { PlateService } from '../../../service/plate.service';\n\nimport { Location } from '../../../models/location';\nimport { LocationService } from '../../../service/location.service';\n\nimport { Article } from '../../../models/article'; \nimport { ArticleService } from '../../../service/article.service';\n\n@Component({\n  selector: 'app-plateprint-detail',\n  templateUrl: './plateprint-detail.component.html',\n  styleUrls: ['./plateprint-detail.component.css']\n})\nexport class PlateprintDetailComponent implements OnInit {\n\n  id: number;\n  dims: FormArray;\n  articles: Article[] = [];\n  locations: Location[] = [];\n  plates: Plate[] = [];\n  plate: Plate = new Plate();\n  plateprints: Plateprint[] = [];\n  plateprint: any = 0;\n  plateForm;\n  area: number;\n  \n  constructor(private formBuilder: FormBuilder, \n    private router: Router,\n    private route: ActivatedRoute, \n    public locationService: LocationService, \n    public articleService: ArticleService, \n    public plateService: PlateService) {\n  }\n\n  ngOnInit(): void {\n  \n    this.getPlateprint();\n\n/*\n    this.plateService.getPlateprints(+this.route.snapshot.paramMap.get('plate_id')).subscribe((plateprints: Plateprint[]) => {\n      for( let arch of plateprints ){\n        this.plateprints.push(new Plateprint(\n          arch.plateprint_id,\n          arch.plate_id,\n          arch.date_created,\n          arch.user_name,\n          arch.user_surname,\n          arch.user_id,\n          arch.weight\n        ))\n      }\n    });*/\n\n    this.articleService.getArticles().subscribe((articles: Article[]) =>{\n      let arts = articles['body'];\n      \n      for(let art of arts ){\n        this.articles.push(new Article(\n          art.article_id,\n          art.name,\n          art.description,\n          art.date_created,\n          art.uname,\n          art.usurname,\n          art.user_id,\n          art.mname,\n          art.fname\n        ));\n      }\n    });\n    \n    this.locationService.getLocations().subscribe((locations: Location[]) => {\n      let locs = locations['body'];\n      \n      for(let loc of locs ){\n        this.locations.push(new Location(\n          loc.location_id, \n          loc.name, \n          loc.date_created, \n          loc.uname, \n          loc.usurname, \n          loc.user_id\n        ));\n      }\n    });\n\n    \n  }\n\n  getPlate(id: number): void {\n    this.plateService.getPlate(id).subscribe(data => {\n      this.plate = data;\n    } );\n    \n  }\n\n  getPlateprint(): void{\n    this.plateService.getPlateprint(+this.route.snapshot.paramMap.get('plateprint_id')).subscribe(data => {\n      console.log(data);\n      this.plateprint = new Plateprint(data.plateprint_id, data.plate_id, data.date_created, data.user_name, data.user_surname, data.user_id, data.weight);\n      this.getPlate(data.plate_id);\n      } \n    );\n  }\n\n  printfn(): void{\n    console.log(\"print was clicked\");\n    let printcontent = document.getElementById('printarea').innerHTML;\n    let originalpage = document.body.innerHTML;\n\n    document.body.innerHTML = printcontent;\n\n    window.print();\n\n    document.body.innerHTML = originalpage;\n    \n  }\n\n}\n","<div id=\"printarea\" class=\"container\" style=\"margin-top: 1rem;\">\n    <div class=\"card\" style=\"margin-top: 1rem;\">\n        <div class=\"card-body\">\n            <table class=\"table\">\n                <tr>\n                    <td>Artikel - Material/Obdelava/Debelina/PVC/SB - št. formata:</td>\n                    <td>\n                        {{ plate.article_name }} - {{ plate.material_name }} {{ plate.finish_name }} {{ plate.thickness }} mm \n                        <div *ngIf=\"plate.pvc == 1; else elseBlockPvc\">DA / </div>\n                        <ng-template #elseBlockPvc>NE / </ng-template>\n                        <div *ngIf=\"plate.scotch == 1; else elseBlockScotch\">DA</div>\n                        <ng-template #elseBlockScotch>NE</ng-template> - {{ plate.name }}\n                    </td>\n                </tr>\n                <tr>\n                    <td>Šarža:</td>\n                    <td><h5>{{ plate.charge }}</h5></td>\n                </tr>\n                <tr>\n                    <td>Datum odreza</td>\n                    <td>{{ plateprint.date_created }}</td>\n                </tr>\n                <tr>\n                    <td>Bruto odrez</td>\n                    <td>{{ plateprint.weight }} kg</td>\n                </tr>\n                <tr>\n                    <td>Uporabnik</td>\n                    <td>{{ plateprint.user_name }} {{ plateprint.user_surname }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</div>\n<div class=\"container\">\n    <button class=\"btn btn-primary\" style=\"margin-top: 1rem;\" (click)=\"printfn()\">Natisni</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, NgForm } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../service/auth.service';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  angForm;\n  checkd = true;\n  errorMessage = '';\n\n  constructor(\n    public fb: FormBuilder,\n    public authService: AuthService,\n    public router: Router\n    ) {\n    this.angForm = this.fb.group({\n        email: ['', [Validators.required,Validators.minLength(1), Validators.email]],\n        password: ['', Validators.required],\n        name: ['', Validators.required],\n        surname: ['', Validators.required],\n        admin: ['']\n    });\n}\n\n  ngOnInit(): void {\n  }\n\n  postdata(){\n\n    var re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    //alert(\"Nov uporabnik je bil uspešno ustvarjen!\");\n    let formValid = true;\n\n    if(this.angForm.controls['name'].value == '' || this.angForm.controls['name'].length < 3 ){\n      //alert(\"Prosim vnesite naziv plošče!\");\n      this.errorMessage+=\"Vnesite ime novega uporabnika!\\n\";\n      formValid = false;\n    }\n    if(this.angForm.controls['surname'].value == '' || this.angForm.controls['surname'].length < 3 ){\n      //alert(\"Prosim vnesite naziv plošče!\");\n      this.errorMessage+=\"Vnesite priimek novega uporabnika!\\n\";\n      formValid = false;\n    }\n    if(this.angForm.controls['password'].value == '' || this.angForm.controls['password'].length < 8 ){\n      //alert(\"Prosim vnesite naziv plošče!\");\n      this.errorMessage+=\"Geslo mora imeti najmanj osem znakov!\\n\";\n      formValid = false;\n    }\n    if(this.angForm.controls['email'].value == '' || !re.test(this.angForm.controls['email'].value) ){\n      //alert(\"Prosim vnesite naziv plošče!\");\n      this.errorMessage+=\"Epoštni naslov ni pravilen!\\n\";\n      formValid = false;\n    }\n\n    if( formValid == true ){\n      alert(\"Nov uporabnik je bil uspešno ustvarjen!\");\n      this.authService.signUp(this.angForm.value).subscribe((res) => {\n        if (res.result) {\n          this.angForm.reset();\n          \n          this.router.navigate(['/platelist']);\n        }\n      })\n    }\n    else{\n      alert(this.errorMessage);\n      this.errorMessage = '';\n    }\n    \n    \n    \n  }\n\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h5>Dodaj novega uporabnika</h5>\n            <form [formGroup]=\"angForm\" (ngSubmit)=\"postdata()\" autocomplete=\"off\" >\n                <div class=\"form-group\">\n                    <label for=\"name\">Ime</label>\n                    <input type=\"text\" name=\"name\" formControlName=\"name\" autocomplete=\"off\" class=\"form-control\" placeholder=\"Ime\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"surname\">Priimek</label>\n                    <input type=\"text\" name=\"surname\" formControlName=\"surname\" autocomplete=\"off\" class=\"form-control\" placeholder=\"Priimek\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"email\">Email</label>\n                    <input type=\"email\" name=\"email\" formControlName=\"email\" autocomplete=\"off\" class=\"form-control\" placeholder=\"Email\">\n                </div>\n                <div class=\"form-group form-check\">\n                    <input type=\"checkbox\" class=\"form-check-input\" id=\"admin\" name=\"admin\" formControlName=\"admin\" value=1 hidden>\n                    <!--<label class=\"form-check-label\" for=\"admin\" >Dodeli administratorske pravice?</label>-->\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"Password\">Geslo</label>\n                    <input type=\"password\" name=\"Password\" formControlName=\"password\" autocomplete=\"off\" class=\"form-control\" placeholder=\"Geslo\">\n                </div>\n                <button type=\"submit\" class=\"btn btn-success\" >Registracija uporabnika!</button>\n            </form>\n        </div>\n    </div>\n</div>","export class Archive {\r\n    public platearchive_id: number;\r\n    public plate_id: number;\r\n    public date_created: string;\r\n    public user_name: string;\r\n    public user_surname: string;\r\n    public user_id: number;\r\n    public thickness: number;\r\n    public area: number;\r\n    public dimx: string;\r\n    public dimy: string;\r\n    public density: number;\r\n    public weight: number;\r\n    \r\n    constructor( platearchive_id: number, plate_id: number, date_created: string, user_name: string, user_surname: string, user_id: number, thickness: number, area: number, dimx: string, dimy: string, density: number, weight: number ) {\r\n        this.platearchive_id = platearchive_id;\r\n        this.plate_id = plate_id;\r\n        this.date_created = date_created;\r\n        this.user_id = user_id;\r\n        this.user_name = user_name;\r\n        this.user_surname = user_surname;\r\n        this.thickness = thickness;\r\n        this.dimx = dimx;\r\n        this.dimy = dimy;\r\n        this.area = area;\r\n        this.density = density;\r\n        this.weight = weight;\r\n    }\r\n    \r\n}","export class Article {\r\n    public article_id: number;\r\n    public name: string;\r\n    public description: string;\r\n    public date_created: string;\r\n    public user_name: string;\r\n    public user_surname: string;\r\n    public user_id: number;\r\n    public material_name: string;\r\n    public finish_name: string;\r\n\r\n\r\n    constructor( article_id: number, name: string, description: string, date_created: string, user_name: string, user_surname: string, user_id: number, material_name: string, finish_name: string ) {\r\n        this.article_id = article_id;\r\n        this.name = name;\r\n        this.description = description;\r\n        this.date_created = date_created;\r\n        this.user_id = user_id;\r\n        this.user_name = user_name;\r\n        this.user_surname = user_surname;\r\n        this.material_name = material_name;\r\n        this.finish_name = finish_name;\r\n    }\r\n}","export class Finish {\r\n    public finish_id: number;\r\n    public name: string;\r\n    public description: string;\r\n    public date_created: string;\r\n    public user_name: string;\r\n    public user_surname: string;\r\n    public user_id: number;\r\n    \r\n    constructor( finish_id: number, name: string, description: string, date_created: string, user_name: string, user_surname: string, user_id: number) {\r\n        this.finish_id = finish_id;\r\n        this.name = name;\r\n        this.description = description;\r\n        this.date_created = date_created;\r\n        this.user_id = user_id;\r\n        this.user_name = user_name;\r\n        this.user_surname = user_surname;\r\n    }\r\n}","export class Location {\r\n    public location_id: number;\r\n    public name: string;\r\n    public date_created: string;\r\n    public user_name: string;\r\n    public user_surname: string;\r\n    public user_id: number;\r\n    \r\n    constructor( location_id: number, name: string,  date_created: string, user_name: string, user_surname: string, user_id: number) {\r\n        this.location_id = location_id;\r\n        this.name = name;\r\n        this.date_created = date_created;\r\n        this.user_id = user_id;\r\n        this.user_name = user_name;\r\n        this.user_surname = user_surname;\r\n    }\r\n}","import { DomElementSchemaRegistry } from '@angular/compiler';\r\n\r\nexport class Material {\r\n    public material_id: number;\r\n    public name: string;\r\n    public description: string;\r\n    public date_created: string;\r\n    public user_name: string;\r\n    public user_surname: string;\r\n    public user_id: number;\r\n    public density: number;\r\n    \r\n    constructor( material_id: number, name: string, description: string, date_created: string, user_name: string, user_surname: string, density: number, user_id: number) {\r\n        this.material_id = material_id;\r\n        this.name = name;\r\n        this.description = description;\r\n        this.date_created = date_created;\r\n        this.user_id = user_id;\r\n        this.user_name = user_name;\r\n        this.user_surname = user_surname;\r\n        this.density = density;\r\n    }\r\n}","export class Plate {\r\n    public plate_id: number;\r\n    public name: string;\r\n    public charge: string;\r\n    public date_created: string;\r\n    public user_name: string;\r\n    public user_surname: string;\r\n    public user_id: number;\r\n    public material_name: string;\r\n    public finish_name: string;\r\n    public thickness: number;\r\n    public pvc: number;\r\n    public scotch: number;\r\n    public date_changed: string;\r\n    public location_name: string;\r\n    public area: number;\r\n    public dimx: string;\r\n    public dimy: string;\r\n    public article_name: string;\r\n    public article_id: number;\r\n    public location_id: number;\r\n    public active: number;\r\n    public notes: string;\r\n    public density: number;\r\n    \r\n    /*\r\n    constructor( plate_id?: number, name?: string, charge?: string, date_created?: string, user_name?: string, user_surname?: string, user_id?: number, material_name?: string, finish_name?: string, thickness?: number, area?: number, pvc?: number, scotch?: number, dimx?: string, dimy?: string, date_changed?: string, location_name?: string, article_name?: string, location_id?: number, article_id?: number, active?: number, notes?: string ) {\r\n        this.plate_id = plate_id;\r\n        this.name = name;\r\n        this.charge = charge;\r\n        this.date_created = date_created;\r\n        this.user_id = user_id;\r\n        this.user_name = user_name;\r\n        this.user_surname = user_surname;\r\n        this.material_name = material_name;\r\n        this.finish_name = finish_name;\r\n        this.thickness = thickness;\r\n        this.pvc = pvc;\r\n        this.scotch = scotch;\r\n        this.date_changed = date_changed;\r\n        this.dimx = dimx;\r\n        this.dimy = dimy;\r\n        this.location_name = location_name;\r\n        this.area = area;\r\n        this.article_name = article_name;\r\n        this.article_id = article_id;\r\n        this.location_id = location_id;\r\n        this.active = active;\r\n        this.notes = notes;\r\n    }\r\n    */\r\n}","export class Plateprint {\r\n    public plateprint_id: number;\r\n    public plate_id: number;\r\n    public date_created: string;\r\n    public user_name: string;\r\n    public user_surname: string;\r\n    public user_id: number;\r\n    public weight: number;\r\n    \r\n    constructor( plateprint_id: number, plate_id: number, date_created: string, user_name: string, user_surname: string, user_id: number, weight: number ) {\r\n        this.plateprint_id = plateprint_id;\r\n        this.plate_id = plate_id;\r\n        this.date_created = date_created;\r\n        this.user_id = user_id;\r\n        this.user_name = user_name;\r\n        this.user_surname = user_surname;\r\n        this.weight = weight;\r\n    }\r\n    \r\n}","import { Injectable } from '@angular/core';\nimport { map, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Article } from '../models/Article';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArticleService {\n  //apiUrl: string = \"http://localhost/plateapp/php\";\n  apiUrl: string = \"192.168.1.105/php\";\n\n  constructor(    \n    private httpClient: HttpClient,\n    private router: Router ) {\n  }\n\n  public getArticles(): Observable<Article[]>{\n    return this.httpClient.get<Article[]>(this.apiUrl + '/api/article/read.php');\n  }\n\n  public createArticle(data: JSON ): Observable<any>{\n    return this.httpClient.post<any>(this.apiUrl + '/api/article/create.php', data)\n    .pipe(map(res => {\n      console.log(res);\n      return res;\n    }),\n    catchError(this.handleError));\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    public router: Router\r\n  ) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.authService.isLoggedIn !== true) {\r\n      window.alert(\"Access not allowed!\");\r\n      this.router.navigate(['home'])\r\n    }\r\n    return true;\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { map, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { User } from '../models/user';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  //apiUrl: string = \"http://localhost/plateapp/php\";\n  apiUrl: string = \"192.168.1.105/php\";\n\n  constructor(\n    private httpClient: HttpClient,\n    private router: Router\n  ) { }\n\n  public userLogin(email: string, password: string ){\n    return this.httpClient.post<any>(this.apiUrl + '/login.php', { email, password })\n          .pipe(map(res => {\n            sessionStorage.setItem('access_token', res.token);\n            sessionStorage.setItem('user', res.user );\n            return res;\n          }),\n          catchError(this.handleError));\n  }\n\n  signUp(user: User): Observable<any> {\n    return this.httpClient.post(this.apiUrl + '/register.php', user)\n    .pipe(map(res => {\n      console.log(res);\n      return res;\n    }),\n    catchError(this.handleError));\n  }\n\n  getToken(){\n    return sessionStorage.getItem('access_token');\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n\n  get isLoggedIn(): boolean {\n    let authToken = sessionStorage.getItem('access_token');\n    return (authToken !== null) ? true : false;\n  }\n\n  doLogout() {\n    let removeToken = sessionStorage.removeItem('access_token');\n    if (removeToken == null) {\n      this.router.navigate(['home']);\n    }\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpInterceptor, HttpRequest, HttpHandler } from \"@angular/common/http\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable()\r\n\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        const authToken = this.authService.getToken();\r\n        req = req.clone({\r\n            setHeaders: {\r\n                Authorization: \"Bearer \" + authToken\r\n            }\r\n        });\r\n        return next.handle(req);\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { map, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Finish } from '../models/finish';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FinishService {\n  //apiUrl: string = \"http://localhost/plateapp/php\";\n  apiUrl: string = \"192.168.1.105/php\";\n\n  constructor(    \n    private httpClient: HttpClient,\n    private router: Router ) {\n  }\n\n  public getFinishes(): Observable<Finish[]>{\n    return this.httpClient.get<Finish[]>(this.apiUrl + '/api/finish/read.php');\n  }\n\n  public createFinish(data): Observable<any>{\n    return this.httpClient.post<any>(this.apiUrl + '/api/finish/create.php', data)\n    .pipe(map(res => {\n      console.log(res);\n      return res;\n    }),\n    catchError(this.handleError));\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { map, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Location } from '../models/location';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n  //apiUrl: string = \"http://localhost/plateapp/php\";\n  apiUrl: string = \"192.168.1.105/php\";\n\n  constructor(    \n    private httpClient: HttpClient,\n    private router: Router ) {\n  }\n\n  public getLocations(): Observable<Location[]>{\n    return this.httpClient.get<Location[]>(this.apiUrl + '/api/location/read.php');\n  }\n\n  public createLocation(name: string, user_id: string): Observable<any>{\n    return this.httpClient.post<any>(this.apiUrl + '/api/location/create.php', { name, user_id})\n    .pipe(map(res => {\n      console.log(res);\n      return res;\n    }),\n    catchError(this.handleError));\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { map, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Material } from '../models/material';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MaterialService {\n  //apiUrl: string = \"http://localhost/plateapp/php\";\n  apiUrl: string = \"192.168.1.105/php\";\n\n  constructor(    \n    private httpClient: HttpClient,\n    private router: Router ) {\n  }\n\n  public getMaterials(): Observable<Material[]>{\n    return this.httpClient.get<Material[]>(this.apiUrl + '/api/material/read.php');\n  }\n\n  public createMaterial(data): Observable<any>{\n    return this.httpClient.post<any>(this.apiUrl + '/api/material/create.php', data)\n    .pipe(map(res => {\n      console.log(res);\n      return res;\n    }),\n    catchError(this.handleError));\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { map, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Plate } from '../models/plate';\nimport { Archive } from '../models/archive';\nimport { Router } from '@angular/router';\nimport { Plateprint } from '../models/plateprint';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlateService {\n  //apiUrl: string = \"http://localhost/plateapp/php\";\n  apiUrl: string = \"192.168.1.105/php\";\n\n  constructor(    \n    private httpClient: HttpClient,\n    private router: Router ) {\n  }\n\n  public getPlates(): Observable<Plate[]>{\n    return this.httpClient.get<Plate[]>(this.apiUrl + '/api/plate/read.php');\n  }\n\n  public createPlate(data: JSON): Observable<any>{\n    return this.httpClient.post<any>(this.apiUrl + '/api/plate/create.php', data)\n    .pipe(map(res => {\n      console.log(JSON.stringify(res));\n      return res;\n    }),\n    catchError(this.handleError));\n  }\n\n  public getPlate(id: number ): Observable<Plate>{\n    return this.httpClient.get<Plate>(`${this.apiUrl}/api/plate/readOne.php?id=${id}` );\n  }\n\n  public getArchives( id: number ): Observable<Archive[]>{\n    return this.httpClient.get<any>(`${this.apiUrl}/api/archive/read.php?id=${id}`);\n  }\n\n  public getPlateprints( id: number ): Observable<Plateprint[]>{\n    return this.httpClient.get<any>(`${this.apiUrl}/api/plateprint/read.php?id=${id}`);\n  }\n\n  public getPlateprint(id: number ): Observable<Plateprint>{\n    return this.httpClient.get<Plateprint>(`${this.apiUrl}/api/plateprint/readOne.php?id=${id}`);\n  }\n\n  public updatePlate( data: any ): Observable<any>{\n    //console.log(JSON.stringify(data));\n    return this.httpClient.post<any>(this.apiUrl + '/api/plate/update.php', data).pipe(map(res => {\n      console.log(JSON.stringify(res));\n      return res;\n    }),\n    catchError(this.handleError));\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n\n  public plateSplit( data: any ): Observable<any>{\n    //console.log(JSON.stringify(data));\n    return this.httpClient.post<any>(this.apiUrl + '/api/plate/platesplit.php', data).pipe(map(res => {\n      console.log(JSON.stringify(res));\n      return res;\n    }),\n    catchError(this.handleError));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/component/article/article-create/article-create.component.ts","./src/app/component/article/article-create/article-create.component.html","./src/app/component/article/article-list/article-list.component.ts","./src/app/component/article/article-list/article-list.component.html","./src/app/component/article/article.component.ts","./src/app/component/article/article.component.html","./src/app/component/dashboard/dashboard.component.ts","./src/app/component/dashboard/dashboard.component.html","./src/app/component/finish/finish-create/finish-create.component.ts","./src/app/component/finish/finish-create/finish-create.component.html","./src/app/component/finish/finish-list/finish-list.component.ts","./src/app/component/finish/finish-list/finish-list.component.html","./src/app/component/finish/finish.component.ts","./src/app/component/finish/finish.component.html","./src/app/component/home/home.component.ts","./src/app/component/home/home.component.html","./src/app/component/location/location-create/location-create.component.ts","./src/app/component/location/location-create/location-create.component.html","./src/app/component/location/location-list/location-list.component.ts","./src/app/component/location/location-list/location-list.component.html","./src/app/component/location/location.component.ts","./src/app/component/location/location.component.html","./src/app/component/login/login.component.ts","./src/app/component/login/login.component.html","./src/app/component/material/material-create/material-create.component.ts","./src/app/component/material/material-create/material-create.component.html","./src/app/component/material/material-list/material-list.component.ts","./src/app/component/material/material-list/material-list.component.html","./src/app/component/material/material.component.ts","./src/app/component/material/material.component.html","./src/app/component/navbar/navbar.component.ts","./src/app/component/navbar/navbar.component.html","./src/app/component/plate/plate-all/plate-all.component.ts","./src/app/component/plate/plate-all/plate-all.component.html","./src/app/component/plate/plate-archive/plate-archive.component.ts","./src/app/component/plate/plate-archive/plate-archive.component.html","./src/app/component/plate/plate-create/plate-create.component.ts","./src/app/component/plate/plate-create/plate-create.component.html","./src/app/component/plate/plate-list/plate-list.component.ts","./src/app/component/plate/plate-list/plate-list.component.html","./src/app/component/plate/plate-print/plate-print.component.ts","./src/app/component/plate/plate-print/plate-print.component.html","./src/app/component/plate/plate-split/plate-split.component.ts","./src/app/component/plate/plate-split/plate-split.component.html","./src/app/component/plate/plate-update/plate-update.component.ts","./src/app/component/plate/plate-update/plate-update.component.html","./src/app/component/plate/plate.component.ts","./src/app/component/plate/plate.component.html","./src/app/component/plate/plateprint-detail/plateprint-detail.component.ts","./src/app/component/plate/plateprint-detail/plateprint-detail.component.html","./src/app/component/register/register.component.ts","./src/app/component/register/register.component.html","./src/app/models/archive.ts","./src/app/models/article.ts","./src/app/models/finish.ts","./src/app/models/location.ts","./src/app/models/material.ts","./src/app/models/plate.ts","./src/app/models/plateprint.ts","./src/app/service/article.service.ts","./src/app/service/auth.guard.ts","./src/app/service/auth.service.ts","./src/app/service/authconfig.interceptor.ts","./src/app/service/finish.service.ts","./src/app/service/location.service.ts","./src/app/service/material.service.ts","./src/app/service/plate.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.0049bc6d09cfe77f18ac.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './component/login/login.component';\nimport { RegisterComponent } from './component/register/register.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { DashboardComponent } from './component/dashboard/dashboard.component';\nimport { MaterialListComponent } from './component/material/material-list/material-list.component';\nimport { FinishListComponent } from './component/finish/finish-list/finish-list.component';\nimport { LocationListComponent } from './component/location/location-list/location-list.component';\nimport { LocationCreateComponent } from './component/location/location-create/location-create.component';\nimport { ArticleListComponent } from './component/article/article-list/article-list.component';\nimport { ArticleCreateComponent } from './component/article/article-create/article-create.component';\nimport { PlateListComponent } from './component/plate/plate-list/plate-list.component';\nimport { PlateAllComponent } from './component/plate/plate-all/plate-all.component';\nimport { PlateCreateComponent } from './component/plate/plate-create/plate-create.component';\nimport { PlateUpdateComponent } from './component/plate/plate-update/plate-update.component';\nimport { PlatePrintComponent } from './component/plate/plate-print/plate-print.component';\nimport { PlateSplitComponent } from './component/plate/plate-split/plate-split.component';\nimport { PlateArchiveComponent } from './component/plate/plate-archive/plate-archive.component';\nimport { PlateprintDetailComponent } from './component/plate/plateprint-detail/plateprint-detail.component';\nimport { MaterialCreateComponent } from './component/material/material-create/material-create.component';\nimport { FinishCreateComponent } from './component/finish/finish-create/finish-create.component';\n\nimport { AuthGuard } from './service/auth.guard';\n\nconst routes: Routes = [\n  { path: '', component: HomeComponent },\n  { path: 'home', component: HomeComponent },\n  { path: 'login', component: LoginComponent },\n  { path: 'register', component: RegisterComponent, canActivate: [AuthGuard] },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'materiallist', component: MaterialListComponent, canActivate: [AuthGuard] },\n  { path: 'materialcreate', component: MaterialCreateComponent, canActivate: [AuthGuard] },\n  { path: 'finishlist', component: FinishListComponent, canActivate: [AuthGuard] },\n  { path: 'finishcreate', component: FinishCreateComponent, canActivate: [AuthGuard] },\n  { path: 'locationlist', component: LocationListComponent, canActivate: [AuthGuard] },\n  { path: 'locationcreate', component: LocationCreateComponent, canActivate: [AuthGuard] },\n  { path: 'articlelist', component: ArticleListComponent, canActivate: [AuthGuard] },\n  { path: 'articlecreate', component: ArticleCreateComponent, canActivate: [AuthGuard] },\n  { path: 'platelist', component: PlateListComponent, canActivate: [AuthGuard] },\n  { path: 'platecreate', component: PlateCreateComponent, canActivate: [AuthGuard] },\n  { path: 'plate/:plate_id', component: PlateUpdateComponent, canActivate: [AuthGuard] },\n  { path: 'plateprint/:plate_id', component: PlatePrintComponent, canActivate: [AuthGuard] },\n  { path: 'platearchive/:plate_id', component: PlateArchiveComponent, canActivate: [AuthGuard] },\n  { path: 'plateprintdetail/:plateprint_id', component: PlateprintDetailComponent, canActivate: [AuthGuard] },\n  { path: 'platesplit/:plate_id', component: PlateSplitComponent, canActivate: [AuthGuard] },\n  { path: 'plates', component: PlateAllComponent, canActivate: [AuthGuard] },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'plateapp';\n}\n","<app-navbar></app-navbar>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { JwtModule } from '@auth0/angular-jwt';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { HashLocationStrategy, LocationStrategy  } from '@angular/common';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\nimport { NavbarComponent } from './component/navbar/navbar.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { RegisterComponent } from './component/register/register.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { DashboardComponent } from './component/dashboard/dashboard.component';\nimport { AuthInterceptor } from './service/authconfig.interceptor';\nimport { MaterialComponent } from './component/material/material.component';\nimport { MaterialListComponent } from './component/material/material-list/material-list.component';\nimport { FinishComponent } from './component/finish/finish.component';\nimport { FinishListComponent } from './component/finish/finish-list/finish-list.component';\nimport { LocationComponent } from './component/location/location.component';\nimport { LocationListComponent } from './component/location/location-list/location-list.component';\nimport { ArticleComponent } from './component/article/article.component';\nimport { ArticleListComponent } from './component/article/article-list/article-list.component';\nimport { PlateComponent } from './component/plate/plate.component';\nimport { PlateListComponent } from './component/plate/plate-list/plate-list.component';\nimport { LocationCreateComponent } from './component/location/location-create/location-create.component';\nimport { ArticleCreateComponent } from './component/article/article-create/article-create.component';\nimport { PlateCreateComponent } from './component/plate/plate-create/plate-create.component';\nimport { PlateUpdateComponent } from './component/plate/plate-update/plate-update.component';\nimport { PlatePrintComponent } from './component/plate/plate-print/plate-print.component';\nimport { PlateArchiveComponent } from './component/plate/plate-archive/plate-archive.component';\nimport { PlateprintDetailComponent } from './component/plate/plateprint-detail/plateprint-detail.component';\nimport { PlateSplitComponent } from './component/plate/plate-split/plate-split.component';\nimport { MaterialCreateComponent } from './component/material/material-create/material-create.component';\nimport { FinishCreateComponent } from './component/finish/finish-create/finish-create.component';\nimport { PlateAllComponent } from './component/plate/plate-all/plate-all.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    LoginComponent,\n    RegisterComponent,\n    HomeComponent,\n    DashboardComponent,\n    MaterialComponent,\n    MaterialListComponent,\n    FinishComponent,\n    FinishListComponent,\n    LocationComponent,\n    LocationListComponent,\n    ArticleComponent,\n    ArticleListComponent,\n    PlateComponent,\n    PlateListComponent,\n    LocationCreateComponent,\n    ArticleCreateComponent,\n    PlateCreateComponent,\n    PlateUpdateComponent,\n    PlatePrintComponent,\n    PlateArchiveComponent,\n    PlateprintDetailComponent,\n    PlateSplitComponent,\n    MaterialCreateComponent,\n    FinishCreateComponent,\n    PlateAllComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    JwtModule.forRoot({\n      config: {\n        tokenGetter: function  tokenGetter() {\n             return     localStorage.getItem('access_token');},\n        whitelistedDomains: ['localhost:4200','192.168.1.105/php','192.168.1.105'],\n        blacklistedRoutes: ['']\n      }\n    }),\n    ReactiveFormsModule,\n    FormsModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: AuthInterceptor,\n      multi: true\n    },\n    {provide : LocationStrategy , useClass: HashLocationStrategy}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { Material } from '../../../models/material';\nimport { MaterialService } from '../../../service/material.service';\n\nimport { Finish } from '../../../models/finish';\nimport { FinishService } from '../../../service/finish.service';\n\nimport { Article } from '../../../models/article';\nimport { ArticleService } from '../../../service/article.service';\n\n@Component({\n  selector: 'app-article-create',\n  templateUrl: './article-create.component.html',\n  styleUrls: ['./article-create.component.css']\n})\nexport class ArticleCreateComponent implements OnInit {\n\n  articleForm;\n\n  article: Article;\n\n  finishes: Finish[] = [];\n  materials: Material[] = [];\n\n  constructor(private formBuilder: FormBuilder, private router: Router, public materialService: MaterialService, public finishService: FinishService, public articleService: ArticleService) { \n    this.articleForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      description: [''],\n      material_id: [''],\n      finish_id: [''],\n      user_id: ['']\n    })\n  }\n\n  ngOnInit(): void {\n    this.finishService.getFinishes().subscribe((finishes: Finish[]) => {\n      let finishe = finishes['body'];\n\n      for( let finish of finishe ){\n        this.finishes.push(new Finish(finish.finish_id, finish.name, finish.description, finish.date_created, finish.uname, finish.usurname, finish.user_id));\n      }\n      //console.log( this.finishes );\n    });\n    this.materialService.getMaterials().subscribe((materials: Material[])=> {\n      let mats = materials['body'];\n\n      for( let mat of mats ){\n        this.materials.push(new Material(mat.material_id, mat.name, mat.description, mat.date_created, mat.uname, mat.usurname, mat.density, mat.user_id));\n      }\n      //console.log(this.materials)\n    });\n  }\n\n\n  createArticle(articleForm){\n    this.articleForm.controls['user_id'].setValue(sessionStorage.getItem(\"user\"));\n\n    this.articleService.createArticle(this.articleForm.value).pipe(first()).subscribe(       \n      data => {\n        this.router.navigate(['/articlelist']);\n    },\n    error => {\n      console.log(error)\n    });\n    console.log(this.articleForm.value);\n  }\n}\n","<div class=\"row\" style=\"margin-top: 1rem;\">\n    <div class=\"col-md-4\"></div>\n    <div class=\"col-md-4\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">Ustvari nov artikel</h5>\n                <form [formGroup]=\"articleForm\" (ngSubmit)=\"createArticle(articleForm)\" >\n                    <div class=\"form-group\">\n                        <label for=\"name\">Naziv artikla</label>\n                        <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" placeholder=\"Naziv\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"description\">Opis</label>\n                        <textarea class=\"form-control\" id=\"description\" formControlName=\"description\"></textarea>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"material\">Material</label>\n                        <select class=\"form-control\" id=\"material\" formControlName=\"material_id\" required>\n                            <option *ngFor=\"let mat of materials\" [value]=\"mat.material_id\">{{ mat.name }}</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"finish\">Obdelava</label>\n                        <select class=\"form-control\" id=\"finish\" formControlName=\"finish_id\" required>\n                            <option *ngFor=\"let fin of finishes\" [value]=\"fin.finish_id\">{{ fin.name }}</option>\n                        </select>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Dodaj artikel</button>\n                </form>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-4\"></div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { Article } from '../../../models/article';\nimport { ArticleService } from '../../../service/article.service';\n\n@Component({\n  selector: 'app-article-list',\n  templateUrl: './article-list.component.html',\n  styleUrls: ['./article-list.component.css']\n})\nexport class ArticleListComponent implements OnInit {\n\n  articles: Article[] = [];\n\n  constructor( private articleService: ArticleService ) { }\n\n  ngOnInit(): void {\n    this.articleService.getArticles().subscribe((articles: Article[]) =>{\n      let arts = articles['body'];\n      \n      for(let art of arts ){\n        this.articles.push(new Article(\n          art.article_id,\n          art.name,\n          art.description,\n          art.date_created,\n          art.uname,\n          art.usurname,\n          art.user_id,\n          art.mname,\n          art.fname\n        ));\n      }\n    });\n  }\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n    <div class=\"row\">\n        <a class=\"btn btn-success\" [routerLink]=\"['/articlecreate']\">Kreiranje artikla</a>\n    </div>\n    <table class=\"table\" style=\"margin-top: 1rem;\">\n        <tr>\n            <th>Oznaka</th>\n            <th>Material</th>\n            <th>Obdelava</th>\n            <th></th>\n        </tr>\n        <tr *ngFor=\"let art of articles\">\n            <td>{{ art.name }}</td>\n            <td>{{ art.material_name }}</td>\n            <td>{{ art.finish_name }}</td>\n            <td></td>\n        </tr>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-article',\n  templateUrl: './article.component.html',\n  styleUrls: ['./article.component.css']\n})\nexport class ArticleComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>article works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n    \n\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { Finish } from 'src/app/models/finish';\nimport { FinishService } from 'src/app/service/finish.service';\n\n@Component({\n  selector: 'app-finish-create',\n  templateUrl: './finish-create.component.html',\n  styleUrls: ['./finish-create.component.css']\n})\nexport class FinishCreateComponent implements OnInit {\n\n  finishForm;\n\n  constructor(public finishService: FinishService, private formBuilder: FormBuilder, private router: Router) { \n    this.finishForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      user_id: ['']\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  createFinish( finishForm ): void {\n    this.finishForm.controls['user_id'].setValue(sessionStorage.getItem(\"user\"));\n    \n    this.finishService.createFinish(this.finishForm.value).pipe(first()).subscribe(       \n      data => {\n      this.router.navigate(['/finishlist']);\n    },\n    error => {\n      console.log(error)\n    });\n  }\n\n}\n","<div class=\"row\" style=\"margin-top: 1rem;\">\n    <div class=\"col-md-4\"></div>\n    <div class=\"col-md-4\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">Dodaj novo obdelavo</h5>\n                <form [formGroup]=\"finishForm\" (ngSubmit)=\"createFinish(finishForm)\" >\n                    <div class=\"form-group\">\n                        <label for=\"name\">Naziv obdelave</label>\n                        <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" placeholder=\"Naziv\" required>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Dodaj obdelavo</button>\n                </form>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-4\"></div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { Finish } from 'src/app/models/finish';\nimport { FinishService } from 'src/app/service/finish.service';\n\n@Component({\n  selector: 'app-finish-list',\n  templateUrl: './finish-list.component.html',\n  styleUrls: ['./finish-list.component.css']\n})\nexport class FinishListComponent implements OnInit {\n  \n  finishes: Finish[];\n\n  constructor( private finishService: FinishService ) { }\n\n  ngOnInit(): void {\n    this.finishService.getFinishes().subscribe((finishes: Finish[]) =>{\n      this.finishes = finishes['body'];\n      console.log(this.finishes[0]);\n    })\n  }\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n    <div class=\"row\">\n        <a class=\"btn btn-success\" [routerLink]=\"['/finishcreate']\">Dodaj novo obdelavo</a>\n    </div>\n    <table class=\"table\" style=\"margin-top: 1rem;\">\n        <tr>\n            <th>Oznaka</th>\n            <th>Opis</th>\n            <th></th>\n        </tr>\n        <tr *ngFor=\"let fin of finishes\">\n            <td>{{ fin.name }}</td>\n            <td>{{ fin.description }}</td>\n            <td></td>\n        </tr>\n    </table>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-finish',\n  templateUrl: './finish.component.html',\n  styleUrls: ['./finish.component.css']\n})\nexport class FinishComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>finish works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n    <div class=\"row\">\n        <div class=\"col-sm-3\"></div>\n        <div class=\"col-sm-6\">\n            <app-login></app-login>\n        </div>\n        <div class=\"col-sm-3\"></div>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { Location } from '../../../models/location';\nimport { LocationService } from '../../../service/location.service';\n\n@Component({\n  selector: 'app-location-create',\n  templateUrl: './location-create.component.html',\n  styleUrls: ['./location-create.component.css']\n})\nexport class LocationCreateComponent implements OnInit {\n\n  locationForm;\n\n  constructor( public locationService: LocationService, private formBuilder: FormBuilder, private router: Router ) {\n    this.locationForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      user_id: ['']\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  createLocation(locationForm){\n    this.locationForm.controls['user_id'].setValue(sessionStorage.getItem(\"user\"));\n    this.locationService.createLocation(this.locationForm.value.name, this.locationForm.value.user_id).pipe(first()).subscribe(       \n      data => {\n      this.router.navigate(['/locationlist']);\n    },\n    error => {\n      console.log(error)\n    });\n    console.log(this.locationForm.value);\n  }\n}\n","<div class=\"row\" style=\"margin-top: 1rem;\">\n    <div class=\"col-md-4\"></div>\n    <div class=\"col-md-4\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">Ustvari novo lokacijo</h5>\n                <form [formGroup]=\"locationForm\" (ngSubmit)=\"createLocation(locationForm)\" >\n                    <div class=\"form-group\">\n                        <label for=\"name\">Naziv lokacije</label>\n                        <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" placeholder=\"Naziv\" required>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Dodaj lokacijo</button>\n                </form>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-4\"></div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { Location } from '../../../models/location';\nimport { LocationService } from '../../../service/location.service';\n\n@Component({\n  selector: 'app-location-list',\n  templateUrl: './location-list.component.html',\n  styleUrls: ['./location-list.component.css']\n})\nexport class LocationListComponent implements OnInit {\n\n  locations: Location[];\n\n  constructor( private locationService: LocationService ) { }\n\n  ngOnInit(): void {\n    this.locationService.getLocations().subscribe((locations: Location[]) =>{\n      this.locations = locations['body'];\n      //console.log(this.locations[0]);\n    })\n  }\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n    <div class=\"row\">\n        <a class=\"btn btn-success\" [routerLink]=\"['/locationcreate']\">Kreiranje lokacije</a>\n    </div>\n    <div class=\"row\" style=\"margin-top: 1rem;\">\n        <table class=\"table\">\n            <tr>\n                <th>Oznaka lokacije</th>\n            </tr>\n            <tr *ngFor=\"let loc of locations\">\n                <td>{{ loc.name }}</td>\n            </tr>\n        </table>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-location',\n  templateUrl: './location.component.html',\n  styleUrls: ['./location.component.css']\n})\nexport class LocationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>location works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../service/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm;\n  \n\n  constructor( private formBuilder: FormBuilder, private authService: AuthService, private router: Router ) { \n    this.loginForm = this.formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {\n    if( this.authService.isLoggedIn == true ){\n      this.router.navigate(['/platelist']);\n    }\n  }\n\n  loginUser(loginForm){\n    this.authService.userLogin(loginForm.value.email, loginForm.value.password)\n    .pipe(first())\n    .subscribe(\n      data => {\n        this.router.navigate(['/platelist']);\n      },\n      error => {\n        console.log(error)\n      }\n    );\n  }\n\n}\n","<div class=\"card\">\n    <div class=\"card-body\">\n        <h5 class=\"card-title\">Prijava:</h5>\n      \n        <form [formGroup]=\"loginForm\" (ngSubmit)=\"loginUser(loginForm)\">\n            <div class=\"form-group\">\n                <label for=\"email\">Email:</label>\n                <input type=\"email\" class=\"form-control\" formControlName=\"email\" required>\n            </div>\n            <div class=\"form-group\">\n                <label for=\"password\">Geslo</label>\n                <input type=\"password\" class=\"form-control\" formControlName=\"password\" required>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\">Prijava</button>\n        </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { Material } from '../../../models/material';\nimport { MaterialService } from '../../../service/material.service';\n\n@Component({\n  selector: 'app-material-create',\n  templateUrl: './material-create.component.html',\n  styleUrls: ['./material-create.component.css']\n})\nexport class MaterialCreateComponent implements OnInit {\n\n  materialForm;\n\n  constructor(public materialService: MaterialService, private formBuilder: FormBuilder, private router: Router) { \n    this.materialForm = this.formBuilder.group({\n      name: ['', Validators.required],\n      density: [''],\n      user_id: ['']\n    });\n  }\n\n  ngOnInit(): void {\n  }\n\n  createMaterial( materialForm ): void {\n    this.materialForm.controls['user_id'].setValue(sessionStorage.getItem(\"user\"));\n    \n    this.materialService.createMaterial(this.materialForm.value).pipe(first()).subscribe(       \n      data => {\n      this.router.navigate(['/materiallist']);\n    },\n    error => {\n      console.log(error)\n    });\n  }\n\n}\n","<div class=\"row\" style=\"margin-top: 1rem;\">\n    <div class=\"col-md-4\"></div>\n    <div class=\"col-md-4\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">Dodaj nov material</h5>\n                <form [formGroup]=\"materialForm\" (ngSubmit)=\"createMaterial(materialForm)\" >\n                    <div class=\"form-group\">\n                        <label for=\"name\">Naziv materiala</label>\n                        <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" placeholder=\"Naziv\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"density\">Povprečna gostota g/cm&#xb3;</label>\n                        <input type=\"number\" class=\"form-control\" id=\"density\" formControlName=\"density\" placeholder=\"Gostota\" required>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Dodaj material</button>\n                </form>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-md-4\"></div>\n</div>","import { Component, OnInit } from '@angular/core';\n\nimport { Material } from '../../../models/material';\nimport { MaterialService } from '../../../service/material.service';\n\n@Component({\n  selector: 'app-material-list',\n  templateUrl: './material-list.component.html',\n  styleUrls: ['./material-list.component.css']\n})\nexport class MaterialListComponent implements OnInit {\n\n  materials: Material[];\n\n  constructor( private materialService: MaterialService ) { }\n\n  ngOnInit(): void {\n    this.materialService.getMaterials().subscribe((materials: Material[]) =>{\n      this.materials = materials['body'];\n      console.log(this.materials[0]);\n    })\n  }\n\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n    <div class=\"row\">\n        <a class=\"btn btn-success\" [routerLink]=\"['/materialcreate']\">Dodaj nov material</a>\n    </div>\n    <div class=\"row\" style=\"margin-top: 1rem;\">\n        <table class=\"table\">\n            <tr>\n                <th>Oznaka</th>\n                <th>Gostota g/cm&#xb3;</th>\n                <th></th>\n            </tr>\n            <tr *ngFor=\"let mat of materials\">\n                <td>{{ mat.name }}</td>\n                <td>{{ mat.density }}</td>\n                <td></td>\n            </tr>\n        </table>\n    </div>\n    \n</div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-material',\n  templateUrl: './material.component.html',\n  styleUrls: ['./material.component.css']\n})\nexport class MaterialComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>material works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../service/auth.service';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor( public authService: AuthService ) { }\n\n  ngOnInit(): void {\n  }\n\n  logout(){\n    this.authService.doLogout();\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n    <a class=\"navbar-brand\" [routerLink]=\"['/platelist']\">Plateapp</a>\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavDropdown\" aria-controls=\"navbarNavDropdown\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n        <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div class=\"collapse navbar-collapse\" id=\"navbarNavDropdown\">\n        <ul class=\"navbar-nav\">\n            <li class=\"nav-item dropdown\">\n                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuPlate\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Plošče</a>\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuPlate\">\n                    <a class=\"dropdown-item\" [routerLink]=\"['/platelist']\">Seznam aktivnih</a>\n                    <a class=\"dropdown-item\" [routerLink]=\"['/platecreate']\">Dodaj novo</a>\n                    <a class=\"dropdown-item\" [routerLink]=\"['/plates']\">Seznam vseh</a>\n                </div>\n            </li>\n            <li class=\"nav-item dropdown\">\n                <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdownMenuTools\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">Orodja</a>\n                <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMenuTools\">\n                    <a class=\"dropdown-item\" [routerLink]=\"['/articlelist']\">Artikli</a>\n                    <a class=\"dropdown-item\" [routerLink]=\"['/locationlist']\">Lokacije</a>\n                    <a class=\"dropdown-item\" [routerLink]=\"['/materiallist']\">Materjali</a>\n                    <a class=\"dropdown-item\" [routerLink]=\"['/finishlist']\">Obdelave</a>\n                    <a class=\"dropdown-item\" [routerLink]=\"['/register']\">Registracija uporabnika</a>\n                </div>\n            </li>\n            <button (click)=\"logout()\" *ngIf=\"this.authService.isLoggedIn\" type=\"button\" class=\"btn btn-danger\">Izpis</button>\n        </ul>\n    </div>\n  </nav>","import { Component, OnInit, ElementRef, AfterViewInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray, FormArrayName, FormControl } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Observable } from \"rxjs\";\nimport { HttpClient } from '@angular/common/http';\n\nimport { Plate } from '../../../models/plate';\nimport { PlateService } from '../../../service/plate.service';\n\nimport { Material } from '../../../models/material';\nimport { MaterialService } from '../../../service/material.service';\n\nimport { Finish } from '../../../models/finish';\nimport { FinishService } from '../../../service/finish.service';\n\n@Component({\n  selector: 'app-plate-all',\n  templateUrl: './plate-all.component.html',\n  styleUrls: ['./plate-all.component.css']\n})\nexport class PlateAllComponent implements OnInit {\n  plates: Plate[] = [];\n  res: Plate[] = [];\n  finishes: Finish[] = [];\n  weight: number = 0;\n  materials: Material[] = [];\n\n  searchForm;\n\n  constructor( public plateService: PlateService, public finishService: FinishService, public materialService: MaterialService, private formBuilder: FormBuilder ) { \n    this.searchForm = this.formBuilder.group({\n      area: [''],\n      material_id: [''],\n      finish_id: [''],\n      pvc: [''],\n      scotch: [''],\n      thickness: ['']\n    });\n  }\n\n  ngOnInit(): void {\n    \n    this.plateService.getPlates()\n      .pipe(first())\n      .subscribe( (plates: Plate[]) => {\n        for( let plate of plates ){\n          this.plates.push(plate);\n        }\n      }\n    );\n\n    this.res = this.plates;\n    this.finishService.getFinishes().subscribe((finishes: Finish[]) => {\n      let finishe = finishes['body'];\n\n      for( let finish of finishe ){\n        this.finishes.push(new Finish(finish.finish_id, finish.name, finish.description, finish.date_created, finish.uname, finish.usurname, finish.user_id));\n      }\n      //console.log( this.finishes );\n    });\n\n    this.materialService.getMaterials().subscribe((materials: Material[])=> {\n      let mats = materials['body'];\n\n      for( let mat of mats ){\n        this.materials.push(new Material(mat.material_id, mat.name, mat.description, mat.date_created, mat.uname, mat.usurname, mat.density, mat.user_id));\n      }\n      //console.log(this.materials)\n    });\n\n    console.log(this.plates)\n  }\n\n  searchPlates(searchform: any): void {\n  \n    let scotch = 0;\n    let pvc = 0;\n    let area = 0;\n    let thickness = 0;\n    let material = \"\";\n    let finish = \"\";\n    let density = 0;\n\n    if(this.searchForm.controls['area'].value != \"\" && this.searchForm.controls['area'].value != null){\n      area = this.searchForm.controls['area'].value;\n    }\n    if(this.searchForm.controls['thickness'].value != \"\" && this.searchForm.controls['thickness'].value != null ){\n      thickness = this.searchForm.controls['thickness'].value;\n    }\n    if(this.searchForm.controls['finish_id'].value != \"\" ){\n      finish = this.searchForm.controls['finish_id'].value;\n    }\n    if(this.searchForm.controls['material_id'].value != \"\" ){\n      material = this.searchForm.controls['material_id'].value;\n    }\n    if(this.searchForm.controls['pvc'].value == true ){\n      pvc = 1;\n    }\n    if(this.searchForm.controls['scotch'].value == true ){\n      scotch = 1;\n    }\n\n    this.plates = this.res;\n\n    this.plates = this.plates.filter(p => p.area >= area);\n\n    if( thickness != 0 ){\n      this.plates = this.plates.filter(p => p.thickness == thickness );\n    }\n    if( material != \"\" ){\n      this.plates = this.plates.filter(p => p.material_name == material );\n      let mat = this.materials.find(m => m.name == material );\n      density = mat.density;\n    }\n    if( finish != \"\" ){\n      this.plates = this.plates.filter(p => p.finish_name == finish );\n    }\n    if( scotch == 1 ){\n      this.plates = this.plates.filter(p => p.scotch == scotch );\n    }\n    if( pvc == 1 ){\n      this.plates = this.plates.filter(p => p.pvc == pvc );\n    }\n\n    function compare(a: Plate, b: Plate ): number{\n      if( a.area > b.area ) return 1;\n      if( a.area < b.area ) return -1;\n      return 0; \n    }\n\n    this.plates.sort(compare);\n\n    // area is in square cm, thickness is in mm\n    let volume = area*(thickness/10);\n    // density is g/cubic cm\n    this.weight = (volume*density)/1000;\n\n    console.log(this.plates);\n  }\n\n\n}\n","\n<div class=\"container\" style=\"margin-top: 1rem;\">\n    <a class=\"btn btn-success\" [routerLink]=\"['/platecreate']\">Kreiranje plošče</a>\n    <div class=\"row\" style=\"margin-top: 1rem;\">\n        <div class=\"card w-100\">\n            <div class=\"card-body\">\n                <h6>Iskalnik</h6>\n                <form [formGroup]=\"searchForm\" (ngSubmit)=\"searchPlates(searchForm)\" >\n                    <div class=\"row\">\n                        <div class=\"col-sm-3\">\n                            <input type=\"number\" class=\"form-control\" id=\"area\" placeholder=\"Površina (cm&#178;)\" formControlName=\"area\">\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <input type=\"number\" class=\"form-control\" id=\"thickness\" placeholder=\"Debelina (mm)\" formControlName=\"thickness\">\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <select class=\"form-control\" id=\"material\" formControlName=\"material_id\">\n                                <option [value]=\"\" selected>Material</option>\n                                <option *ngFor=\"let mat of materials\" [value]=\"mat.name\">{{ mat.name }}</option>\n                            </select>\n                        </div>\n                        <div class=\"col-sm-2\">\n                            <select class=\"form-control\" id=\"finish\" formControlName=\"finish_id\">\n                                <option [value]=\"\" selected>Obdelava</option>\n                                <option *ngFor=\"let fin of finishes\" [value]=\"fin.name\">{{ fin.name }}</option>\n                            </select>\n                        </div>\n                        <div class=\"col-sm-1\">\n                            <div class=\"form-check form-check-inline\">\n                                <input type=\"checkbox\" class=\"form-check-input\" id=\"pvc\" formControlName=\"pvc\">\n                                <label class=\"form-check-label\" for=\"pvc\">PVC</label>\n                            </div>\n                            <div class=\"form-check form-check-inline\">\n                                <input type=\"checkbox\" class=\"form-check-input\" id=\"scotch\" formControlName=\"scotch\">\n                                <label class=\"form-check-label\" for=\"scotch\">SB</label>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-1\">\n                            <button class=\"btn btn-outline-dark\">Išči</button>\n                        </div>\n                    </div>\n                </form>\n                <div *ngIf=\"weight!=0\">\n                    <h6>Predvidena teža: </h6>\n                    <h5>{{ weight }} kg</h5>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"row\" style=\"margin-top: 1rem;\">\n        <table class=\"table\">\n            <tr>\n                <th>Artikel</th>\n                <th>Št. formata</th>\n                <th>Površina (cm&#178;)</th>\n                <th>Debelina (mm)</th>\n                <th>Teža</th>\n                <th>Lokacija</th>\n                <th></th>\n            </tr>\n            <tr *ngFor=\"let plate of plates\">\n                <td>{{ plate.article_name }} - {{ plate.material_name }} {{ plate.finish_name }} <div *ngIf=\"plate.pvc==1 || plate.pvc=='1'\">+ PVC</div><div *ngIf=\"plate.scotch==1 || plate.scotch=='1'\">+ SB</div></td>\n                <td>{{ plate.name }}</td>\n                <td>{{ plate.area }}</td>\n                <td>{{ plate.thickness }}</td>\n                <td>{{ (((plate.thickness/10) * plate.area) * plate.density)/1000 }} kg</td>\n                <td>{{ plate.location_name }}</td>\n                <td><a routerLink=\"/plate/{{ plate.plate_id }}\">Posodobi</a></td>\n            </tr>\n        </table>\n    </div>\n</div>","import { Component, OnInit, ElementRef, AfterViewInit, ViewChild, AfterContentInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray, FormArrayName, FormControl } from '@angular/forms';\nimport { first, timeout } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Plate } from '../../../models/plate';\nimport { Archive } from '../../../models/archive';\nimport { PlateService } from '../../../service/plate.service';\n\nimport { Location } from '../../../models/location';\nimport { LocationService } from '../../../service/location.service';\n\nimport { Article } from '../../../models/article'; \nimport { ArticleService } from '../../../service/article.service';\n\n@Component({\n  selector: 'app-plate-archive',\n  templateUrl: './plate-archive.component.html',\n  styleUrls: ['./plate-archive.component.css']\n})\nexport class PlateArchiveComponent implements OnInit {\n  \n  id: number;\n  dims: FormArray;\n  articles: Article[] = [];\n  locations: Location[] = [];\n  plates: Plate[] = [];\n  plate: Plate = new Plate();\n  archives: Archive[] = [];\n  plateForm;\n  area: number;\n  \n  constructor(private formBuilder: FormBuilder, \n    private router: Router,\n    private route: ActivatedRoute, \n    public locationService: LocationService, \n    public articleService: ArticleService, \n    public plateService: PlateService) {\n  }\n\n  ngOnInit(): void {\n    \n    this.getPlate();\n\n    this.plateService.getArchives(+this.route.snapshot.paramMap.get('plate_id')).subscribe((archive: Archive[]) => {\n      for( let arch of archive ){\n        this.archives.push(new Archive(\n          arch.platearchive_id,\n          arch.plate_id,\n          arch.date_created,\n          arch.user_name,\n          arch.user_surname,\n          arch.user_id,\n          arch.thickness,\n          arch.area,\n          arch.dimx,\n          arch.dimy,\n          arch.density,\n          arch.weight\n        ))\n      }\n    });\n\n    console.log(this.archives);\n\n    this.articleService.getArticles().subscribe((articles: Article[]) =>{\n      let arts = articles['body'];\n      \n      for(let art of arts ){\n        this.articles.push(new Article(\n          art.article_id,\n          art.name,\n          art.description,\n          art.date_created,\n          art.uname,\n          art.usurname,\n          art.user_id,\n          art.mname,\n          art.fname\n        ));\n      }\n    });\n    \n    this.locationService.getLocations().subscribe((locations: Location[]) => {\n      let locs = locations['body'];\n      \n      for(let loc of locs ){\n        this.locations.push(new Location(\n          loc.location_id, \n          loc.name, \n          loc.date_created, \n          loc.uname, \n          loc.usurname, \n          loc.user_id\n        ));\n      }\n    });\n  }\n\n  getPlate(): void {\n    this.plateService.getPlate(+this.route.snapshot.paramMap.get('plate_id')).subscribe(data => {\n      this.plate = data;\n    } );\n    \n  }\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n    <div class=\"row\">\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" [routerLink]=\"['/platecreate']\">Kreiranje plošče</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" [routerLink]=\"['/platelist']\">Seznam plošč</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" routerLink=\"/plate/{{ plate.plate_id }}\">Posodobi ploščo</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" routerLink=\"/plateprint/{{ plate.plate_id }}\">Natisni odrez</a>\n        </div>\n        <div class=\"col-sm-4\"></div>\n    </div>\n    <div class=\"card\" style=\"margin-top: 1rem;\">\n        <div class=\"card-body\">\n            <table class=\"table\">\n                <tr>\n                    <td>Artikel - Material/Obdelava/Debelina - Naziv Plošče:</td>\n                    <td>{{ plate.article_name }} - {{ plate.material_name }} {{ plate.finish_name }} {{ plate.thickness }} mm - {{ plate.name }}</td>\n                </tr>\n                <tr>\n                    <td>Šarža:</td>\n                    <td><h5>{{ plate.charge }}</h5></td>\n                </tr>\n                <tr>\n                    <td>Površina trenutno na voljo:</td>\n                    <td>{{ plate.area }} cm&#178;</td>\n                </tr>\n                <tr>\n                    <td>PVC/Scotch:</td>\n                    <td>\n                        <div *ngIf=\"plate.pvc == 1; else elseBlockPvc\">DA / </div>\n                        <ng-template #elseBlockPvc>NE / </ng-template>\n                        <div *ngIf=\"plate.scotch == 1; else elseBlockScotch\">DA</div>\n                        <ng-template #elseBlockScotch>NE</ng-template>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Plošča dodana:</td>\n                    <td>{{ plate.date_created }}</td>\n                </tr>\n                <tr>\n                    <td>Zadnja sprememba:</td>\n                    <td>\n                        <div *ngIf=\"plate.date_changed != '01.01.1970 01:00'; else elseBlockDate\">{{ plate.date_changed }}</div>\n                        <ng-template #elseBlockDate>Plošča še ni bila spremenjena</ng-template>\n                    </td>\n                </tr>\n                <tr>\n                    <td>Trenutna lokacija:</td>\n                    <td>{{ plate.location_name }}</td>\n                </tr>\n            </table>\n        </div>\n        \n    </div>\n    <div class=\"card\" style=\"margin-top: 1rem;\">\n        <div class=\"card-body\">\n            <table class=\"table\">\n                <tr>\n                    <th>Datum spremembe</th>\n                    <th>Površina plošče</th>\n                    <th>Teža plošče</th>\n                    <th>Uporabnik</th>\n                    <th></th>\n                </tr>\n                <tr *ngFor=\"let arch of archives\">\n                    <td>{{ arch.date_created }}</td>\n                    <td>{{ arch.area }} cm&#178;</td>\n                    <td>{{ arch.weight }} kg</td>\n                    <td>{{ arch.user_name }} {{ arch.user_surname }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ElementRef, AfterViewInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray, FormArrayName, FormControl } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n\nimport { Plate } from '../../../models/plate';\nimport { PlateService } from '../../../service/plate.service';\n\nimport { Location } from '../../../models/location';\nimport { LocationService } from '../../../service/location.service';\n\nimport { Article } from '../../../models/article'; \nimport { ArticleService } from '../../../service/article.service';\nimport { ThrowStmt } from '@angular/compiler';\n\n@Component({\n  selector: 'app-plate-create',\n  templateUrl: './plate-create.component.html',\n  styleUrls: ['./plate-create.component.css']\n})\nexport class PlateCreateComponent implements OnInit {\n  \n  @ViewChild('platedraw', { static: true })\n  canvas: ElementRef<HTMLCanvasElement>;  \n  \n  private ctx: CanvasRenderingContext2D;\n  errorMessage = '';\n  plateForm;\n  dims: FormArray;\n\n  articles: Article[] = [];\n  locations: Location[] = [];\n\n  constructor(\n    private formBuilder: FormBuilder, \n    private router: Router, \n    public locationService: LocationService, \n    public articleService: ArticleService, \n    public plateService: PlateService ) {\n      this.plateForm = this.formBuilder.group({\n        article_id: [''],\n        name: ['', Validators.required],\n        charge: ['', Validators.required],\n        thickness: ['', Validators.required],\n        pvc: [''],\n        scotch: [''],\n        location_id: ['', Validators.required],\n        user_id: [''],\n        dims: this.formBuilder.array([ this.createDim() ])\n      });\n   }\n\n   createDim(): FormGroup{\n     return this.formBuilder.group({\n       x: [''],\n       y: ['']\n     })\n   }\n\n  addDim(): void {\n    this.dims = this.plateForm.get('dims') as FormArray;\n    this.dims.push(this.createDim());\n   }\n\n   removeDim(i): void {\n    this.dims = this.plateForm.get('dims') as FormArray;\n    this.dims.removeAt(i);\n   }\n\n   ngOnInit(): void {\n    this.articleService.getArticles().subscribe((articles: Article[]) =>{\n      let arts = articles['body'];\n      \n      for(let art of arts ){\n        this.articles.push(new Article(\n          art.article_id,\n          art.name,\n          art.description,\n          art.date_created,\n          art.uname,\n          art.usurname,\n          art.user_id,\n          art.mname,\n          art.fname\n        ));\n      }\n    });\n\n    this.locationService.getLocations().subscribe((locations: Location[]) => {\n      let locs = locations['body'];\n      \n      for(let loc of locs ){\n        this.locations.push(new Location(\n          loc.location_id, \n          loc.name, \n          loc.date_created, \n          loc.uname, \n          loc.usurname, \n          loc.user_id\n        ));\n      }\n    })\n\n    this.ctx = this.canvas.nativeElement.getContext('2d');\n    this.ctx.font = \"16px Arial\";\n  }\n\n  animate(): void {\n    let dims =  this.plateForm.get('dims').controls;\n    let x, y, x1, y1, distance, xm, ym;\n\n    this.ctx.fillStyle = \"#FFFFFF\";\n    this.ctx.fillRect(0,0,700,350);\n    this.ctx.fillStyle = \"black\";\n\n    this.ctx.beginPath();\n    this.ctx.moveTo(5,5);\n\n    xm = ym = 0;\n    x1 = 5;\n    y1 = 5;\n    \n    for( let el of dims ){\n      x = (el.controls['x'].value/10)+5;\n      y = (el.controls['y'].value/10)+5;\n      this.ctx.lineTo(x,y);\n\n      //distance between 2 points... formula src: https://www.mathplanet.com/education/algebra-2/conic-sections/distance-between-two-points-and-the-midpoint\n      distance = Math.sqrt( (Math.pow((x1-x),2) + Math.pow((y1-y),2)) );\n\n      //midpoint between 2 points... formula from same url as formula for distance\n      xm = (x+x1)/2;\n      ym = (y+y1)/2;\n\n      //locate output text coordinates\n      if( x1 == x ){\n        this.ctx.fillText((distance*10).toString() + \" mm\", xm+20, ym );\n      } else if( y1 == y ){\n        this.ctx.fillText((distance*10).toString() + \" mm\", xm, ym+20 );\n      } else{\n        this.ctx.fillText((distance*10).toString() + \" mm\", xm+20, ym+20 );\n      }\n\n      x1 = x;\n      y1 = y;\n    }\n\n    this.ctx.lineTo(5,5);\n\n    distance = Math.sqrt( (Math.pow((x1-5),2) + Math.pow((y1-5),2)) );\n\n    xm = (5+x1)/2;\n    ym = (5+y1)/2;\n    \n    //locate output text coordinates\n    if( x1 == x ){\n      this.ctx.fillText((distance*10).toString() + \" mm\", xm+20, ym );\n    } else if( y1 == y ){\n      this.ctx.fillText((distance*10).toString() + \" mm\", xm, ym+20 );\n    } \n\n    this.ctx.stroke();\n    this.ctx.closePath();\n  }\n\n  createPlate(plateForm){\n    this.plateForm.controls['user_id'].setValue(sessionStorage.getItem(\"user\"));\n\n    let formValid = true;\n\n    if(this.plateForm.controls['article_id'].value == ''){\n      //alert(\"Prosim vnesite šifro artikla!\");\n      this.errorMessage+=\"Vnesite šifro artikla!\\n\";\n      formValid = false;\n    }\n    if(this.plateForm.controls['name'].value == ''){\n      //alert(\"Prosim vnesite naziv plošče!\");\n      this.errorMessage+=\"Vnesite naziv plošče!\\n\";\n      formValid = false;\n    }\n    if(this.plateForm.controls['charge'].value == '' ){\n      //alert(\"Prosim vnesite šaržo!\");\n      this.errorMessage+=\"Vnesite šaržo!\\n\";\n      formValid = false;\n    }\n    if(this.plateForm.controls['thickness'].value == '' || this.plateForm.controls['thickness'].value == null ){\n      //alert(\"Prosim vnesite debelino plošče!\");\n      this.errorMessage+=\"Vnesite debelino plošče!\\n\";\n      formValid = false;\n    }\n    if(this.plateForm.controls['location_id'].value == '' ){\n      //alert(\"Prosim vnesite lokacijo plošče!\");\n      this.errorMessage+=\"Vnesite lokacijo plošče!\\n\";\n      formValid = false;\n    }\n    if(((this.plateForm.controls['dims'].value[0].x == '' && this.plateForm.controls['dims'].value[0].y) == '') && this.plateForm.controls['dims'].value.length == 1){\n      //alert(\"Prosim vnesite veljavne mere plošče!\");\n      this.errorMessage+=\"Vnesite veljavne mere plošče!\";\n      formValid = false;\n    }\n\n    if( formValid == true ){\n      this.plateService.createPlate(this.plateForm.value).pipe(first()).subscribe(       \n        data => {\n          this.router.navigate(['/platelist']);\n      },\n      error => {\n        console.log(error)\n      });\n    } else{\n      alert(this.errorMessage)\n    }\n    this.errorMessage=\"\";\n    console.log(this.plateForm.controls['dims'].value.length);\n  }\n\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n        <div class=\"card\">\n            <div class=\"card-body\">\n                <h5 class=\"card-title\">Ustvari novo ploščo</h5>\n                <form [formGroup]=\"plateForm\" (ngSubmit)=\"createPlate(plateForm)\" >\n                    <div class=\"form-group\">\n                        <label for=\"article\">Artikel</label>\n                        <select class=\"form-control\" id=\"article\" formControlName=\"article_id\" required>\n                            <option *ngFor=\"let art of articles\" [value]=\"art.article_id\">{{ art.name }} - {{ art.material_name }} {{ art.finish_name }}</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"name\">Št. formata</label>\n                        <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" placeholder=\"Št. formata\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"charge\">Šarža</label>\n                        <input type=\"text\" class=\"form-control\" id=\"charge\" formControlName=\"charge\" placeholder=\"Šarža\" required>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"thickness\">Debelina plošče (mm)</label>\n                        <input type=\"number\" class=\"form-control\" id=\"thickness\" formControlName=\"thickness\" placeholder=\"Debelina v (mm)\" required>\n                    </div>\n                    <div class=\"form-group form-check\">\n                        <input type=\"checkbox\" class=\"form-check-input\" id=\"pvc\" formControlName=\"pvc\">\n                        <label class=\"form-check-label\" for=\"pvc\">PVC</label>\n                    </div>\n                    <div class=\"form-group form-check\">\n                        <input type=\"checkbox\" class=\"form-check-input\" id=\"scotch\" formControlName=\"scotch\">\n                        <label class=\"form-check-label\" for=\"scotch\">SB</label>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"location_id\">Lokacija</label>\n                        <select class=\"form-control\" id=\"location_id\" formControlName=\"location_id\" required>\n                            <option *ngFor=\"let loc of locations\" [value]=\"loc.location_id\">{{ loc.name }}</option>\n                        </select>\n                    </div>\n                    <div class=\"form-group\">\n                        <label for=\"dims\">Dimenzije</label>\n                        <table class=\"table\" style=\"margin-top: 1rem;\">\n                            <tr>\n                                <th>X</th>\n                                <th>Y</th>\n                            </tr>\n                            <tr formArrayName=\"dims\" *ngFor=\"let dim of plateForm.get('dims').controls; let i = index\">\n                                <ng-container [formGroupName]=\"i\">\n                                    <td><input class=\"form-control\" type=\"number\" formControlName=\"x\" placeholder=\"x (mm)\" (blur)=\"animate()\"></td>\n                                    <td><input class=\"form-control\" type=\"number\" formControlName=\"y\" placeholder=\"y (mm)\" (blur)=\"animate()\"></td>\n                                    <td><button type=\"button\" (click)=\"removeDim(i)\">X</button></td>\n                                </ng-container>\n                            </tr>\n                        </table>\n                        <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"addDim()\">Dodaj x,y</button>\n                        \n                    </div>\n                    <div class=\"form-group\">\n                        <canvas #platedraw width=700 height=350 style=\"border: dotted; border-width: 1px;\"></canvas>\n                    </div>\n                    <button type=\"submit\" class=\"btn btn-primary\">Dodaj artikel</button>\n                </form>\n            </div>\n        </div>\n</div>","import { Component, OnInit, ElementRef, AfterViewInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray, FormArrayName, FormControl } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Observable } from \"rxjs\";\nimport { HttpClient } from '@angular/common/http';\n\nimport { Plate } from '../../../models/plate';\nimport { PlateService } from '../../../service/plate.service';\n\nimport { Material } from '../../../models/material';\nimport { MaterialService } from '../../../service/material.service';\n\nimport { Finish } from '../../../models/finish';\nimport { FinishService } from '../../../service/finish.service';\n\n@Component({\n  selector: 'app-plate-list',\n  templateUrl: './plate-list.component.html',\n  styleUrls: ['./plate-list.component.css']\n})\nexport class PlateListComponent implements OnInit {\n  plates: Plate[] = [];\n  res: Plate[] = [];\n  finishes: Finish[] = [];\n  weight: number = 0;\n  materials: Material[] = [];\n\n  searchForm;\n\n  constructor( public plateService: PlateService, public finishService: FinishService, public materialService: MaterialService, private formBuilder: FormBuilder ) { \n    this.searchForm = this.formBuilder.group({\n      area: [''],\n      material_id: [''],\n      finish_id: [''],\n      pvc: [''],\n      scotch: [''],\n      thickness: ['']\n    });\n  }\n\n  ngOnInit(): void {\n    \n    this.plateService.getPlates()\n      .pipe(first())\n      .subscribe( (plates: Plate[]) => {\n        for( let plate of plates ){\n          this.plates.push(plate);\n        }\n      }\n    );\n\n    this.res = this.plates;\n    this.finishService.getFinishes().subscribe((finishes: Finish[]) => {\n      let finishe = finishes['body'];\n\n      for( let finish of finishe ){\n        this.finishes.push(new Finish(finish.finish_id, finish.name, finish.description, finish.date_created, finish.uname, finish.usurname, finish.user_id));\n      }\n      //console.log( this.finishes );\n    });\n\n    this.materialService.getMaterials().subscribe((materials: Material[])=> {\n      let mats = materials['body'];\n\n      for( let mat of mats ){\n        this.materials.push(new Material(mat.material_id, mat.name, mat.description, mat.date_created, mat.uname, mat.usurname, mat.density, mat.user_id));\n      }\n      //console.log(this.materials)\n    });\n\n    console.log(this.plates)\n  }\n\n  searchPlates(searchform: any): void {\n  \n    let scotch = 0;\n    let pvc = 0;\n    let area = 0;\n    let thickness = 0;\n    let material = \"\";\n    let finish = \"\";\n    let density = 0;\n\n    if(this.searchForm.controls['area'].value != \"\" && this.searchForm.controls['area'].value != null){\n      area = this.searchForm.controls['area'].value;\n    }\n    if(this.searchForm.controls['thickness'].value != \"\" && this.searchForm.controls['thickness'].value != null ){\n      thickness = this.searchForm.controls['thickness'].value;\n    }\n    if(this.searchForm.controls['finish_id'].value != \"\" ){\n      finish = this.searchForm.controls['finish_id'].value;\n    }\n    if(this.searchForm.controls['material_id'].value != \"\" ){\n      material = this.searchForm.controls['material_id'].value;\n    }\n    if(this.searchForm.controls['pvc'].value == true ){\n      pvc = 1;\n    }\n    if(this.searchForm.controls['scotch'].value == true ){\n      scotch = 1;\n    }\n\n    this.plates = this.res;\n\n    this.plates = this.plates.filter(p => p.area >= area);\n\n    if( thickness != 0 ){\n      this.plates = this.plates.filter(p => p.thickness == thickness );\n    }\n    if( material != \"\" ){\n      this.plates = this.plates.filter(p => p.material_name == material );\n      let mat = this.materials.find(m => m.name == material );\n      density = mat.density;\n    }\n    if( finish != \"\" ){\n      this.plates = this.plates.filter(p => p.finish_name == finish );\n    }\n    if( scotch == 1 ){\n      this.plates = this.plates.filter(p => p.scotch == scotch );\n    }\n    if( pvc == 1 ){\n      this.plates = this.plates.filter(p => p.pvc == pvc );\n    }\n\n    function compare(a: Plate, b: Plate ): number{\n      if( a.area > b.area ) return 1;\n      if( a.area < b.area ) return -1;\n      return 0; \n    }\n\n    this.plates.sort(compare);\n\n    // area is in square cm, thickness is in mm\n    let volume = area*(thickness/10);\n    // density is g/cubic cm\n    this.weight = (volume*density)/1000;\n\n    console.log(this.plates);\n  }\n\n\n}","\n<div class=\"container\" style=\"margin-top: 1rem;\">\n        <a class=\"btn btn-success\" [routerLink]=\"['/platecreate']\">Kreiranje plošče</a>\n        <div class=\"row\" style=\"margin-top: 1rem;\">\n            <div class=\"card w-100\">\n                <div class=\"card-body\">\n                    <h6>Iskalnik</h6>\n                    <form [formGroup]=\"searchForm\" (ngSubmit)=\"searchPlates(searchForm)\" >\n                        <div class=\"row\">\n                            <div class=\"col-sm-3\">\n                                <input type=\"number\" class=\"form-control\" id=\"area\" placeholder=\"Površina (cm&#178;)\" formControlName=\"area\">\n                            </div>\n                            <div class=\"col-sm-2\">\n                                <input type=\"number\" class=\"form-control\" id=\"thickness\" placeholder=\"Debelina (mm)\" formControlName=\"thickness\">\n                            </div>\n                            <div class=\"col-sm-2\">\n                                <select class=\"form-control\" id=\"material\" formControlName=\"material_id\">\n                                    <option [value]=\"\" selected>Material</option>\n                                    <option *ngFor=\"let mat of materials\" [value]=\"mat.name\">{{ mat.name }}</option>\n                                </select>\n                            </div>\n                            <div class=\"col-sm-2\">\n                                <select class=\"form-control\" id=\"finish\" formControlName=\"finish_id\">\n                                    <option [value]=\"\" selected>Obdelava</option>\n                                    <option *ngFor=\"let fin of finishes\" [value]=\"fin.name\">{{ fin.name }}</option>\n                                </select>\n                            </div>\n                            <div class=\"col-sm-1\">\n                                <div class=\"form-check form-check-inline\">\n                                    <input type=\"checkbox\" class=\"form-check-input\" id=\"pvc\" formControlName=\"pvc\">\n                                    <label class=\"form-check-label\" for=\"pvc\">PVC</label>\n                                </div>\n                                <div class=\"form-check form-check-inline\">\n                                    <input type=\"checkbox\" class=\"form-check-input\" id=\"scotch\" formControlName=\"scotch\">\n                                    <label class=\"form-check-label\" for=\"scotch\">SB</label>\n                                </div>\n                            </div>\n                            <div class=\"col-sm-1\">\n                                <button class=\"btn btn-outline-dark\">Išči</button>\n                            </div>\n                        </div>\n                    </form>\n                    <div *ngIf=\"weight!=0\">\n                        <h6>Predvidena teža: </h6>\n                        <h5>{{ weight }} kg</h5>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"row\" style=\"margin-top: 1rem;\">\n            <table class=\"table\">\n                <tr>\n                    <th>Artikel</th>\n                    <th>Št. formata</th>\n                    <th>Površina (cm&#178;)</th>\n                    <th>Debelina (mm)</th>\n                    <th>Teža</th>\n                    <th>Lokacija</th>\n                    <th></th>\n                </tr>\n                <tr *ngFor=\"let plate of plates\">\n                    <td *ngIf=\"plate.active==1\">{{ plate.article_name }} - {{ plate.material_name }} {{ plate.finish_name }} <div *ngIf=\"plate.pvc==1 || plate.pvc=='1'\">+ PVC</div><div *ngIf=\"plate.scotch==1 || plate.scotch=='1'\">+ SB</div></td>\n                    <td *ngIf=\"plate.active==1\">{{ plate.name }}</td>\n                    <td *ngIf=\"plate.active==1\">{{ plate.area }}</td>\n                    <td *ngIf=\"plate.active==1\">{{ plate.thickness }}</td>\n                    <td *ngIf=\"plate.active==1\">{{ (((plate.thickness/10) * plate.area) * plate.density)/1000 }} kg</td>\n                    <td *ngIf=\"plate.active==1\">{{ plate.location_name }}</td>\n                    <td *ngIf=\"plate.active==1\"><a routerLink=\"/plate/{{ plate.plate_id }}\">Posodobi</a></td>\n                </tr>\n            </table>\n        </div>\n</div>","import { Component, OnInit, ElementRef, AfterViewInit, ViewChild, AfterContentInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray, FormArrayName, FormControl } from '@angular/forms';\nimport { first, timeout } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Plate } from '../../../models/plate';\nimport { Plateprint } from '../../../models/plateprint';\nimport { PlateService } from '../../../service/plate.service';\n\nimport { Location } from '../../../models/location';\nimport { LocationService } from '../../../service/location.service';\n\nimport { Article } from '../../../models/article'; \nimport { ArticleService } from '../../../service/article.service';\n\n@Component({\n  selector: 'app-plate-print',\n  templateUrl: './plate-print.component.html',\n  styleUrls: ['./plate-print.component.css']\n})\nexport class PlatePrintComponent implements OnInit {\n\n  id: number;\n  dims: FormArray;\n  articles: Article[] = [];\n  locations: Location[] = [];\n  plates: Plate[] = [];\n  plate: Plate = new Plate();\n  plateprints: Plateprint[] = [];\n  plateForm;\n  area: number;\n  \n  constructor(private formBuilder: FormBuilder, \n    private router: Router,\n    private route: ActivatedRoute, \n    public locationService: LocationService, \n    public articleService: ArticleService, \n    public plateService: PlateService) {\n  }\n\n  ngOnInit(): void {\n    \n    this.getPlate();\n\n    this.plateService.getPlateprints(+this.route.snapshot.paramMap.get('plate_id')).subscribe((plateprints: Plateprint[]) => {\n      for( let arch of plateprints ){\n        this.plateprints.push(new Plateprint(\n          arch.plateprint_id,\n          arch.plate_id,\n          arch.date_created,\n          arch.user_name,\n          arch.user_surname,\n          arch.user_id,\n          arch.weight\n        ))\n      }\n    });\n\n    this.articleService.getArticles().subscribe((articles: Article[]) =>{\n      let arts = articles['body'];\n      \n      for(let art of arts ){\n        this.articles.push(new Article(\n          art.article_id,\n          art.name,\n          art.description,\n          art.date_created,\n          art.uname,\n          art.usurname,\n          art.user_id,\n          art.mname,\n          art.fname\n        ));\n      }\n    });\n    \n    this.locationService.getLocations().subscribe((locations: Location[]) => {\n      let locs = locations['body'];\n      \n      for(let loc of locs ){\n        this.locations.push(new Location(\n          loc.location_id, \n          loc.name, \n          loc.date_created, \n          loc.uname, \n          loc.usurname, \n          loc.user_id\n        ));\n      }\n    });\n  }\n\n  getPlate(): void {\n    this.plateService.getPlate(+this.route.snapshot.paramMap.get('plate_id')).subscribe(data => {\n      this.plate = data;\n    } );\n    \n  }\n\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n    <div class=\"row\">\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" [routerLink]=\"['/platecreate']\">Kreiranje plošče</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" [routerLink]=\"['/platelist']\">Seznam plošč</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a  class=\"btn btn-success\" routerLink=\"/plate/{{ plate.plate_id }}\">Posodobi ploščo</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" routerLink=\"/platearchive/{{ plate.plate_id }}\">Zgodovina plošče</a>\n        </div>\n        <div class=\"col-sm-4\"></div>\n    </div>\n    <div class=\"card\" style=\"margin-top: 1rem;\">\n        <div class=\"card-body\">\n            <table class=\"table\">\n                <tr>\n                    <td>Artikel - Material/Obdelava/Debelina/PVC/SB - Št. formata:</td>\n                    <td>\n                        {{ plate.article_name }} - {{ plate.material_name }} {{ plate.finish_name }} {{ plate.thickness }} mm \n                        <div *ngIf=\"plate.pvc == 1; else elseBlockPvc\">DA / </div>\n                        <ng-template #elseBlockPvc>NE / </ng-template>\n                        <div *ngIf=\"plate.scotch == 1; else elseBlockScotch\">DA</div>\n                        <ng-template #elseBlockScotch>NE</ng-template> - {{ plate.name }}\n                    </td>\n                </tr>\n                <tr>\n                    <td>Šarža:</td>\n                    <td><h5>{{ plate.charge }}</h5></td>\n                </tr>\n                <tr>\n                    <td>Trenutna lokacija:</td>\n                    <td>{{ plate.location_name }}</td>\n                </tr>\n            </table>\n        </div>\n        \n    </div>\n    <div class=\"card\" style=\"margin-top: 1rem;\">\n        <div class=\"card-body\">\n            <table class=\"table\">\n                <tr>\n                    <th>Datum spremembe</th>\n                    <th>Teža odreza</th>\n                    <th></th>\n                </tr>\n                <tr *ngFor=\"let arch of plateprints\">\n                    <td>{{ arch.date_created }}</td>\n                    <td>{{ arch.weight }} kg</td>\n                    <td><a routerLink=\"/plateprintdetail/{{ arch.plateprint_id }}\">Natisni</a></td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</div>","import { Component, OnInit, ElementRef, AfterViewInit, ViewChild, AfterContentInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray, FormArrayName, FormControl } from '@angular/forms';\nimport { first, timeout } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Plate } from '../../../models/plate';\nimport { Plateprint } from '../../../models/plateprint';\nimport { PlateService } from '../../../service/plate.service';\n\nimport { Location } from '../../../models/location';\nimport { LocationService } from '../../../service/location.service';\n\nimport { Article } from '../../../models/article'; \nimport { ArticleService } from '../../../service/article.service';\n\nimport { Material } from '../../../models/material'; \nimport { MaterialService } from '../../../service/material.service';\n\n@Component({\n  selector: 'app-plate-split',\n  templateUrl: './plate-split.component.html',\n  styleUrls: ['./plate-split.component.css']\n})\nexport class PlateSplitComponent implements OnInit {\n \n  @ViewChild('platedrawcurrent', { static: true }) canvas: ElementRef<HTMLCanvasElement>;  \n  \n  @ViewChild('platenew', { static: true }) canvasNew: ElementRef<HTMLCanvasElement>;\n  @ViewChild('platesecond', { static: true }) canvasSecond: ElementRef<HTMLCanvasElement>;\n\n  private ctx: CanvasRenderingContext2D;\n  private ctxNew: CanvasRenderingContext2D;\n  private ctxSecond: CanvasRenderingContext2D;\n\n  id: number;\n  dimsFirst: FormArray;\n  dimsSecond: FormArray;\n  articles: Article[] = [];\n  locations: Location[] = [];\n  plates: Plate[] = [];\n  plate: Plate = new Plate();\n  materials: Material[] = [];\n  plateprints: Plateprint[] = [];\n  plateForm;\n  area: number;\n  errorMessage = '';\n\n  createDim(): FormGroup{\n    return this.formBuilder.group({\n      x: [''],\n      y: ['']\n    })\n  }\n\n  addDimFirst(): void {\n   this.dimsFirst = this.plateForm.get('dimsFirst') as FormArray;\n   this.dimsFirst.push(this.createDim());\n  }\n\n  addDimSecond(): void {\n   this.dimsSecond = this.plateForm.get('dimsSecond') as FormArray;\n   this.dimsSecond.push(this.createDim());\n  }\n\n  constructor(private formBuilder: FormBuilder, \n    private router: Router,\n    private route: ActivatedRoute, \n    public locationService: LocationService, \n    public articleService: ArticleService, \n    public plateService: PlateService,\n    public materialService: MaterialService ) {\n  }\n\n  ngOnInit(): void {\n    \n    this.getPlate();\n\n    this.plateForm = this.formBuilder.group({\n      plate_id: [''],\n      location_idFirst: [''],\n      location_idSecond: [''],\n      dimsFirst: this.formBuilder.array([ this.createDim() ]),\n      dimsSecond: this.formBuilder.array([ this.createDim() ]),\n      name: [''],\n      curr_name: [''],\n      dimx: [''],\n      dimy: [''],\n      charge: [''],\n      user_id: [],\n      thickness: [],\n      article_id: [],\n      pvc: [],\n      scotch: [],\n      density: []\n    });\n\n    this.articleService.getArticles().subscribe((articles: Article[]) =>{\n      let arts = articles['body'];\n      \n      for(let art of arts ){\n        this.articles.push(new Article(\n          art.article_id,\n          art.name,\n          art.description,\n          art.date_created,\n          art.uname,\n          art.usurname,\n          art.user_id,\n          art.mname,\n          art.fname\n        ));\n      }\n    });\n    \n    this.locationService.getLocations().subscribe((locations: Location[]) => {\n      let locs = locations['body'];\n      \n      for(let loc of locs ){\n        this.locations.push(new Location(\n          loc.location_id, \n          loc.name, \n          loc.date_created, \n          loc.uname, \n          loc.usurname, \n          loc.user_id\n        ));\n      }\n    });\n\n    this.materialService.getMaterials().subscribe((materials: Material[])=> {\n      let mats = materials['body'];\n\n      for( let mat of mats ){\n        this.materials.push(new Material(mat.material_id, mat.name, mat.description, mat.date_created, mat.uname, mat.usurname, mat.density, mat.user_id));\n      }\n    });\n\n    this.ctx = this.canvas.nativeElement.getContext('2d');\n    this.ctxNew = this.canvasNew.nativeElement.getContext('2d');\n    this.ctxSecond = this.canvasSecond.nativeElement.getContext('2d');\n  }\n\n  getPlate(): void {\n    this.plateService.getPlate(+this.route.snapshot.paramMap.get('plate_id')).subscribe(data => {\n      this.plate = data;\n      this.canvasDraw();\n    } );\n    \n  }\n\n  canvasDraw(){\n    let dimx = this.plate.dimx.split(\",\");\n    let dimy = this.plate.dimy.split(\",\");\n    \n    let x, y, x1, y1, distance, xm, ym;\n\n    this.ctx.fillStyle = \"#FFFFFF\";\n    this.ctx.fillRect(0,0,700,350);\n    this.ctx.fillStyle = \"black\";\n\n    this.ctx.beginPath();\n    this.ctx.moveTo(5,5);\n\n    xm = ym = 0;\n    x1 = 5;\n    y1 = 5;\n\n    for( let i = 0; i < dimx.length; i++ ){\n      x = (parseInt(dimx[i])/10)+5;\n      y = (parseInt(dimy[i])/10)+5;\n      \n      this.ctx.lineTo(x,y);\n\n      //distance between 2 points... formula src: https://www.mathplanet.com/education/algebra-2/conic-sections/distance-between-two-points-and-the-midpoint\n      distance = Math.sqrt( (Math.pow((x1-x),2) + Math.pow((y1-y),2)) );\n\n      //midpoint between 2 points... formula from same url as formula for distance\n      xm = (x+x1)/2;\n      ym = (y+y1)/2;\n\n      //locate output text coordinates\n      if( x1 == 5 && x == 5 && y == 5 && y1 == 5 ){\n\n      } else if( x1 == x ){\n        this.ctx.fillText((distance*10).toString() + \" mm\", xm+20, ym );\n      } else if( y1 == y ){\n        this.ctx.fillText((distance*10).toString() + \" mm\", xm, ym+20 );\n      } else{\n        this.ctx.fillText((distance*10).toString() + \" mm\", xm+20, ym+20 );\n      }\n\n      x1 = x;\n      y1 = y;\n    }\n\n    this.ctx.lineTo(5,5);\n    this.ctx.stroke();\n    this.ctx.closePath();\n  }\n\n  animateFirst(): void {\n    let dims =  this.plateForm.get('dimsFirst').controls;\n    let x, y, x1, y1, distance, xm, ym;\n\n    this.ctxNew.fillStyle = \"#FFFFFF\";\n    this.ctxNew.fillRect(0,0,700,350);\n    this.ctxNew.fillStyle = \"black\";\n\n    this.ctxNew.beginPath();\n    this.ctxNew.moveTo(5,5);\n\n    xm = ym = 0;\n    x1 = 5;\n    y1 = 5;\n\n    for( let el of dims ){\n      x = (el.controls['x'].value/10)+5;\n      y = (el.controls['y'].value/10)+5;\n      this.ctxNew.lineTo(x,y);\n\n      //distance between 2 points... formula src: https://www.mathplanet.com/education/algebra-2/conic-sections/distance-between-two-points-and-the-midpoint\n      distance = Math.sqrt( (Math.pow((x1-x),2) + Math.pow((y1-y),2)) );\n\n      //midpoint between 2 points... formula from same url as formula for distance\n      xm = (x+x1)/2;\n      ym = (y+y1)/2;\n\n      //locate output text coordinates\n      if( x1 == x ){\n        this.ctxNew.fillText((distance*10).toString() + \" mm\", xm+20, ym );\n      } else if( y1 == y ){\n        this.ctxNew.fillText((distance*10).toString() + \" mm\", xm, ym+20 );\n      } else{\n        this.ctxNew.fillText((distance*10).toString() + \" mm\", xm+20, ym+20 );\n      }\n\n      x1 = x;\n      y1 = y;\n    }\n    this.ctxNew.lineTo(5,5);\n\n    distance = Math.sqrt( (Math.pow((x1-5),2) + Math.pow((y1-5),2)) );\n\n    xm = (5+x1)/2;\n    ym = (5+y1)/2;\n    \n    //locate output text coordinates\n    if( x1 == x ){\n      this.ctxNew.fillText((distance*10).toString() + \" mm\", xm+20, ym );\n    } else if( y1 == y ){\n      this.ctxNew.fillText((distance*10).toString() + \" mm\", xm, ym+20 );\n    } \n\n    this.ctxNew.stroke();\n    this.ctxNew.closePath();\n  }\n\n  animateSecond(): void {\n    let dims =  this.plateForm.get('dimsSecond').controls;\n    let x, y, x1, y1, distance, xm, ym;\n\n    this.ctxSecond.fillStyle = \"#FFFFFF\";\n    this.ctxSecond.fillRect(0,0,700,350);\n    this.ctxSecond.fillStyle = \"black\";\n\n    this.ctxSecond.beginPath();\n    this.ctxSecond.moveTo(5,5);\n\n    xm = ym = 0;\n    x1 = 5;\n    y1 = 5;\n\n    for( let el of dims ){\n      x = (el.controls['x'].value/10)+5;\n      y = (el.controls['y'].value/10)+5;\n      this.ctxSecond.lineTo(x,y);\n\n      //distance between 2 points... formula src: https://www.mathplanet.com/education/algebra-2/conic-sections/distance-between-two-points-and-the-midpoint\n      distance = Math.sqrt( (Math.pow((x1-x),2) + Math.pow((y1-y),2)) );\n\n      //midpoint between 2 points... formula from same url as formula for distance\n      xm = (x+x1)/2;\n      ym = (y+y1)/2;\n\n      //locate output text coordinates\n      if( x1 == x ){\n        this.ctxSecond.fillText((distance*10).toString() + \" mm\", xm+20, ym );\n      } else if( y1 == y ){\n        this.ctxSecond.fillText((distance*10).toString() + \" mm\", xm, ym+20 );\n      } else{\n        this.ctxSecond.fillText((distance*10).toString() + \" mm\", xm+20, ym+20 );\n      }\n\n      x1 = x;\n      y1 = y;\n    }\n    this.ctxSecond.lineTo(5,5);\n\n    distance = Math.sqrt( (Math.pow((x1-5),2) + Math.pow((y1-5),2)) );\n\n    xm = (5+x1)/2;\n    ym = (5+y1)/2;\n    \n    //locate output text coordinates\n    if( x1 == x ){\n      this.ctxSecond.fillText((distance*10).toString() + \" mm\", xm+20, ym );\n    } else if( y1 == y ){\n      this.ctxSecond.fillText((distance*10).toString() + \" mm\", xm, ym+20 );\n    } \n\n    this.ctxSecond.stroke();\n    this.ctxSecond.closePath();\n  }\n\n  updatePlate(plateForm): void{\n    this.plateForm.controls['plate_id'].setValue(+this.route.snapshot.paramMap.get('plate_id'));\n    this.plateForm.controls['dimx'].setValue(this.plate.dimx);\n    this.plateForm.controls['dimy'].setValue(this.plate.dimy);\n    this.plateForm.controls['charge'].setValue(this.plate.charge);\n    this.plateForm.controls['thickness'].setValue(this.plate.thickness);\n    this.plateForm.controls['article_id'].setValue(this.plate.article_id);\n    this.plateForm.controls['pvc'].setValue(this.plate.pvc);\n    this.plateForm.controls['scotch'].setValue(this.plate.scotch);\n    this.plateForm.controls['user_id'].setValue(parseInt(sessionStorage.getItem('user')));\n    this.plateForm.controls['curr_name'].setValue(this.plate.name);\n    \n    let density = 0;\n    let mat = this.materials.find(m => m.name == this.plate.material_name );\n    density = mat.density;\n    this.plateForm.controls['density'].setValue(density);\n    console.log(this.plateForm.value);\n\n    let currArea = this.plate.area;\n\n    let area1 = 0;\n    let area2 = 0;\n\n    let polygon1 = this.plateForm.controls['dimsFirst'].value;\n    let polygon2 = this.plateForm.controls['dimsSecond'].value;\n\n    let formValid = true;\n\n    //prepare array ( add { 'x': 0, 'y': 0} at start and end of polygon array)\n    polygon1.unshift({ 'x': 0, 'y': 0});\n    polygon1.push({ 'x': 0, 'y': 0});\n    polygon2.unshift({ 'x': 0, 'y': 0});\n    polygon2.push({ 'x': 0, 'y': 0});\n    let n1 = polygon1.length;\n    let n2 = polygon2.length;\n\n    let j1 = n1 - 1;\n    let j2 = n2 - 1;\n    // javascript implementation of shoelace formula\n    for( let i = 0; i < n1; i++ ){\n      area1 += ( polygon1[j1].x + polygon1[i].x )*( polygon1[j1].y - polygon1[i].y );\n\n      j1 = i;\n    }\n    for( let i = 0; i < n2; i++ ){\n      area2 += ( polygon2[j2].x + polygon2[i].x )*( polygon2[j2].y - polygon2[i].y );\n\n      j2 = i;\n    }\n\n    area1 = area1 / 2;\n    area2 = area2 / 2;\n\n    // convert area to square centimeters\n    area1/=100;\n    area2/=100;\n\n    area1 = Math.abs(area1);\n    area2 = Math.abs(area2);\n\n    if(this.plateForm.controls['location_idFirst'].value == '' ){\n      //alert(\"Prosim vnesite lokacijo plošče!\");\n      this.errorMessage+=\"Vnesite lokacijo prve plošče!\\n\";\n      formValid = false;\n    }\n    if(this.plateForm.controls['location_idSecond'].value == '' ){\n      //alert(\"Prosim vnesite lokacijo plošče!\");\n      this.errorMessage+=\"Vnesite lokacijo druge plošče!\\n\";\n      formValid = false;\n    }\n    if(area1+area2 > currArea && area1 == 0 || area2 == 0 ){\n      \n      this.errorMessage+=\"Napaka pri vnosu plošč!\\n\";\n      formValid = false;\n    } \n    if( formValid == false ){\n      alert(this.errorMessage);\n    }\n    else{\n      this.plateService.plateSplit(this.plateForm.value).pipe(first()).subscribe(       \n        data => {\n          console.log(data);\n      },\n      error => {\n        console.log(error)\n      });\n    }\n\n    this.errorMessage = \"\";\n\n  }\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n    <div class=\"row\">\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" [routerLink]=\"['/platecreate']\">Kreiranje plošče</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" [routerLink]=\"['/platelist']\">Seznam plošč</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a  class=\"btn btn-success\" routerLink=\"/plate/{{ plate.plate_id }}\">Posodobi ploščo</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" routerLink=\"/platearchive/{{ plate.plate_id }}\">Zgodovina plošče</a>\n        </div>\n        <div class=\"col-sm-4\"></div>\n    </div>\n    <div class=\"card\" style=\"margin-top: 1rem;\">\n        <div class=\"card-body\">\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <h5>Trenutna oblika plošče: </h5>\n                    <canvas #platedrawcurrent width=\"700\" height=\"350\"></canvas>\n                </div>\n                <div class=\"col-md-6\">\n                    <table class=\"table\">\n                        <tr>\n                            <td>Artikel:</td>\n                            <td>{{ plate.article_name }} - {{ plate.material_name }} {{ plate.finish_name }}</td>\n                            <td>Št. formata</td>\n                            <td>{{ plate.name }}</td>\n                        </tr>\n                        <tr>\n                            <td>Šarža:</td>\n                            <td><h5>{{ plate.charge }}</h5></td>\n                            <td>Debelina:</td>\n                            <td>{{ plate.thickness }} mm</td>\n                        </tr>\n                        <tr>\n                            <td>Površina:</td>\n                            <td>{{ plate.area }} cm&#178;</td>\n                            <td>Teža:</td>\n                            <td>{{ (((plate.thickness/10) * plate.area) * plate.density)/1000 }} kg</td>\n                        </tr>\n                        <tr>\n                            <td>PVC:</td>\n                            <td>\n                                <div *ngIf=\"plate.pvc == 1; else elseBlockPvc\">DA</div>\n                                <ng-template #elseBlockPvc>NE</ng-template>\n                            </td>\n                            <td>SB:</td>\n                            <td>\n                                <div *ngIf=\"plate.scotch == 1; else elseBlockScotch\">DA</div>\n                                <ng-template #elseBlockScotch>NE</ng-template>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Plošča dodana:</td>\n                            <td>{{ plate.date_created }} - {{ plate.user_name }} {{ plate.user_surname }}</td>\n                            <td>Plošča spremenjena:</td>\n                            <td>\n                                <div *ngIf=\"plate.date_changed != '01.01.1970 01:00'; else elseBlockDate\">{{ plate.date_changed }}</div>\n                                <ng-template #elseBlockDate>Plošča še ni bila spremenjena</ng-template>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Trenutna lokacija:</td>\n                            <td>{{ plate.location_name }}</td>\n                            <td>Plošča v uporabi</td>\n                            <td>\n                                <div *ngIf=\"plate.active == 1; else elseBlockActive\">DA</div>\n                                <ng-template #elseBlockActive>NE</ng-template>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n            <form [formGroup]=\"plateForm\" (ngSubmit)=\"updatePlate(plateForm)\">\n                \n                <h5>Vnesi dimenzije prve plošče: </h5>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <canvas #platenew width=\"700\" height=\"350\"></canvas>\n                    </div>\n                    <div class=\"col\">\n                        <div class=\"form-group\" style=\"margin-top: -2rem;\">\n                            <table class=\"table\">\n                                <tr>\n                                    <th>X</th>\n                                    <th>Y</th>\n                                </tr>\n                                <tr formArrayName=\"dimsFirst\" *ngFor=\"let dim of plateForm.get('dimsFirst').controls; let i = index\">\n                                    <ng-container [formGroupName]=\"i\">\n                                        <td><input class=\"form-control\" type=\"number\" formControlName=\"x\" placeholder=\"x (mm)\" (blur)=\"animateFirst()\"></td>\n                                        <td><input class=\"form-control\" type=\"number\" formControlName=\"y\" placeholder=\"y (mm)\" (blur)=\"animateFirst()\"></td>\n                                    </ng-container>\n                                </tr>\n                            </table>\n                            <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"addDimFirst()\">Dodaj x,y 1. plošče</button>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"form-group\">\n                    <label for=\"location_idFirst\">Lokacija prve plošče:</label>\n                    <select class=\"form-control\" id=\"location_idFirst\" formControlName=\"location_idFirst\">\n                        <option *ngFor=\"let loc of locations\" [value]=\"loc.location_id\">{{ loc.name }}</option>\n                    </select>\n                </div>\n                \n                <h5>Vnesi dimenzije druge plošče:</h5>\n                <div class=\"row\">\n                    <div class=\"col\">\n                        <canvas #platesecond width=\"700\" height=\"350\"></canvas>\n                    </div>\n                    <div class=\"col\">\n                        <div class=\"form-group\" style=\"margin-top: -2rem;\">\n                            <table class=\"table\">\n                                <tr>\n                                    <th>X</th>\n                                    <th>Y</th>\n                                </tr>\n                                <tr formArrayName=\"dimsSecond\" *ngFor=\"let dim of plateForm.get('dimsSecond').controls; let j = index\">\n                                    <ng-container [formGroupName]=\"j\">\n                                        <td><input class=\"form-control\" type=\"number\" formControlName=\"x\" placeholder=\"x (mm)\" (blur)=\"animateSecond()\"></td>\n                                        <td><input class=\"form-control\" type=\"number\" formControlName=\"y\" placeholder=\"y (mm)\" (blur)=\"animateSecond()\"></td>\n                                    </ng-container>\n                                </tr>\n                            </table>\n                            <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"addDimSecond()\">Dodaj x,y 2. plošče</button>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class=\"form-group\">\n                    <label for=\"name\">Št. formata</label>\n                    <input type=\"text\" class=\"form-control\" id=\"name\" formControlName=\"name\" placeholder=\"Št. formata\" required>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"location_idSecond\">Lokacija druge plošče:</label>\n                    <select class=\"form-control\" id=\"location_idSecond\" formControlName=\"location_idSecond\">\n                        <option *ngFor=\"let loc of locations\" [value]=\"loc.location_id\">{{ loc.name }}</option>\n                    </select>\n                </div>\n                \n                <button type=\"submit\" class=\"btn btn-danger\">Posodobi</button>\n            </form>\n\n        </div>\n        \n    </div>\n</div>","import { Component, OnInit, ElementRef, AfterViewInit, ViewChild, AfterContentInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray, FormArrayName, FormControl } from '@angular/forms';\nimport { first, timeout } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Plate } from '../../../models/plate';\nimport { PlateService } from '../../../service/plate.service';\n\nimport { Location } from '../../../models/location';\nimport { LocationService } from '../../../service/location.service';\n\nimport { Article } from '../../../models/article'; \nimport { ArticleService } from '../../../service/article.service';\nimport { ThrowStmt } from '@angular/compiler';\nimport { getInterpolationArgsLength } from '@angular/compiler/src/render3/view/util';\n\nimport { Material } from '../../../models/material';\nimport { MaterialService } from '../../../service/material.service';\n\n@Component({\n  selector: 'app-plate-update',\n  templateUrl: './plate-update.component.html',\n  styleUrls: ['./plate-update.component.css']\n})\nexport class PlateUpdateComponent implements OnInit {\n\n  @ViewChild('platedraw', { static: true }) canvas: ElementRef<HTMLCanvasElement>;  \n  \n  @ViewChild('platenew', { static: true }) canvasNew: ElementRef<HTMLCanvasElement>;  \n\n  private ctx: CanvasRenderingContext2D;\n  private ctxNew: CanvasRenderingContext2D;\n\n  id: number;\n  dims: FormArray;\n  articles: Article[] = [];\n  locations: Location[] = [];\n  plates: Plate[] = [];\n  plate: Plate = new Plate();\n  plateForm;\n  area: number;\n  materials: Material[] = [];\n\n  constructor(private formBuilder: FormBuilder, \n    private router: Router,\n    private route: ActivatedRoute, \n    public locationService: LocationService, \n    public articleService: ArticleService, \n    public plateService: PlateService,\n    public materialService: MaterialService) {\n  }\n\n\n  createDim(): FormGroup{\n    return this.formBuilder.group({\n      x: [''],\n      y: ['']\n    })\n  }\n\n  addDim(): void {\n   this.dims = this.plateForm.get('dims') as FormArray;\n   this.dims.push(this.createDim());\n  }\n\n  getPlate(): void {\n    this.plateService.getPlate(+this.route.snapshot.paramMap.get('plate_id')).subscribe(data => {\n      this.plate = data;\n      this.canvasDraw();\n    } );\n    \n  }\n\n  ngOnInit(): void {\n\n    this.getPlate();\n\n    this.plateForm = this.formBuilder.group({\n      plate_id: [''],\n      active: [''],\n      location_id: [''],\n      dims: this.formBuilder.array([ this.createDim() ]),\n      dimx: [''],\n      dimy: [''],\n      loc: [''],\n      act: [''],\n      charge: [''],\n      chrg: [''],\n      user_id: [],\n      thickness: [],\n      density: []\n    });\n\n    this.articleService.getArticles().subscribe((articles: Article[]) =>{\n      let arts = articles['body'];\n      \n      for(let art of arts ){\n        this.articles.push(new Article(\n          art.article_id,\n          art.name,\n          art.description,\n          art.date_created,\n          art.uname,\n          art.usurname,\n          art.user_id,\n          art.mname,\n          art.fname\n        ));\n      }\n    });\n    \n    this.locationService.getLocations().subscribe((locations: Location[]) => {\n      let locs = locations['body'];\n      \n      for(let loc of locs ){\n        this.locations.push(new Location(\n          loc.location_id, \n          loc.name, \n          loc.date_created, \n          loc.uname, \n          loc.usurname, \n          loc.user_id\n        ));\n      }\n    });\n\n    this.materialService.getMaterials().subscribe((materials: Material[])=> {\n      let mats = materials['body'];\n\n      for( let mat of mats ){\n        this.materials.push(new Material(mat.material_id, mat.name, mat.description, mat.date_created, mat.uname, mat.usurname, mat.density, mat.user_id));\n      }\n      //console.log(this.materials)\n    });\n\n    this.ctx = this.canvas.nativeElement.getContext('2d');\n    this.ctxNew = this.canvasNew.nativeElement.getContext('2d');\n    \n    this.ctx.font = \"16px Arial\";\n    this.ctxNew.font = \"16px Arial\";\n  }\n\n  canvasDraw(){\n    let dimx = this.plate.dimx.split(\",\");\n    let dimy = this.plate.dimy.split(\",\");\n    \n    let x, y, x1, y1, distance, xm, ym;\n\n    this.ctx.fillStyle = \"#FFFFFF\";\n    this.ctx.fillRect(0,0,700,350);\n    this.ctx.fillStyle = \"black\";\n\n    this.ctx.beginPath();\n    this.ctx.moveTo(5,5);\n\n    xm = ym = 0;\n    x1 = 5;\n    y1 = 5;\n\n    for( let i = 0; i < dimx.length; i++ ){\n      x = (parseInt(dimx[i])/10)+5;\n      y = (parseInt(dimy[i])/10)+5;\n      \n      this.ctx.lineTo(x,y);\n\n      //distance between 2 points... formula src: https://www.mathplanet.com/education/algebra-2/conic-sections/distance-between-two-points-and-the-midpoint\n      distance = Math.sqrt( (Math.pow((x1-x),2) + Math.pow((y1-y),2)) );\n\n      //midpoint between 2 points... formula from same url as formula for distance\n      xm = (x+x1)/2;\n      ym = (y+y1)/2;\n\n      //locate output text coordinates\n      if( x1 == 5 && x == 5 && y == 5 && y1 == 5 ){\n\n      } else if( x1 == x ){\n        this.ctx.fillText((distance*10).toString() + \" mm\", xm+20, ym );\n      } else if( y1 == y ){\n        this.ctx.fillText((distance*10).toString() + \" mm\", xm, ym+20 );\n      } else{\n        this.ctx.fillText((distance*10).toString() + \" mm\", xm+20, ym+20 );\n      }\n\n      x1 = x;\n      y1 = y;\n    }\n\n    this.ctx.lineTo(5,5);\n    this.ctx.stroke();\n    this.ctx.closePath();\n  }\n\n  animate(): void {\n    let dims =  this.plateForm.get('dims').controls\n    let x, y, x1, y1, distance, xm, ym;\n\n    this.ctxNew.fillStyle = \"#FFFFFF\";\n    this.ctxNew.fillRect(0,0,700,350);\n    this.ctxNew.fillStyle = \"black\";\n\n    this.ctxNew.beginPath();\n    this.ctxNew.moveTo(5,5);\n\n    xm = ym = 0;\n    x1 = 5;\n    y1 = 5;\n\n    for( let el of dims ){\n      x = (el.controls['x'].value/10)+5;\n      y = (el.controls['y'].value/10)+5;\n      this.ctxNew.lineTo(x,y);\n\n      //distance between 2 points... formula src: https://www.mathplanet.com/education/algebra-2/conic-sections/distance-between-two-points-and-the-midpoint\n      distance = Math.sqrt( (Math.pow((x1-x),2) + Math.pow((y1-y),2)) );\n\n      //midpoint between 2 points... formula from same url as formula for distance\n      xm = (x+x1)/2;\n      ym = (y+y1)/2;\n\n      //locate output text coordinates\n      if( x1 == x ){\n        this.ctxNew.fillText((distance*10).toString() + \" mm\", xm+20, ym );\n      } else if( y1 == y ){\n        this.ctxNew.fillText((distance*10).toString() + \" mm\", xm, ym+20 );\n      } else{\n        this.ctxNew.fillText((distance*10).toString() + \" mm\", xm+20, ym+20 );\n      }\n\n      x1 = x;\n      y1 = y;\n    }\n    this.ctxNew.lineTo(5,5);\n\n    distance = Math.sqrt( (Math.pow((x1-5),2) + Math.pow((y1-5),2)) );\n\n    xm = (5+x1)/2;\n    ym = (5+y1)/2;\n    \n    //locate output text coordinates\n    if( x1 == x ){\n      this.ctxNew.fillText((distance*10).toString() + \" mm\", xm+20, ym );\n    } else if( y1 == y ){\n      this.ctxNew.fillText((distance*10).toString() + \" mm\", xm, ym+20 );\n    } \n\n    this.ctxNew.stroke();\n    this.ctxNew.closePath();\n  }\n\n  updatePlate(plateForm){\n    this.plateForm.controls['plate_id'].setValue(+this.route.snapshot.paramMap.get('plate_id'));\n    this.plateForm.controls['dimx'].setValue(this.plate.dimx);\n    this.plateForm.controls['dimy'].setValue(this.plate.dimy);\n    this.plateForm.controls['loc'].setValue(this.plate.location_id);\n    this.plateForm.controls['act'].setValue(this.plate.active);\n    this.plateForm.controls['chrg'].setValue(this.plate.charge);\n    this.plateForm.controls['thickness'].setValue(this.plate.thickness);\n    this.plateForm.controls['user_id'].setValue(parseInt(sessionStorage.getItem('user')));\n\n\n    let density = 0;\n    let mat = this.materials.find(m => m.name == this.plate.material_name );\n    density = mat.density;\n    this.plateForm.controls['density'].setValue(density);\n    console.log(this.plateForm.value);\n\n    let area = 0;\n\n    let polygon = this.plateForm.controls['dims'].value;\n\n    //console.log(this.plateForm.controls['dims'].value);\n    //prepare array ( add { 'x': 0, 'y': 0} at start and end of polygon array)\n    polygon.unshift({ 'x': 0, 'y': 0});\n    polygon.push({ 'x': 0, 'y': 0});\n    let n = polygon.length;\n    let j = n - 1;\n    //console.log(this.plateForm.controls['dims'].value);\n    // javascript implementation of shoelace formula\n    for( let i = 0; i < n; i++ ){\n      area += ( polygon[j].x + polygon[i].x )*( polygon[j].y - polygon[i].y );\n\n      j = i;\n    }\n\n    area = area / 2;\n\n    // convert area to square centimeters\n    area/=100;\n\n    let currArea = this.plate.area;\n\n    area = Math.abs(area);\n\n    if(area > currArea ){\n      alert(\"Plošča ki ste jo vnesli je večja od trenutno vnesene plošče! Prosim popravite vnos!\");\n    }\n    else{\n      console.log(\"Posodobi ploščo!\");\n      this.plateService.updatePlate(this.plateForm.value).pipe(first()).subscribe(       \n        data => {\n          location.reload();\n          //this.router.navigate(['/plate', +this.route.snapshot.paramMap.get('plate_id')]);\n          //console.log(data);\n      },\n      error => {\n        console.log(error);\n      });\n    }\n  }\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n    <div class=\"row\">\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" [routerLink]=\"['/platecreate']\">Kreiranje plošče</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" [routerLink]=\"['/platelist']\">Seznam plošč</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a  class=\"btn btn-success\" routerLink=\"/platearchive/{{ plate.plate_id }}\">Zgodovina plošče</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" routerLink=\"/plateprint/{{ plate.plate_id }}\">Natisni odrez</a>\n        </div>\n        <div class=\"col-sm-2\">\n            <a class=\"btn btn-success\" routerLink=\"/platesplit/{{ plate.plate_id }}\">Razdeli ploščo</a>\n        </div>\n        <div class=\"col-sm-2\">\n\n        </div>\n    </div>\n</div>\n    <div class=\"card\" style=\"margin-top: 1rem;\">\n        <div class=\"card-body\">\n            <h5 class=\"card-title\">Posodobi ploščo: {{ plate.article_name }} - {{ plate.name }}</h5>\n            <div class=\"row\">\n                <div class=\"col-md-6\">\n                    <canvas #platedraw width=\"700\" height=\"350\"></canvas>\n                </div>\n                <div class=\"col-md-6\">\n                    <table class=\"table\">\n                        <tr>\n                            <td>Artikel:</td>\n                            <td>{{ plate.article_name }} - {{ plate.material_name }} {{ plate.finish_name }}</td>\n                            <td>Št. formata</td>\n                            <td>{{ plate.name }}</td>\n                        </tr>\n                        <tr>\n                            <td>Šarža:</td>\n                            <td><h5>{{ plate.charge }}</h5></td>\n                            <td>Debelina:</td>\n                            <td>{{ plate.thickness }} mm</td>\n                        </tr>\n                        <tr>\n                            <td>Površina:</td>\n                            <td>{{ plate.area }} cm&#178;</td>\n                            <td>Teža:</td>\n                            <td>{{ (((plate.thickness/10) * plate.area) * plate.density)/1000 }} kg</td>\n                        </tr>\n                        <tr>\n                            <td>PVC:</td>\n                            <td>\n                                <div *ngIf=\"plate.pvc == 1; else elseBlockPvc\">DA</div>\n                                <ng-template #elseBlockPvc>NE</ng-template>\n                            </td>\n                            <td>SB:</td>\n                            <td>\n                                <div *ngIf=\"plate.scotch == 1; else elseBlockScotch\">DA</div>\n                                <ng-template #elseBlockScotch>NE</ng-template>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Plošča dodana:</td>\n                            <td>{{ plate.date_created }} - {{ plate.user_name }} {{ plate.user_surname }}</td>\n                            <td>Plošča spremenjena:</td>\n                            <td>\n                                <div *ngIf=\"plate.date_changed != '01.01.1970 01:00'; else elseBlockDate\">{{ plate.date_changed }}</div>\n                                <ng-template #elseBlockDate>Plošča še ni bila spremenjena</ng-template>\n                            </td>\n                        </tr>\n                        <tr>\n                            <td>Trenutna lokacija:</td>\n                            <td>{{ plate.location_name }}</td>\n                            <td>Plošča v uporabi</td>\n                            <td>\n                                <div *ngIf=\"plate.active == 1; else elseBlockActive\">DA</div>\n                                <ng-template #elseBlockActive>NE</ng-template>\n                            </td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n            <form [formGroup]=\"plateForm\" (ngSubmit)=\"updatePlate(plateForm)\">\n                <div class=\"form-group\">\n                    <label for=\"charge\">Posodobi šaržo</label>\n                    <input type=\"text\" name=\"charge\" formControlName=\"charge\" class=\"form-control\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"location_id\">Zamenjaj lokacijo</label>\n                    <select class=\"form-control\" id=\"location_id\" formControlName=\"location_id\">\n                        <option *ngFor=\"let loc of locations\" [value]=\"loc.location_id\">{{ loc.name }}</option>\n                    </select>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"active\">Plošča v uporabi: </label>\n                    <select class=\"form-control\" id=\"active\" formControlName=\"active\">\n                        <option [value]=\"1\">DA</option>\n                        <option [value]=\"0\">NE</option>\n                    </select>\n                </div>\n                <h5>Nove dimenzije plošče:</h5>\n                <div class=\"row\">\n                    \n                    <div class=\"col-md-6\">\n                        <canvas #platenew width=\"700\" height=\"350\"></canvas>\n                    </div>\n                    <div class=\"col-md-6\" style=\"margin-top: -3rem;\">\n                        <div class=\"form-group\">\n                            <table class=\"table\" style=\"margin-top: 1rem;\">\n                                <tr>\n                                    <th>X</th>\n                                    <th>Y</th>\n                                </tr>\n                                <tr formArrayName=\"dims\" *ngFor=\"let dim of plateForm.get('dims').controls; let i = index\">\n                                    <ng-container [formGroupName]=\"i\">\n                                        <td><input class=\"form-control\" type=\"number\" formControlName=\"x\" placeholder=\"x (mm)\" (blur)=\"animate()\"></td>\n                                        <td><input class=\"form-control\" type=\"number\" formControlName=\"y\" placeholder=\"y (mm)\" (blur)=\"animate()\"></td>\n                                    </ng-container>\n                                </tr>\n                            </table>\n                            <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"addDim()\">Dodaj x,y</button>\n                        </div>\n                    </div>\n                </div>\n                \n                \n                <button type=\"submit\" class=\"btn btn-primary\">Posodobi ploščo</button>\n            </form>\n        </div>\n    </div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-plate',\n  templateUrl: './plate.component.html',\n  styleUrls: ['./plate.component.css']\n})\nexport class PlateComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>plate works!</p>\n","import { Component, OnInit, ElementRef, AfterViewInit, ViewChild, AfterContentInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormArray, FormArrayName, FormControl } from '@angular/forms';\nimport { first, timeout } from 'rxjs/operators';\nimport { Observable } from 'rxjs';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { Plate } from '../../../models/plate';\nimport { Plateprint } from '../../../models/plateprint';\nimport { PlateService } from '../../../service/plate.service';\n\nimport { Location } from '../../../models/location';\nimport { LocationService } from '../../../service/location.service';\n\nimport { Article } from '../../../models/article'; \nimport { ArticleService } from '../../../service/article.service';\n\n@Component({\n  selector: 'app-plateprint-detail',\n  templateUrl: './plateprint-detail.component.html',\n  styleUrls: ['./plateprint-detail.component.css']\n})\nexport class PlateprintDetailComponent implements OnInit {\n\n  id: number;\n  dims: FormArray;\n  articles: Article[] = [];\n  locations: Location[] = [];\n  plates: Plate[] = [];\n  plate: Plate = new Plate();\n  plateprints: Plateprint[] = [];\n  plateprint: any = 0;\n  plateForm;\n  area: number;\n  \n  constructor(private formBuilder: FormBuilder, \n    private router: Router,\n    private route: ActivatedRoute, \n    public locationService: LocationService, \n    public articleService: ArticleService, \n    public plateService: PlateService) {\n  }\n\n  ngOnInit(): void {\n  \n    this.getPlateprint();\n\n/*\n    this.plateService.getPlateprints(+this.route.snapshot.paramMap.get('plate_id')).subscribe((plateprints: Plateprint[]) => {\n      for( let arch of plateprints ){\n        this.plateprints.push(new Plateprint(\n          arch.plateprint_id,\n          arch.plate_id,\n          arch.date_created,\n          arch.user_name,\n          arch.user_surname,\n          arch.user_id,\n          arch.weight\n        ))\n      }\n    });*/\n\n    this.articleService.getArticles().subscribe((articles: Article[]) =>{\n      let arts = articles['body'];\n      \n      for(let art of arts ){\n        this.articles.push(new Article(\n          art.article_id,\n          art.name,\n          art.description,\n          art.date_created,\n          art.uname,\n          art.usurname,\n          art.user_id,\n          art.mname,\n          art.fname\n        ));\n      }\n    });\n    \n    this.locationService.getLocations().subscribe((locations: Location[]) => {\n      let locs = locations['body'];\n      \n      for(let loc of locs ){\n        this.locations.push(new Location(\n          loc.location_id, \n          loc.name, \n          loc.date_created, \n          loc.uname, \n          loc.usurname, \n          loc.user_id\n        ));\n      }\n    });\n\n    \n  }\n\n  getPlate(id: number): void {\n    this.plateService.getPlate(id).subscribe(data => {\n      this.plate = data;\n    } );\n    \n  }\n\n  getPlateprint(): void{\n    this.plateService.getPlateprint(+this.route.snapshot.paramMap.get('plateprint_id')).subscribe(data => {\n      console.log(data);\n      this.plateprint = new Plateprint(data.plateprint_id, data.plate_id, data.date_created, data.user_name, data.user_surname, data.user_id, data.weight);\n      this.getPlate(data.plate_id);\n      } \n    );\n  }\n\n  printfn(): void{\n    console.log(\"print was clicked\");\n    let printcontent = document.getElementById('printarea').innerHTML;\n    let originalpage = document.body.innerHTML;\n\n    document.body.innerHTML = printcontent;\n\n    window.print();\n\n    document.body.innerHTML = originalpage;\n    \n  }\n\n}\n","<div id=\"printarea\" class=\"container\" style=\"margin-top: 1rem;\">\n    <div class=\"card\" style=\"margin-top: 1rem;\">\n        <div class=\"card-body\">\n            <table class=\"table\">\n                <tr>\n                    <td>Artikel - Material/Obdelava/Debelina/PVC/SB - št. formata:</td>\n                    <td>\n                        {{ plate.article_name }} - {{ plate.material_name }} {{ plate.finish_name }} {{ plate.thickness }} mm \n                        <div *ngIf=\"plate.pvc == 1; else elseBlockPvc\">DA / </div>\n                        <ng-template #elseBlockPvc>NE / </ng-template>\n                        <div *ngIf=\"plate.scotch == 1; else elseBlockScotch\">DA</div>\n                        <ng-template #elseBlockScotch>NE</ng-template> - {{ plate.name }}\n                    </td>\n                </tr>\n                <tr>\n                    <td>Šarža:</td>\n                    <td><h5>{{ plate.charge }}</h5></td>\n                </tr>\n                <tr>\n                    <td>Datum odreza</td>\n                    <td>{{ plateprint.date_created }}</td>\n                </tr>\n                <tr>\n                    <td>Bruto odrez</td>\n                    <td>{{ plateprint.weight }} kg</td>\n                </tr>\n                <tr>\n                    <td>Uporabnik</td>\n                    <td>{{ plateprint.user_name }} {{ plateprint.user_surname }}</td>\n                </tr>\n            </table>\n        </div>\n    </div>\n</div>\n<div class=\"container\">\n    <button class=\"btn btn-primary\" style=\"margin-top: 1rem;\" (click)=\"printfn()\">Natisni</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, Validators, NgForm } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../service/auth.service';\n\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n  angForm;\n  checkd = true;\n  errorMessage = '';\n\n  constructor(\n    public fb: FormBuilder,\n    public authService: AuthService,\n    public router: Router\n    ) {\n    this.angForm = this.fb.group({\n        email: ['', [Validators.required,Validators.minLength(1), Validators.email]],\n        password: ['', Validators.required],\n        name: ['', Validators.required],\n        surname: ['', Validators.required],\n        admin: ['']\n    });\n}\n\n  ngOnInit(): void {\n  }\n\n  postdata(){\n\n    var re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    //alert(\"Nov uporabnik je bil uspešno ustvarjen!\");\n    let formValid = true;\n\n    if(this.angForm.controls['name'].value == '' || this.angForm.controls['name'].length < 3 ){\n      //alert(\"Prosim vnesite naziv plošče!\");\n      this.errorMessage+=\"Vnesite ime novega uporabnika!\\n\";\n      formValid = false;\n    }\n    if(this.angForm.controls['surname'].value == '' || this.angForm.controls['surname'].length < 3 ){\n      //alert(\"Prosim vnesite naziv plošče!\");\n      this.errorMessage+=\"Vnesite priimek novega uporabnika!\\n\";\n      formValid = false;\n    }\n    if(this.angForm.controls['password'].value == '' || this.angForm.controls['password'].length < 8 ){\n      //alert(\"Prosim vnesite naziv plošče!\");\n      this.errorMessage+=\"Geslo mora imeti najmanj osem znakov!\\n\";\n      formValid = false;\n    }\n    if(this.angForm.controls['email'].value == '' || !re.test(this.angForm.controls['email'].value) ){\n      //alert(\"Prosim vnesite naziv plošče!\");\n      this.errorMessage+=\"Epoštni naslov ni pravilen!\\n\";\n      formValid = false;\n    }\n\n    if( formValid == true ){\n      alert(\"Nov uporabnik je bil uspešno ustvarjen!\");\n      this.authService.signUp(this.angForm.value).subscribe((res) => {\n        if (res.result) {\n          this.angForm.reset();\n          \n          this.router.navigate(['/platelist']);\n        }\n      })\n    }\n    else{\n      alert(this.errorMessage);\n      this.errorMessage = '';\n    }\n    \n    \n    \n  }\n\n}\n","<div class=\"container\" style=\"margin-top: 1rem;\">\n    <div class=\"card\">\n        <div class=\"card-body\">\n            <h5>Dodaj novega uporabnika</h5>\n            <form [formGroup]=\"angForm\" (ngSubmit)=\"postdata()\" autocomplete=\"off\" >\n                <div class=\"form-group\">\n                    <label for=\"name\">Ime</label>\n                    <input type=\"text\" name=\"name\" formControlName=\"name\" autocomplete=\"off\" class=\"form-control\" placeholder=\"Ime\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"surname\">Priimek</label>\n                    <input type=\"text\" name=\"surname\" formControlName=\"surname\" autocomplete=\"off\" class=\"form-control\" placeholder=\"Priimek\">\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"email\">Email</label>\n                    <input type=\"email\" name=\"email\" formControlName=\"email\" autocomplete=\"off\" class=\"form-control\" placeholder=\"Email\">\n                </div>\n                <div class=\"form-group form-check\">\n                    <input type=\"checkbox\" class=\"form-check-input\" id=\"admin\" name=\"admin\" formControlName=\"admin\" value=1 hidden>\n                    <!--<label class=\"form-check-label\" for=\"admin\" >Dodeli administratorske pravice?</label>-->\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"Password\">Geslo</label>\n                    <input type=\"password\" name=\"Password\" formControlName=\"password\" autocomplete=\"off\" class=\"form-control\" placeholder=\"Geslo\">\n                </div>\n                <button type=\"submit\" class=\"btn btn-success\" >Registracija uporabnika!</button>\n            </form>\n        </div>\n    </div>\n</div>","export class Archive {\r\n    public platearchive_id: number;\r\n    public plate_id: number;\r\n    public date_created: string;\r\n    public user_name: string;\r\n    public user_surname: string;\r\n    public user_id: number;\r\n    public thickness: number;\r\n    public area: number;\r\n    public dimx: string;\r\n    public dimy: string;\r\n    public density: number;\r\n    public weight: number;\r\n    \r\n    constructor( platearchive_id: number, plate_id: number, date_created: string, user_name: string, user_surname: string, user_id: number, thickness: number, area: number, dimx: string, dimy: string, density: number, weight: number ) {\r\n        this.platearchive_id = platearchive_id;\r\n        this.plate_id = plate_id;\r\n        this.date_created = date_created;\r\n        this.user_id = user_id;\r\n        this.user_name = user_name;\r\n        this.user_surname = user_surname;\r\n        this.thickness = thickness;\r\n        this.dimx = dimx;\r\n        this.dimy = dimy;\r\n        this.area = area;\r\n        this.density = density;\r\n        this.weight = weight;\r\n    }\r\n    \r\n}","export class Article {\r\n    public article_id: number;\r\n    public name: string;\r\n    public description: string;\r\n    public date_created: string;\r\n    public user_name: string;\r\n    public user_surname: string;\r\n    public user_id: number;\r\n    public material_name: string;\r\n    public finish_name: string;\r\n\r\n\r\n    constructor( article_id: number, name: string, description: string, date_created: string, user_name: string, user_surname: string, user_id: number, material_name: string, finish_name: string ) {\r\n        this.article_id = article_id;\r\n        this.name = name;\r\n        this.description = description;\r\n        this.date_created = date_created;\r\n        this.user_id = user_id;\r\n        this.user_name = user_name;\r\n        this.user_surname = user_surname;\r\n        this.material_name = material_name;\r\n        this.finish_name = finish_name;\r\n    }\r\n}","export class Finish {\r\n    public finish_id: number;\r\n    public name: string;\r\n    public description: string;\r\n    public date_created: string;\r\n    public user_name: string;\r\n    public user_surname: string;\r\n    public user_id: number;\r\n    \r\n    constructor( finish_id: number, name: string, description: string, date_created: string, user_name: string, user_surname: string, user_id: number) {\r\n        this.finish_id = finish_id;\r\n        this.name = name;\r\n        this.description = description;\r\n        this.date_created = date_created;\r\n        this.user_id = user_id;\r\n        this.user_name = user_name;\r\n        this.user_surname = user_surname;\r\n    }\r\n}","export class Location {\r\n    public location_id: number;\r\n    public name: string;\r\n    public date_created: string;\r\n    public user_name: string;\r\n    public user_surname: string;\r\n    public user_id: number;\r\n    \r\n    constructor( location_id: number, name: string,  date_created: string, user_name: string, user_surname: string, user_id: number) {\r\n        this.location_id = location_id;\r\n        this.name = name;\r\n        this.date_created = date_created;\r\n        this.user_id = user_id;\r\n        this.user_name = user_name;\r\n        this.user_surname = user_surname;\r\n    }\r\n}","import { DomElementSchemaRegistry } from '@angular/compiler';\r\n\r\nexport class Material {\r\n    public material_id: number;\r\n    public name: string;\r\n    public description: string;\r\n    public date_created: string;\r\n    public user_name: string;\r\n    public user_surname: string;\r\n    public user_id: number;\r\n    public density: number;\r\n    \r\n    constructor( material_id: number, name: string, description: string, date_created: string, user_name: string, user_surname: string, density: number, user_id: number) {\r\n        this.material_id = material_id;\r\n        this.name = name;\r\n        this.description = description;\r\n        this.date_created = date_created;\r\n        this.user_id = user_id;\r\n        this.user_name = user_name;\r\n        this.user_surname = user_surname;\r\n        this.density = density;\r\n    }\r\n}","export class Plate {\r\n    public plate_id: number;\r\n    public name: string;\r\n    public charge: string;\r\n    public date_created: string;\r\n    public user_name: string;\r\n    public user_surname: string;\r\n    public user_id: number;\r\n    public material_name: string;\r\n    public finish_name: string;\r\n    public thickness: number;\r\n    public pvc: number;\r\n    public scotch: number;\r\n    public date_changed: string;\r\n    public location_name: string;\r\n    public area: number;\r\n    public dimx: string;\r\n    public dimy: string;\r\n    public article_name: string;\r\n    public article_id: number;\r\n    public location_id: number;\r\n    public active: number;\r\n    public notes: string;\r\n    public density: number;\r\n    \r\n    /*\r\n    constructor( plate_id?: number, name?: string, charge?: string, date_created?: string, user_name?: string, user_surname?: string, user_id?: number, material_name?: string, finish_name?: string, thickness?: number, area?: number, pvc?: number, scotch?: number, dimx?: string, dimy?: string, date_changed?: string, location_name?: string, article_name?: string, location_id?: number, article_id?: number, active?: number, notes?: string ) {\r\n        this.plate_id = plate_id;\r\n        this.name = name;\r\n        this.charge = charge;\r\n        this.date_created = date_created;\r\n        this.user_id = user_id;\r\n        this.user_name = user_name;\r\n        this.user_surname = user_surname;\r\n        this.material_name = material_name;\r\n        this.finish_name = finish_name;\r\n        this.thickness = thickness;\r\n        this.pvc = pvc;\r\n        this.scotch = scotch;\r\n        this.date_changed = date_changed;\r\n        this.dimx = dimx;\r\n        this.dimy = dimy;\r\n        this.location_name = location_name;\r\n        this.area = area;\r\n        this.article_name = article_name;\r\n        this.article_id = article_id;\r\n        this.location_id = location_id;\r\n        this.active = active;\r\n        this.notes = notes;\r\n    }\r\n    */\r\n}","export class Plateprint {\r\n    public plateprint_id: number;\r\n    public plate_id: number;\r\n    public date_created: string;\r\n    public user_name: string;\r\n    public user_surname: string;\r\n    public user_id: number;\r\n    public weight: number;\r\n    \r\n    constructor( plateprint_id: number, plate_id: number, date_created: string, user_name: string, user_surname: string, user_id: number, weight: number ) {\r\n        this.plateprint_id = plateprint_id;\r\n        this.plate_id = plate_id;\r\n        this.date_created = date_created;\r\n        this.user_id = user_id;\r\n        this.user_name = user_name;\r\n        this.user_surname = user_surname;\r\n        this.weight = weight;\r\n    }\r\n    \r\n}","import { Injectable } from '@angular/core';\nimport { map, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Article } from '../models/Article';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ArticleService {\n  //apiUrl: string = \"http://localhost/plateapp/php\";\n  apiUrl: string = \"192.168.1.105/php\";\n\n  constructor(    \n    private httpClient: HttpClient,\n    private router: Router ) {\n  }\n\n  public getArticles(): Observable<Article[]>{\n    return this.httpClient.get<Article[]>(this.apiUrl + '/api/article/read.php');\n  }\n\n  public createArticle(data: JSON ): Observable<any>{\n    return this.httpClient.post<any>(this.apiUrl + '/api/article/create.php', data)\n    .pipe(map(res => {\n      console.log(res);\n      return res;\n    }),\n    catchError(this.handleError));\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, CanActivate, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    public authService: AuthService,\r\n    public router: Router\r\n  ) { }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.authService.isLoggedIn !== true) {\r\n      window.alert(\"Access not allowed!\");\r\n      this.router.navigate(['home'])\r\n    }\r\n    return true;\r\n  }\r\n}","import { Injectable } from '@angular/core';\nimport { map, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { User } from '../models/user';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  //apiUrl: string = \"http://localhost/plateapp/php\";\n  apiUrl: string = \"192.168.1.105/php\";\n\n  constructor(\n    private httpClient: HttpClient,\n    private router: Router\n  ) { }\n\n  public userLogin(email: string, password: string ){\n    return this.httpClient.post<any>(this.apiUrl + '/login.php', { email, password })\n          .pipe(map(res => {\n            sessionStorage.setItem('access_token', res.token);\n            sessionStorage.setItem('user', res.user );\n            return res;\n          }),\n          catchError(this.handleError));\n  }\n\n  signUp(user: User): Observable<any> {\n    return this.httpClient.post(this.apiUrl + '/register.php', user)\n    .pipe(map(res => {\n      console.log(res);\n      return res;\n    }),\n    catchError(this.handleError));\n  }\n\n  getToken(){\n    return sessionStorage.getItem('access_token');\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n\n  get isLoggedIn(): boolean {\n    let authToken = sessionStorage.getItem('access_token');\n    return (authToken !== null) ? true : false;\n  }\n\n  doLogout() {\n    let removeToken = sessionStorage.removeItem('access_token');\n    if (removeToken == null) {\n      this.router.navigate(['home']);\n    }\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpInterceptor, HttpRequest, HttpHandler } from \"@angular/common/http\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable()\r\n\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(private authService: AuthService) { }\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n        const authToken = this.authService.getToken();\r\n        req = req.clone({\r\n            setHeaders: {\r\n                Authorization: \"Bearer \" + authToken\r\n            }\r\n        });\r\n        return next.handle(req);\r\n    }\r\n}","import { Injectable } from '@angular/core';\nimport { map, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Finish } from '../models/finish';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FinishService {\n  //apiUrl: string = \"http://localhost/plateapp/php\";\n  apiUrl: string = \"192.168.1.105/php\";\n\n  constructor(    \n    private httpClient: HttpClient,\n    private router: Router ) {\n  }\n\n  public getFinishes(): Observable<Finish[]>{\n    return this.httpClient.get<Finish[]>(this.apiUrl + '/api/finish/read.php');\n  }\n\n  public createFinish(data): Observable<any>{\n    return this.httpClient.post<any>(this.apiUrl + '/api/finish/create.php', data)\n    .pipe(map(res => {\n      console.log(res);\n      return res;\n    }),\n    catchError(this.handleError));\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { map, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Location } from '../models/location';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocationService {\n  //apiUrl: string = \"http://localhost/plateapp/php\";\n  apiUrl: string = \"192.168.1.105/php\";\n\n  constructor(    \n    private httpClient: HttpClient,\n    private router: Router ) {\n  }\n\n  public getLocations(): Observable<Location[]>{\n    return this.httpClient.get<Location[]>(this.apiUrl + '/api/location/read.php');\n  }\n\n  public createLocation(name: string, user_id: string): Observable<any>{\n    return this.httpClient.post<any>(this.apiUrl + '/api/location/create.php', { name, user_id})\n    .pipe(map(res => {\n      console.log(res);\n      return res;\n    }),\n    catchError(this.handleError));\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { map, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Material } from '../models/material';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MaterialService {\n  //apiUrl: string = \"http://localhost/plateapp/php\";\n  apiUrl: string = \"192.168.1.105/php\";\n\n  constructor(    \n    private httpClient: HttpClient,\n    private router: Router ) {\n  }\n\n  public getMaterials(): Observable<Material[]>{\n    return this.httpClient.get<Material[]>(this.apiUrl + '/api/material/read.php');\n  }\n\n  public createMaterial(data): Observable<any>{\n    return this.httpClient.post<any>(this.apiUrl + '/api/material/create.php', data)\n    .pipe(map(res => {\n      console.log(res);\n      return res;\n    }),\n    catchError(this.handleError));\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { map, catchError } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { Plate } from '../models/plate';\nimport { Archive } from '../models/archive';\nimport { Router } from '@angular/router';\nimport { Plateprint } from '../models/plateprint';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PlateService {\n  //apiUrl: string = \"http://localhost/plateapp/php\";\n  apiUrl: string = \"192.168.1.105/php\";\n\n  constructor(    \n    private httpClient: HttpClient,\n    private router: Router ) {\n  }\n\n  public getPlates(): Observable<Plate[]>{\n    return this.httpClient.get<Plate[]>(this.apiUrl + '/api/plate/read.php');\n  }\n\n  public createPlate(data: JSON): Observable<any>{\n    return this.httpClient.post<any>(this.apiUrl + '/api/plate/create.php', data)\n    .pipe(map(res => {\n      console.log(JSON.stringify(res));\n      return res;\n    }),\n    catchError(this.handleError));\n  }\n\n  public getPlate(id: number ): Observable<Plate>{\n    return this.httpClient.get<Plate>(`${this.apiUrl}/api/plate/readOne.php?id=${id}` );\n  }\n\n  public getArchives( id: number ): Observable<Archive[]>{\n    return this.httpClient.get<any>(`${this.apiUrl}/api/archive/read.php?id=${id}`);\n  }\n\n  public getPlateprints( id: number ): Observable<Plateprint[]>{\n    return this.httpClient.get<any>(`${this.apiUrl}/api/plateprint/read.php?id=${id}`);\n  }\n\n  public getPlateprint(id: number ): Observable<Plateprint>{\n    return this.httpClient.get<Plateprint>(`${this.apiUrl}/api/plateprint/readOne.php?id=${id}`);\n  }\n\n  public updatePlate( data: any ): Observable<any>{\n    //console.log(JSON.stringify(data));\n    return this.httpClient.post<any>(this.apiUrl + '/api/plate/update.php', data).pipe(map(res => {\n      console.log(JSON.stringify(res));\n      return res;\n    }),\n    catchError(this.handleError));\n  }\n\n  handleError(error: HttpErrorResponse) {\n    let msg = '';\n    if (error.error instanceof ErrorEvent) {\n      // client-side error\n      msg = error.error.message;\n    } else {\n      // server-side error\n      msg = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    return throwError(msg);\n  }\n\n  public plateSplit( data: any ): Observable<any>{\n    //console.log(JSON.stringify(data));\n    return this.httpClient.post<any>(this.apiUrl + '/api/plate/platesplit.php', data).pipe(map(res => {\n      console.log(JSON.stringify(res));\n      return res;\n    }),\n    catchError(this.handleError));\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}